[01/28 13:54:44] detectron2 INFO: Rank of current process: 0. World size: 1
[01/28 13:54:45] detectron2 INFO: Environment info:
-------------------------------  -----------------------------------------------------------------
sys.platform                     linux
Python                           3.11.11 (main, Dec  4 2024, 08:55:07) [GCC 11.4.0]
numpy                            1.26.4
detectron2                       0.6 @/usr/local/lib/python3.11/dist-packages/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.2
detectron2 arch flags            7.5
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.5.1+cu121 @/usr/local/lib/python3.11/dist-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            Tesla T4 (arch=7.5)
Driver version                   535.104.05
CUDA_HOME                        /usr/local/cuda
Pillow                           11.1.0
torchvision                      0.20.1+cu121 @/usr/local/lib/python3.11/dist-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -----------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2024.2-Product Build 20240605 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.5.3 (Git Hash 66f0cb9eb66affd2da3bf5f8d897376f04aae6af)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DLIBKINETO_NOXPUPTI=ON -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, TORCH_VERSION=2.5.1, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[01/28 13:54:45] detectron2 INFO: Command line arguments: Namespace(config_file='./configs/loveDa/semantic-segmentation/pem_R50_bs32_90k.yaml', resume=False, eval_only=False, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:49152', opts=['DATALOADER.NUM_WORKERS', '0'])
[01/28 13:54:45] detectron2 INFO: Contents of args.config_file=./configs/loveDa/semantic-segmentation/pem_R50_bs32_90k.yaml:
[38;5;204m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBase-loveDa-SemanticSegmentation.yaml[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormer[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormerHead[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mSyncBN[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;245m# pixel decoder[39m
[38;5;15m    [39m[38;5;204mPIXEL_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPEM_Pixel_Decoder[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_ENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMultiScaleMaskedTransformerDecoder[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mmulti_scale_pixel_decoder[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mCLASS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mENFORCE_INPUT_PROJ[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m[38;5;15m [39m[38;5;245m# 6 decoder layers, add one for the loss on learnable query[39m
[38;5;15m    [39m[38;5;204mTRAIN_NUM_POINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12544[39m
[38;5;15m    [39m[38;5;204mOVERSAMPLE_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3.0[39m
[38;5;15m    [39m[38;5;204mIMPORTANCE_SAMPLE_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.75[39m
[38;5;15m    [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mSEMANTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m      [39m[38;5;204mINSTANCE_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m      [39m[38;5;204mPANOPTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.8[39m
[38;5;15m      [39m[38;5;204mOBJECT_MASK_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.8[39m

[01/28 13:54:45] detectron2 INFO: Running with full config:
[38;5;204mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mREPEAT_SQRT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mloveda_val[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mloveda_train[39m
[38;5;204mFLOAT32_PRECISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;204mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCOLOR_AUG_SSD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSINGLE_CATEGORY_MAX_AREA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mabsolute[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mmask_former_semantic[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRGB[39m
[38;5;15m  [39m[38;5;204mIMAGE_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m  [39m[38;5;204mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;204mMAX_SCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m  [39m[38;5;204mMIN_SCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m614[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m716[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m819[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m921[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1126[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1228[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1331[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1433[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1536[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1638[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1740[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1843[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1945[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;204mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;204mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_resnet_backbone[39m
[38;5;15m  [39m[38;5;204mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLASS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mENFORCE_INPUT_PROJ[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mIMPORTANCE_SAMPLE_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.75[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mOVERSAMPLE_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3.0[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mINSTANCE_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m      [39m[38;5;204mOBJECT_MASK_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.8[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.8[39m
[38;5;15m      [39m[38;5;204mPANOPTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m      [39m[38;5;204mSEMANTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mSEM_SEG_POSTPROCESSING_BEFORE_INFERENCE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mTRAIN_NUM_POINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12544[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMultiScaleMaskedTransformerDecoder[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mmulti_scale_pixel_decoder[39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormer[39m
[38;5;15m  [39m[38;5;204mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;204mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSyncBN[39m
[38;5;15m    [39m[38;5;204mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_MULTI_GRID[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;204mSTEM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbasic[39m
[38;5;15m    [39m[38;5;204mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;204mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;204mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRes5ROIHeads[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;204mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m18[39m
[38;5;15m    [39m[38;5;204mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mLOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhard_pixel_mining[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormerHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSyncBN[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m    [39m[38;5;204mPIXEL_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPEM_Pixel_Decoder[39m
[38;5;15m    [39m[38;5;204mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m    [39m[38;5;204mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_ENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSTDC[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBLOCK_NUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mBLOCK_TIPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcat[39m
[38;5;15m    [39m[38;5;204mLAYERS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSyncBN[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mUSE_CONV_LAST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdetectron2://ImageNetPretrained/torchvision/R-50.pkl[39m
[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output[39m
[38;5;204mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0007[39m
[38;5;15m  [39m[38;5;204mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfull_model[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m16[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupCosineLR[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m  [39m[38;5;204mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mADAMW[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_CONSTANT_ENDING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30000[39m
[38;5;15m  [39m[38;5;204mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;204mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1280[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1536[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1792[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;204mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[01/28 13:54:45] detectron2 INFO: Full config saved to ./output/config.yaml
[01/28 13:54:45] d2.utils.env INFO: Using a generated random seed 45238872
[01/28 13:54:46] d2.engine.defaults INFO: Model:
MaskFormer(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): MaskFormerHead(
    (pixel_decoder): PEM_Pixel_Decoder(
      (in_projections): ModuleList(
        (0): ConvBNReLU(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU()
        )
        (1): ConvBNReLU(
          (conv): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU()
        )
        (2): ConvBNReLU(
          (conv): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU()
        )
        (3): ConvBNReLU(
          (conv): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU()
        )
      )
      (conv_avg): ConvBNReLU(
        (conv): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
      (csm): ModuleList(
        (0-3): 4 x CSM(
          (mlp): Sequential(
            (0): MLP(
              (mlp): Sequential(
                (0): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
                (3): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              )
            )
            (1): Sigmoid()
          )
        )
      )
      (dcn): ModuleList(
        (0-2): 3 x DeformLayer(
          (dcn_offset): Conv2d(128, 27, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (dcn): ModulatedDeformConv(in_channels=128, out_channels=128, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=1, deformable_groups=1, bias=False)
          (dcn_bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (up_sample): ConvTranspose2d(128, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
          (up_bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU()
        )
      )
      (out): ConvBNReLU(
        (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-5): 6 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-5): 6 x PEM_CA(
          (feature_proj): LocalRepresentation(
            (to_query_3x3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256)
            (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (out): Linear(in_features=256, out_features=256, bias=True)
          )
          (query_proj): Sequential(
            (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            (1): Linear(in_features=256, out_features=256, bias=True)
          )
          (proj): Linear(in_features=256, out_features=256, bias=True)
          (final): Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-5): 6 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(100, 256)
      (query_embed): Embedding(100, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
      )
      (class_embed): Linear(in_features=256, out_features=8, bias=True)
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0}
      num_classes: 7
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
)
[01/28 13:54:46] d2.data.build INFO: Using training sampler TrainingSampler
[01/28 13:54:46] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[01/28 13:54:46] d2.data.common INFO: Serializing 1156 elements to byte tensors and concatenating them all ...
[01/28 13:54:46] d2.data.common INFO: Serialized dataset takes 0.17 MiB
[01/28 13:54:46] d2.data.build INFO: Making batched data loader with batch_size=16
[01/28 13:54:46] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/torchvision/R-50.pkl ...
[01/28 13:54:46] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /root/.torch/iopath_cache/detectron2/ImageNetPretrained/torchvision/R-50.pkl ...
[01/28 13:54:46] fvcore.common.checkpoint INFO: Reading a file from 'torchvision'
[01/28 13:54:47] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone - Total num: 53
[01/28 13:54:47] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mcriterion.empty_weight[0m
[34msem_seg_head.pixel_decoder.conv_avg.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.conv_avg.conv.weight[0m
[34msem_seg_head.pixel_decoder.csm.0.mlp.0.mlp.0.weight[0m
[34msem_seg_head.pixel_decoder.csm.0.mlp.0.mlp.1.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.csm.0.mlp.0.mlp.3.weight[0m
[34msem_seg_head.pixel_decoder.csm.1.mlp.0.mlp.0.weight[0m
[34msem_seg_head.pixel_decoder.csm.1.mlp.0.mlp.1.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.csm.1.mlp.0.mlp.3.weight[0m
[34msem_seg_head.pixel_decoder.csm.2.mlp.0.mlp.0.weight[0m
[34msem_seg_head.pixel_decoder.csm.2.mlp.0.mlp.1.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.csm.2.mlp.0.mlp.3.weight[0m
[34msem_seg_head.pixel_decoder.csm.3.mlp.0.mlp.0.weight[0m
[34msem_seg_head.pixel_decoder.csm.3.mlp.0.mlp.1.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.csm.3.mlp.0.mlp.3.weight[0m
[34msem_seg_head.pixel_decoder.dcn.0.dcn.weight[0m
[34msem_seg_head.pixel_decoder.dcn.0.dcn_bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.0.dcn_offset.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.0.up_bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.0.up_sample.weight[0m
[34msem_seg_head.pixel_decoder.dcn.1.dcn.weight[0m
[34msem_seg_head.pixel_decoder.dcn.1.dcn_bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.1.dcn_offset.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.1.up_bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.1.up_sample.weight[0m
[34msem_seg_head.pixel_decoder.dcn.2.dcn.weight[0m
[34msem_seg_head.pixel_decoder.dcn.2.dcn_bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.2.dcn_offset.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.2.up_bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.2.up_sample.weight[0m
[34msem_seg_head.pixel_decoder.in_projections.0.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.in_projections.0.conv.weight[0m
[34msem_seg_head.pixel_decoder.in_projections.1.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.in_projections.1.conv.weight[0m
[34msem_seg_head.pixel_decoder.in_projections.2.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.in_projections.2.conv.weight[0m
[34msem_seg_head.pixel_decoder.in_projections.3.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.in_projections.3.conv.weight[0m
[34msem_seg_head.pixel_decoder.out.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.out.conv.weight[0m
[34msem_seg_head.predictor.class_embed.{bias, weight}[0m
[34msem_seg_head.predictor.decoder_norm.{bias, weight}[0m
[34msem_seg_head.predictor.input_proj.0.{bias, weight}[0m
[34msem_seg_head.predictor.input_proj.1.{bias, weight}[0m
[34msem_seg_head.predictor.input_proj.2.{bias, weight}[0m
[34msem_seg_head.predictor.level_embed.weight[0m
[34msem_seg_head.predictor.mask_embed.layers.0.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.1.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.2.{bias, weight}[0m
[34msem_seg_head.predictor.query_embed.weight[0m
[34msem_seg_head.predictor.query_feat.weight[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.alpha[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.feature_proj.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.feature_proj.out.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.feature_proj.to_query_3x3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.final.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.query_proj.0.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.query_proj.1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.alpha[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.feature_proj.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.feature_proj.out.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.feature_proj.to_query_3x3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.final.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.query_proj.0.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.query_proj.1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.alpha[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.feature_proj.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.feature_proj.out.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.feature_proj.to_query_3x3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.final.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.query_proj.0.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.query_proj.1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.3.alpha[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.3.feature_proj.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.3.feature_proj.out.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.3.feature_proj.to_query_3x3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.3.final.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.3.proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.3.query_proj.0.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.3.query_proj.1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.4.alpha[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.4.feature_proj.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.4.feature_proj.out.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.4.feature_proj.to_query_3x3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.4.final.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.4.proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.4.query_proj.0.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.4.query_proj.1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.5.alpha[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.5.feature_proj.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.5.feature_proj.out.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.5.feature_proj.to_query_3x3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.5.final.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.5.proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.5.query_proj.0.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.5.query_proj.1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.0.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.0.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.0.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.1.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.1.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.1.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.2.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.2.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.2.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.3.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.3.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.3.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.4.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.4.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.4.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.5.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.5.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.5.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.0.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.0.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.0.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.1.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.1.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.1.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.2.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.2.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.2.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.3.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.3.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.3.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.4.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.4.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.4.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.5.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.5.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.5.self_attn.{in_proj_bias, in_proj_weight}[0m
[01/28 13:54:47] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mstem.fc.{bias, weight}[0m
[01/28 13:54:47] d2.engine.train_loop INFO: Starting training from iteration 0
[01/28 13:55:59] d2.utils.events INFO:  eta: 3:31:00  iter: 19  total_loss: 55.63  loss_ce: 2.134  loss_mask: 2.432  loss_dice: 3.483  loss_ce_0: 3.877  loss_mask_0: 2.371  loss_dice_0: 3.382  loss_ce_1: 1.769  loss_mask_1: 2.437  loss_dice_1: 3.389  loss_ce_2: 1.87  loss_mask_2: 2.444  loss_dice_2: 3.407  loss_ce_3: 1.938  loss_mask_3: 2.452  loss_dice_3: 3.415  loss_ce_4: 2.108  loss_mask_4: 2.463  loss_dice_4: 3.415  loss_ce_5: 2.08  loss_mask_5: 2.47  loss_dice_5: 3.474    time: 3.2703  last_time: 3.0665  data_time: 1.8590  last_data_time: 1.6607   lr: 0.00069996  max_mem: 12883M
[01/28 13:57:09] d2.utils.events INFO:  eta: 3:21:30  iter: 39  total_loss: 47.79  loss_ce: 1.079  loss_mask: 2.37  loss_dice: 3.056  loss_ce_0: 3.519  loss_mask_0: 2.257  loss_dice_0: 3.076  loss_ce_1: 1.098  loss_mask_1: 2.387  loss_dice_1: 3.022  loss_ce_2: 0.9706  loss_mask_2: 2.371  loss_dice_2: 3.031  loss_ce_3: 1.013  loss_mask_3: 2.351  loss_dice_3: 3.057  loss_ce_4: 1.038  loss_mask_4: 2.375  loss_dice_4: 3.052  loss_ce_5: 1.089  loss_mask_5: 2.343  loss_dice_5: 3.047    time: 3.2253  last_time: 3.5905  data_time: 1.7945  last_data_time: 2.1161   lr: 0.00069984  max_mem: 12883M
[01/28 13:58:13] d2.utils.events INFO:  eta: 3:19:42  iter: 59  total_loss: 44.65  loss_ce: 0.8337  loss_mask: 2.437  loss_dice: 2.892  loss_ce_0: 3.115  loss_mask_0: 2.305  loss_dice_0: 2.87  loss_ce_1: 0.7083  loss_mask_1: 2.453  loss_dice_1: 2.834  loss_ce_2: 0.7036  loss_mask_2: 2.44  loss_dice_2: 2.842  loss_ce_3: 0.725  loss_mask_3: 2.406  loss_dice_3: 2.861  loss_ce_4: 0.7605  loss_mask_4: 2.42  loss_dice_4: 2.866  loss_ce_5: 0.7967  loss_mask_5: 2.425  loss_dice_5: 2.88    time: 3.2201  last_time: 2.9842  data_time: 1.7936  last_data_time: 1.6037   lr: 0.00069962  max_mem: 12886M
[01/28 13:59:18] d2.utils.events INFO:  eta: 3:19:31  iter: 79  total_loss: 42.5  loss_ce: 0.7073  loss_mask: 2.416  loss_dice: 2.691  loss_ce_0: 2.838  loss_mask_0: 2.287  loss_dice_0: 2.625  loss_ce_1: 0.7364  loss_mask_1: 2.401  loss_dice_1: 2.639  loss_ce_2: 0.6961  loss_mask_2: 2.429  loss_dice_2: 2.655  loss_ce_3: 0.6676  loss_mask_3: 2.4  loss_dice_3: 2.655  loss_ce_4: 0.68  loss_mask_4: 2.404  loss_dice_4: 2.67  loss_ce_5: 0.7039  loss_mask_5: 2.398  loss_dice_5: 2.694    time: 3.2201  last_time: 3.2607  data_time: 1.7905  last_data_time: 1.8320   lr: 0.00069933  max_mem: 12886M
[01/28 14:00:22] d2.utils.events INFO:  eta: 3:18:54  iter: 99  total_loss: 41.83  loss_ce: 0.7607  loss_mask: 2.369  loss_dice: 2.663  loss_ce_0: 2.517  loss_mask_0: 2.282  loss_dice_0: 2.606  loss_ce_1: 0.8167  loss_mask_1: 2.364  loss_dice_1: 2.639  loss_ce_2: 0.7387  loss_mask_2: 2.375  loss_dice_2: 2.633  loss_ce_3: 0.7254  loss_mask_3: 2.365  loss_dice_3: 2.658  loss_ce_4: 0.7437  loss_mask_4: 2.355  loss_dice_4: 2.653  loss_ce_5: 0.755  loss_mask_5: 2.346  loss_dice_5: 2.656    time: 3.2198  last_time: 2.9704  data_time: 1.7884  last_data_time: 1.5529   lr: 0.00069894  max_mem: 12886M
[01/28 14:01:26] d2.utils.events INFO:  eta: 3:17:11  iter: 119  total_loss: 39.36  loss_ce: 0.6204  loss_mask: 2.253  loss_dice: 2.604  loss_ce_0: 2.192  loss_mask_0: 2.136  loss_dice_0: 2.531  loss_ce_1: 0.5898  loss_mask_1: 2.251  loss_dice_1: 2.605  loss_ce_2: 0.5886  loss_mask_2: 2.25  loss_dice_2: 2.607  loss_ce_3: 0.6088  loss_mask_3: 2.24  loss_dice_3: 2.604  loss_ce_4: 0.5871  loss_mask_4: 2.235  loss_dice_4: 2.609  loss_ce_5: 0.6155  loss_mask_5: 2.247  loss_dice_5: 2.606    time: 3.2157  last_time: 2.9516  data_time: 1.7621  last_data_time: 1.5387   lr: 0.00069847  max_mem: 12886M
[01/28 14:02:29] d2.utils.events INFO:  eta: 3:16:00  iter: 139  total_loss: 37.16  loss_ce: 0.492  loss_mask: 2.182  loss_dice: 2.476  loss_ce_0: 1.882  loss_mask_0: 2.101  loss_dice_0: 2.426  loss_ce_1: 0.5348  loss_mask_1: 2.159  loss_dice_1: 2.455  loss_ce_2: 0.468  loss_mask_2: 2.166  loss_dice_2: 2.449  loss_ce_3: 0.4723  loss_mask_3: 2.167  loss_dice_3: 2.46  loss_ce_4: 0.4778  loss_mask_4: 2.17  loss_dice_4: 2.463  loss_ce_5: 0.4726  loss_mask_5: 2.184  loss_dice_5: 2.473    time: 3.2074  last_time: 3.0965  data_time: 1.7264  last_data_time: 1.6684   lr: 0.00069792  max_mem: 12886M
[01/28 14:03:33] d2.utils.events INFO:  eta: 3:14:48  iter: 159  total_loss: 37.89  loss_ce: 0.5341  loss_mask: 2.216  loss_dice: 2.521  loss_ce_0: 1.638  loss_mask_0: 2.152  loss_dice_0: 2.487  loss_ce_1: 0.5293  loss_mask_1: 2.208  loss_dice_1: 2.493  loss_ce_2: 0.5145  loss_mask_2: 2.199  loss_dice_2: 2.513  loss_ce_3: 0.5117  loss_mask_3: 2.204  loss_dice_3: 2.513  loss_ce_4: 0.5038  loss_mask_4: 2.201  loss_dice_4: 2.524  loss_ce_5: 0.5354  loss_mask_5: 2.197  loss_dice_5: 2.507    time: 3.2025  last_time: 3.1087  data_time: 1.7285  last_data_time: 1.7035   lr: 0.00069727  max_mem: 12886M
[01/28 14:04:36] d2.utils.events INFO:  eta: 3:14:13  iter: 179  total_loss: 37.16  loss_ce: 0.4629  loss_mask: 2.182  loss_dice: 2.5  loss_ce_0: 1.416  loss_mask_0: 2.154  loss_dice_0: 2.513  loss_ce_1: 0.5054  loss_mask_1: 2.176  loss_dice_1: 2.518  loss_ce_2: 0.4879  loss_mask_2: 2.155  loss_dice_2: 2.511  loss_ce_3: 0.488  loss_mask_3: 2.155  loss_dice_3: 2.502  loss_ce_4: 0.5056  loss_mask_4: 2.166  loss_dice_4: 2.493  loss_ce_5: 0.4853  loss_mask_5: 2.153  loss_dice_5: 2.497    time: 3.1997  last_time: 3.0665  data_time: 1.7399  last_data_time: 1.6107   lr: 0.00069655  max_mem: 12886M
[01/28 14:05:41] d2.utils.events INFO:  eta: 3:13:40  iter: 199  total_loss: 36.27  loss_ce: 0.4398  loss_mask: 2.189  loss_dice: 2.363  loss_ce_0: 1.178  loss_mask_0: 2.124  loss_dice_0: 2.359  loss_ce_1: 0.49  loss_mask_1: 2.158  loss_dice_1: 2.344  loss_ce_2: 0.4513  loss_mask_2: 2.187  loss_dice_2: 2.325  loss_ce_3: 0.4425  loss_mask_3: 2.189  loss_dice_3: 2.347  loss_ce_4: 0.4615  loss_mask_4: 2.189  loss_dice_4: 2.349  loss_ce_5: 0.4646  loss_mask_5: 2.186  loss_dice_5: 2.367    time: 3.2034  last_time: 3.2499  data_time: 1.7986  last_data_time: 1.8201   lr: 0.00069573  max_mem: 12886M
[01/28 14:06:46] d2.utils.events INFO:  eta: 3:13:03  iter: 219  total_loss: 36.02  loss_ce: 0.463  loss_mask: 2.206  loss_dice: 2.439  loss_ce_0: 1.043  loss_mask_0: 2.145  loss_dice_0: 2.417  loss_ce_1: 0.485  loss_mask_1: 2.191  loss_dice_1: 2.412  loss_ce_2: 0.4488  loss_mask_2: 2.224  loss_dice_2: 2.42  loss_ce_3: 0.4368  loss_mask_3: 2.217  loss_dice_3: 2.428  loss_ce_4: 0.4447  loss_mask_4: 2.212  loss_dice_4: 2.43  loss_ce_5: 0.462  loss_mask_5: 2.191  loss_dice_5: 2.438    time: 3.2082  last_time: 3.8293  data_time: 1.8202  last_data_time: 2.3776   lr: 0.00069484  max_mem: 12886M
[01/28 14:07:50] d2.utils.events INFO:  eta: 3:12:11  iter: 239  total_loss: 36.01  loss_ce: 0.4557  loss_mask: 2.236  loss_dice: 2.372  loss_ce_0: 0.9285  loss_mask_0: 2.186  loss_dice_0: 2.347  loss_ce_1: 0.4872  loss_mask_1: 2.243  loss_dice_1: 2.331  loss_ce_2: 0.4828  loss_mask_2: 2.196  loss_dice_2: 2.356  loss_ce_3: 0.4594  loss_mask_3: 2.217  loss_dice_3: 2.372  loss_ce_4: 0.4536  loss_mask_4: 2.205  loss_dice_4: 2.362  loss_ce_5: 0.45  loss_mask_5: 2.232  loss_dice_5: 2.354    time: 3.2080  last_time: 2.9726  data_time: 1.7725  last_data_time: 1.5674   lr: 0.00069385  max_mem: 12886M
[01/28 14:08:55] d2.utils.events INFO:  eta: 3:11:00  iter: 259  total_loss: 35.32  loss_ce: 0.3935  loss_mask: 2.13  loss_dice: 2.458  loss_ce_0: 0.8266  loss_mask_0: 2.072  loss_dice_0: 2.385  loss_ce_1: 0.4305  loss_mask_1: 2.13  loss_dice_1: 2.429  loss_ce_2: 0.4004  loss_mask_2: 2.146  loss_dice_2: 2.44  loss_ce_3: 0.4141  loss_mask_3: 2.139  loss_dice_3: 2.438  loss_ce_4: 0.3929  loss_mask_4: 2.148  loss_dice_4: 2.445  loss_ce_5: 0.3951  loss_mask_5: 2.129  loss_dice_5: 2.45    time: 3.2095  last_time: 3.1836  data_time: 1.7897  last_data_time: 1.7724   lr: 0.00069278  max_mem: 12886M
[01/28 14:09:58] d2.utils.events INFO:  eta: 3:09:55  iter: 279  total_loss: 34.28  loss_ce: 0.4783  loss_mask: 2.11  loss_dice: 2.265  loss_ce_0: 0.7464  loss_mask_0: 2.074  loss_dice_0: 2.268  loss_ce_1: 0.5125  loss_mask_1: 2.098  loss_dice_1: 2.303  loss_ce_2: 0.4769  loss_mask_2: 2.092  loss_dice_2: 2.253  loss_ce_3: 0.4542  loss_mask_3: 2.092  loss_dice_3: 2.273  loss_ce_4: 0.4556  loss_mask_4: 2.089  loss_dice_4: 2.272  loss_ce_5: 0.4783  loss_mask_5: 2.104  loss_dice_5: 2.268    time: 3.2073  last_time: 2.9615  data_time: 1.7453  last_data_time: 1.4944   lr: 0.00069163  max_mem: 12886M
[01/28 14:11:03] d2.utils.events INFO:  eta: 3:09:06  iter: 299  total_loss: 34.54  loss_ce: 0.3977  loss_mask: 2.192  loss_dice: 2.391  loss_ce_0: 0.6997  loss_mask_0: 2.086  loss_dice_0: 2.325  loss_ce_1: 0.4887  loss_mask_1: 2.158  loss_dice_1: 2.358  loss_ce_2: 0.4265  loss_mask_2: 2.136  loss_dice_2: 2.364  loss_ce_3: 0.422  loss_mask_3: 2.189  loss_dice_3: 2.374  loss_ce_4: 0.4083  loss_mask_4: 2.178  loss_dice_4: 2.389  loss_ce_5: 0.4157  loss_mask_5: 2.187  loss_dice_5: 2.374    time: 3.2098  last_time: 3.1427  data_time: 1.8044  last_data_time: 1.7266   lr: 0.00069039  max_mem: 12886M
[01/28 14:12:06] d2.utils.events INFO:  eta: 3:07:57  iter: 319  total_loss: 34.67  loss_ce: 0.4142  loss_mask: 2.125  loss_dice: 2.265  loss_ce_0: 0.6713  loss_mask_0: 2.09  loss_dice_0: 2.248  loss_ce_1: 0.4682  loss_mask_1: 2.123  loss_dice_1: 2.247  loss_ce_2: 0.4377  loss_mask_2: 2.13  loss_dice_2: 2.238  loss_ce_3: 0.4513  loss_mask_3: 2.121  loss_dice_3: 2.24  loss_ce_4: 0.4181  loss_mask_4: 2.111  loss_dice_4: 2.255  loss_ce_5: 0.4177  loss_mask_5: 2.112  loss_dice_5: 2.265    time: 3.2059  last_time: 3.3267  data_time: 1.7108  last_data_time: 1.8145   lr: 0.00068907  max_mem: 12886M
[01/28 14:13:11] d2.utils.events INFO:  eta: 3:06:46  iter: 339  total_loss: 34.54  loss_ce: 0.4633  loss_mask: 2.148  loss_dice: 2.297  loss_ce_0: 0.6484  loss_mask_0: 2.122  loss_dice_0: 2.307  loss_ce_1: 0.467  loss_mask_1: 2.15  loss_dice_1: 2.298  loss_ce_2: 0.4473  loss_mask_2: 2.153  loss_dice_2: 2.308  loss_ce_3: 0.4421  loss_mask_3: 2.13  loss_dice_3: 2.318  loss_ce_4: 0.4552  loss_mask_4: 2.132  loss_dice_4: 2.314  loss_ce_5: 0.4393  loss_mask_5: 2.135  loss_dice_5: 2.311    time: 3.2075  last_time: 2.9442  data_time: 1.8016  last_data_time: 1.5420   lr: 0.00068767  max_mem: 12886M
[01/28 14:14:15] d2.utils.events INFO:  eta: 3:05:41  iter: 359  total_loss: 34.74  loss_ce: 0.4819  loss_mask: 2.152  loss_dice: 2.313  loss_ce_0: 0.6263  loss_mask_0: 2.092  loss_dice_0: 2.328  loss_ce_1: 0.5552  loss_mask_1: 2.135  loss_dice_1: 2.302  loss_ce_2: 0.4727  loss_mask_2: 2.127  loss_dice_2: 2.296  loss_ce_3: 0.4625  loss_mask_3: 2.129  loss_dice_3: 2.295  loss_ce_4: 0.4768  loss_mask_4: 2.14  loss_dice_4: 2.303  loss_ce_5: 0.4659  loss_mask_5: 2.145  loss_dice_5: 2.31    time: 3.2082  last_time: 3.9191  data_time: 1.7868  last_data_time: 2.4631   lr: 0.00068618  max_mem: 12886M
[01/28 14:15:19] d2.utils.events INFO:  eta: 3:04:37  iter: 379  total_loss: 33.24  loss_ce: 0.5127  loss_mask: 2.075  loss_dice: 2.247  loss_ce_0: 0.5791  loss_mask_0: 2.052  loss_dice_0: 2.249  loss_ce_1: 0.5186  loss_mask_1: 2.082  loss_dice_1: 2.245  loss_ce_2: 0.4486  loss_mask_2: 2.071  loss_dice_2: 2.239  loss_ce_3: 0.4605  loss_mask_3: 2.075  loss_dice_3: 2.226  loss_ce_4: 0.4702  loss_mask_4: 2.07  loss_dice_4: 2.232  loss_ce_5: 0.4764  loss_mask_5: 2.095  loss_dice_5: 2.241    time: 3.2060  last_time: 2.8910  data_time: 1.7347  last_data_time: 1.4740   lr: 0.00068461  max_mem: 12886M
[01/28 14:16:23] d2.utils.events INFO:  eta: 3:03:34  iter: 399  total_loss: 34.25  loss_ce: 0.4032  loss_mask: 2.09  loss_dice: 2.331  loss_ce_0: 0.5784  loss_mask_0: 2.046  loss_dice_0: 2.277  loss_ce_1: 0.4238  loss_mask_1: 2.09  loss_dice_1: 2.293  loss_ce_2: 0.3846  loss_mask_2: 2.102  loss_dice_2: 2.324  loss_ce_3: 0.3882  loss_mask_3: 2.109  loss_dice_3: 2.322  loss_ce_4: 0.4072  loss_mask_4: 2.101  loss_dice_4: 2.328  loss_ce_5: 0.4126  loss_mask_5: 2.092  loss_dice_5: 2.329    time: 3.2063  last_time: 3.5123  data_time: 1.7751  last_data_time: 2.0833   lr: 0.00068295  max_mem: 12886M
[01/28 14:17:26] d2.utils.events INFO:  eta: 3:02:25  iter: 419  total_loss: 34.31  loss_ce: 0.4576  loss_mask: 2.081  loss_dice: 2.323  loss_ce_0: 0.5702  loss_mask_0: 2.087  loss_dice_0: 2.274  loss_ce_1: 0.5089  loss_mask_1: 2.079  loss_dice_1: 2.287  loss_ce_2: 0.4481  loss_mask_2: 2.066  loss_dice_2: 2.304  loss_ce_3: 0.436  loss_mask_3: 2.071  loss_dice_3: 2.303  loss_ce_4: 0.4607  loss_mask_4: 2.076  loss_dice_4: 2.296  loss_ce_5: 0.4539  loss_mask_5: 2.086  loss_dice_5: 2.315    time: 3.2038  last_time: 2.9874  data_time: 1.7204  last_data_time: 1.5863   lr: 0.00068122  max_mem: 12886M
[01/28 14:18:30] d2.utils.events INFO:  eta: 3:01:24  iter: 439  total_loss: 33.7  loss_ce: 0.3984  loss_mask: 2.076  loss_dice: 2.285  loss_ce_0: 0.547  loss_mask_0: 2.043  loss_dice_0: 2.281  loss_ce_1: 0.4263  loss_mask_1: 2.074  loss_dice_1: 2.287  loss_ce_2: 0.4098  loss_mask_2: 2.077  loss_dice_2: 2.295  loss_ce_3: 0.4215  loss_mask_3: 2.078  loss_dice_3: 2.28  loss_ce_4: 0.4044  loss_mask_4: 2.079  loss_dice_4: 2.299  loss_ce_5: 0.4101  loss_mask_5: 2.075  loss_dice_5: 2.306    time: 3.2030  last_time: 3.2177  data_time: 1.7455  last_data_time: 1.7668   lr: 0.0006794  max_mem: 12886M
[01/28 14:19:33] d2.utils.events INFO:  eta: 3:00:19  iter: 459  total_loss: 32.72  loss_ce: 0.3784  loss_mask: 2.021  loss_dice: 2.241  loss_ce_0: 0.5371  loss_mask_0: 2  loss_dice_0: 2.209  loss_ce_1: 0.4334  loss_mask_1: 2.029  loss_dice_1: 2.231  loss_ce_2: 0.3747  loss_mask_2: 2.023  loss_dice_2: 2.211  loss_ce_3: 0.3635  loss_mask_3: 2.011  loss_dice_3: 2.211  loss_ce_4: 0.3751  loss_mask_4: 2.022  loss_dice_4: 2.238  loss_ce_5: 0.3969  loss_mask_5: 2.012  loss_dice_5: 2.25    time: 3.2006  last_time: 2.9841  data_time: 1.7165  last_data_time: 1.5639   lr: 0.0006775  max_mem: 12886M
[01/28 14:20:36] d2.utils.events INFO:  eta: 2:59:13  iter: 479  total_loss: 32.62  loss_ce: 0.4215  loss_mask: 1.994  loss_dice: 2.187  loss_ce_0: 0.5626  loss_mask_0: 1.974  loss_dice_0: 2.177  loss_ce_1: 0.4542  loss_mask_1: 1.995  loss_dice_1: 2.173  loss_ce_2: 0.4478  loss_mask_2: 1.976  loss_dice_2: 2.169  loss_ce_3: 0.4171  loss_mask_3: 1.991  loss_dice_3: 2.166  loss_ce_4: 0.4195  loss_mask_4: 1.989  loss_dice_4: 2.171  loss_ce_5: 0.4396  loss_mask_5: 1.985  loss_dice_5: 2.165    time: 3.1992  last_time: 2.8604  data_time: 1.7331  last_data_time: 1.4432   lr: 0.00067552  max_mem: 12886M
[01/28 14:21:40] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2048, sample_style='choice')]
[01/28 14:21:40] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[01/28 14:21:40] d2.data.common INFO: Serializing 992 elements to byte tensors and concatenating them all ...
[01/28 14:21:40] d2.data.common INFO: Serialized dataset takes 0.14 MiB
[01/28 14:21:40] d2.evaluation.evaluator INFO: Start inference on 992 batches
[01/28 14:21:43] d2.evaluation.evaluator INFO: Inference done 11/992. Dataloading: 0.0619 s/iter. Inference: 0.1006 s/iter. Eval: 0.0727 s/iter. Total: 0.2352 s/iter. ETA=0:03:50
[01/28 14:21:48] d2.evaluation.evaluator INFO: Inference done 37/992. Dataloading: 0.0512 s/iter. Inference: 0.0997 s/iter. Eval: 0.0546 s/iter. Total: 0.2056 s/iter. ETA=0:03:16
[01/28 14:21:53] d2.evaluation.evaluator INFO: Inference done 63/992. Dataloading: 0.0507 s/iter. Inference: 0.0997 s/iter. Eval: 0.0521 s/iter. Total: 0.2025 s/iter. ETA=0:03:08
[01/28 14:21:58] d2.evaluation.evaluator INFO: Inference done 86/992. Dataloading: 0.0542 s/iter. Inference: 0.0997 s/iter. Eval: 0.0551 s/iter. Total: 0.2090 s/iter. ETA=0:03:09
[01/28 14:22:03] d2.evaluation.evaluator INFO: Inference done 112/992. Dataloading: 0.0531 s/iter. Inference: 0.0996 s/iter. Eval: 0.0536 s/iter. Total: 0.2064 s/iter. ETA=0:03:01
[01/28 14:22:08] d2.evaluation.evaluator INFO: Inference done 136/992. Dataloading: 0.0536 s/iter. Inference: 0.0995 s/iter. Eval: 0.0542 s/iter. Total: 0.2073 s/iter. ETA=0:02:57
[01/28 14:22:14] d2.evaluation.evaluator INFO: Inference done 160/992. Dataloading: 0.0544 s/iter. Inference: 0.0994 s/iter. Eval: 0.0546 s/iter. Total: 0.2085 s/iter. ETA=0:02:53
[01/28 14:22:19] d2.evaluation.evaluator INFO: Inference done 186/992. Dataloading: 0.0535 s/iter. Inference: 0.0994 s/iter. Eval: 0.0535 s/iter. Total: 0.2064 s/iter. ETA=0:02:46
[01/28 14:22:24] d2.evaluation.evaluator INFO: Inference done 209/992. Dataloading: 0.0544 s/iter. Inference: 0.0994 s/iter. Eval: 0.0546 s/iter. Total: 0.2084 s/iter. ETA=0:02:43
[01/28 14:22:29] d2.evaluation.evaluator INFO: Inference done 235/992. Dataloading: 0.0539 s/iter. Inference: 0.0993 s/iter. Eval: 0.0540 s/iter. Total: 0.2074 s/iter. ETA=0:02:36
[01/28 14:22:34] d2.evaluation.evaluator INFO: Inference done 261/992. Dataloading: 0.0534 s/iter. Inference: 0.0994 s/iter. Eval: 0.0534 s/iter. Total: 0.2062 s/iter. ETA=0:02:30
[01/28 14:22:39] d2.evaluation.evaluator INFO: Inference done 283/992. Dataloading: 0.0546 s/iter. Inference: 0.0994 s/iter. Eval: 0.0543 s/iter. Total: 0.2083 s/iter. ETA=0:02:27
[01/28 14:22:44] d2.evaluation.evaluator INFO: Inference done 309/992. Dataloading: 0.0540 s/iter. Inference: 0.0993 s/iter. Eval: 0.0538 s/iter. Total: 0.2072 s/iter. ETA=0:02:21
[01/28 14:22:49] d2.evaluation.evaluator INFO: Inference done 334/992. Dataloading: 0.0537 s/iter. Inference: 0.0994 s/iter. Eval: 0.0538 s/iter. Total: 0.2068 s/iter. ETA=0:02:16
[01/28 14:22:54] d2.evaluation.evaluator INFO: Inference done 357/992. Dataloading: 0.0542 s/iter. Inference: 0.0994 s/iter. Eval: 0.0543 s/iter. Total: 0.2079 s/iter. ETA=0:02:12
[01/28 14:23:00] d2.evaluation.evaluator INFO: Inference done 383/992. Dataloading: 0.0538 s/iter. Inference: 0.0994 s/iter. Eval: 0.0539 s/iter. Total: 0.2071 s/iter. ETA=0:02:06
[01/28 14:23:05] d2.evaluation.evaluator INFO: Inference done 407/992. Dataloading: 0.0541 s/iter. Inference: 0.0994 s/iter. Eval: 0.0541 s/iter. Total: 0.2077 s/iter. ETA=0:02:01
[01/28 14:23:10] d2.evaluation.evaluator INFO: Inference done 431/992. Dataloading: 0.0542 s/iter. Inference: 0.0994 s/iter. Eval: 0.0542 s/iter. Total: 0.2079 s/iter. ETA=0:01:56
[01/28 14:23:15] d2.evaluation.evaluator INFO: Inference done 457/992. Dataloading: 0.0538 s/iter. Inference: 0.0994 s/iter. Eval: 0.0539 s/iter. Total: 0.2071 s/iter. ETA=0:01:50
[01/28 14:23:20] d2.evaluation.evaluator INFO: Inference done 480/992. Dataloading: 0.0541 s/iter. Inference: 0.0994 s/iter. Eval: 0.0543 s/iter. Total: 0.2079 s/iter. ETA=0:01:46
[01/28 14:23:25] d2.evaluation.evaluator INFO: Inference done 505/992. Dataloading: 0.0540 s/iter. Inference: 0.0994 s/iter. Eval: 0.0541 s/iter. Total: 0.2076 s/iter. ETA=0:01:41
[01/28 14:23:30] d2.evaluation.evaluator INFO: Inference done 531/992. Dataloading: 0.0537 s/iter. Inference: 0.0993 s/iter. Eval: 0.0539 s/iter. Total: 0.2070 s/iter. ETA=0:01:35
[01/28 14:23:35] d2.evaluation.evaluator INFO: Inference done 553/992. Dataloading: 0.0542 s/iter. Inference: 0.0994 s/iter. Eval: 0.0544 s/iter. Total: 0.2079 s/iter. ETA=0:01:31
[01/28 14:23:40] d2.evaluation.evaluator INFO: Inference done 579/992. Dataloading: 0.0539 s/iter. Inference: 0.0993 s/iter. Eval: 0.0541 s/iter. Total: 0.2074 s/iter. ETA=0:01:25
[01/28 14:23:45] d2.evaluation.evaluator INFO: Inference done 604/992. Dataloading: 0.0537 s/iter. Inference: 0.0993 s/iter. Eval: 0.0540 s/iter. Total: 0.2071 s/iter. ETA=0:01:20
[01/28 14:23:50] d2.evaluation.evaluator INFO: Inference done 627/992. Dataloading: 0.0540 s/iter. Inference: 0.0993 s/iter. Eval: 0.0543 s/iter. Total: 0.2076 s/iter. ETA=0:01:15
[01/28 14:23:56] d2.evaluation.evaluator INFO: Inference done 653/992. Dataloading: 0.0538 s/iter. Inference: 0.0993 s/iter. Eval: 0.0540 s/iter. Total: 0.2072 s/iter. ETA=0:01:10
[01/28 14:24:01] d2.evaluation.evaluator INFO: Inference done 677/992. Dataloading: 0.0538 s/iter. Inference: 0.0993 s/iter. Eval: 0.0542 s/iter. Total: 0.2074 s/iter. ETA=0:01:05
[01/28 14:24:06] d2.evaluation.evaluator INFO: Inference done 701/992. Dataloading: 0.0539 s/iter. Inference: 0.0993 s/iter. Eval: 0.0542 s/iter. Total: 0.2075 s/iter. ETA=0:01:00
[01/28 14:24:11] d2.evaluation.evaluator INFO: Inference done 727/992. Dataloading: 0.0538 s/iter. Inference: 0.0993 s/iter. Eval: 0.0540 s/iter. Total: 0.2072 s/iter. ETA=0:00:54
[01/28 14:24:16] d2.evaluation.evaluator INFO: Inference done 750/992. Dataloading: 0.0540 s/iter. Inference: 0.0993 s/iter. Eval: 0.0543 s/iter. Total: 0.2077 s/iter. ETA=0:00:50
[01/28 14:24:21] d2.evaluation.evaluator INFO: Inference done 775/992. Dataloading: 0.0539 s/iter. Inference: 0.0993 s/iter. Eval: 0.0541 s/iter. Total: 0.2074 s/iter. ETA=0:00:45
[01/28 14:24:26] d2.evaluation.evaluator INFO: Inference done 801/992. Dataloading: 0.0537 s/iter. Inference: 0.0993 s/iter. Eval: 0.0539 s/iter. Total: 0.2070 s/iter. ETA=0:00:39
[01/28 14:24:31] d2.evaluation.evaluator INFO: Inference done 824/992. Dataloading: 0.0540 s/iter. Inference: 0.0993 s/iter. Eval: 0.0542 s/iter. Total: 0.2075 s/iter. ETA=0:00:34
[01/28 14:24:36] d2.evaluation.evaluator INFO: Inference done 850/992. Dataloading: 0.0538 s/iter. Inference: 0.0993 s/iter. Eval: 0.0540 s/iter. Total: 0.2072 s/iter. ETA=0:00:29
[01/28 14:24:41] d2.evaluation.evaluator INFO: Inference done 875/992. Dataloading: 0.0538 s/iter. Inference: 0.0993 s/iter. Eval: 0.0540 s/iter. Total: 0.2071 s/iter. ETA=0:00:24
[01/28 14:24:47] d2.evaluation.evaluator INFO: Inference done 899/992. Dataloading: 0.0539 s/iter. Inference: 0.0993 s/iter. Eval: 0.0541 s/iter. Total: 0.2074 s/iter. ETA=0:00:19
[01/28 14:24:52] d2.evaluation.evaluator INFO: Inference done 925/992. Dataloading: 0.0538 s/iter. Inference: 0.0993 s/iter. Eval: 0.0540 s/iter. Total: 0.2071 s/iter. ETA=0:00:13
[01/28 14:24:57] d2.evaluation.evaluator INFO: Inference done 948/992. Dataloading: 0.0539 s/iter. Inference: 0.0993 s/iter. Eval: 0.0541 s/iter. Total: 0.2073 s/iter. ETA=0:00:09
[01/28 14:25:02] d2.evaluation.evaluator INFO: Inference done 973/992. Dataloading: 0.0539 s/iter. Inference: 0.0993 s/iter. Eval: 0.0541 s/iter. Total: 0.2073 s/iter. ETA=0:00:03
[01/28 14:25:06] d2.evaluation.evaluator INFO: Total inference time: 0:03:24.369898 (0.207062 s / iter per device, on 1 devices)
[01/28 14:25:06] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:38 (0.099297 s / iter per device, on 1 devices)
[01/28 14:25:06] d2.evaluation.sem_seg_evaluation INFO: OrderedDict([('sem_seg', {'mIoU': 44.58849233847375, 'fwIoU': 56.38227967988952, 'IoU-background': 99.38848846983208, 'BoundaryIoU-background': 71.11195215348427, 'min(IoU, B-Iou)-background': 71.11195215348427, 'IoU-building': 68.71982407468059, 'BoundaryIoU-building': 47.2096682824676, 'min(IoU, B-Iou)-building': 47.2096682824676, 'IoU-road': 44.11109802966731, 'BoundaryIoU-road': 15.876526157970194, 'min(IoU, B-Iou)-road': 15.876526157970194, 'IoU-water': 25.11036184897938, 'BoundaryIoU-water': 18.893917175820967, 'min(IoU, B-Iou)-water': 18.893917175820967, 'IoU-barren': 47.80543585215013, 'BoundaryIoU-barren': 9.25727794612167, 'min(IoU, B-Iou)-barren': 9.25727794612167, 'IoU-forest': 18.66177716969505, 'BoundaryIoU-forest': 6.992274009869639, 'min(IoU, B-Iou)-forest': 6.992274009869639, 'IoU-agriculture': 8.322460924311716, 'BoundaryIoU-agriculture': 0.7278245596250648, 'min(IoU, B-Iou)-agriculture': 0.7278245596250648, 'mACC': 54.69060684322121, 'pACC': 71.69505032809809, 'ACC-background': 99.72027327381278, 'ACC-building': 89.62023671159862, 'ACC-road': 68.55752280763431, 'ACC-water': 25.4907243818742, 'ACC-barren': 49.46164690723651, 'ACC-forest': 41.28529445894779, 'ACC-agriculture': 8.698549361444318})])
[01/28 14:25:06] d2.engine.defaults INFO: Evaluation results for loveda_val in csv format:
[01/28 14:25:06] d2.evaluation.testing INFO: copypaste: Task: sem_seg
[01/28 14:25:06] d2.evaluation.testing INFO: copypaste: mIoU,fwIoU,mACC,pACC
[01/28 14:25:06] d2.evaluation.testing INFO: copypaste: 44.5885,56.3823,54.6906,71.6951
[01/28 14:25:06] d2.utils.events INFO:  eta: 2:58:16  iter: 499  total_loss: 33.34  loss_ce: 0.4715  loss_mask: 2.072  loss_dice: 2.208  loss_ce_0: 0.5636  loss_mask_0: 2.035  loss_dice_0: 2.218  loss_ce_1: 0.5005  loss_mask_1: 2.073  loss_dice_1: 2.21  loss_ce_2: 0.425  loss_mask_2: 2.081  loss_dice_2: 2.22  loss_ce_3: 0.4431  loss_mask_3: 2.075  loss_dice_3: 2.205  loss_ce_4: 0.4448  loss_mask_4: 2.074  loss_dice_4: 2.211  loss_ce_5: 0.4539  loss_mask_5: 2.074  loss_dice_5: 2.204    time: 3.1984  last_time: 2.9626  data_time: 1.7460  last_data_time: 1.5303   lr: 0.00067346  max_mem: 12886M
[01/28 14:26:10] d2.utils.events INFO:  eta: 2:57:16  iter: 519  total_loss: 32.97  loss_ce: 0.4268  loss_mask: 2.035  loss_dice: 2.199  loss_ce_0: 0.5517  loss_mask_0: 2.021  loss_dice_0: 2.185  loss_ce_1: 0.3926  loss_mask_1: 2.052  loss_dice_1: 2.173  loss_ce_2: 0.4032  loss_mask_2: 2.051  loss_dice_2: 2.185  loss_ce_3: 0.4048  loss_mask_3: 2.043  loss_dice_3: 2.171  loss_ce_4: 0.4056  loss_mask_4: 2.028  loss_dice_4: 2.192  loss_ce_5: 0.412  loss_mask_5: 2.028  loss_dice_5: 2.213    time: 3.1980  last_time: 3.5269  data_time: 1.7505  last_data_time: 2.0767   lr: 0.00067132  max_mem: 12886M
[01/28 14:27:13] d2.utils.events INFO:  eta: 2:56:14  iter: 539  total_loss: 33.32  loss_ce: 0.3813  loss_mask: 2.156  loss_dice: 2.175  loss_ce_0: 0.518  loss_mask_0: 2.104  loss_dice_0: 2.158  loss_ce_1: 0.4289  loss_mask_1: 2.134  loss_dice_1: 2.166  loss_ce_2: 0.3969  loss_mask_2: 2.138  loss_dice_2: 2.164  loss_ce_3: 0.3872  loss_mask_3: 2.137  loss_dice_3: 2.165  loss_ce_4: 0.3774  loss_mask_4: 2.133  loss_dice_4: 2.181  loss_ce_5: 0.3973  loss_mask_5: 2.138  loss_dice_5: 2.175    time: 3.1967  last_time: 3.0811  data_time: 1.7288  last_data_time: 1.6712   lr: 0.0006691  max_mem: 12886M
[01/28 14:28:17] d2.utils.events INFO:  eta: 2:55:12  iter: 559  total_loss: 32.63  loss_ce: 0.4931  loss_mask: 2.017  loss_dice: 2.14  loss_ce_0: 0.5712  loss_mask_0: 1.995  loss_dice_0: 2.18  loss_ce_1: 0.5356  loss_mask_1: 2.03  loss_dice_1: 2.14  loss_ce_2: 0.4658  loss_mask_2: 2.03  loss_dice_2: 2.139  loss_ce_3: 0.4791  loss_mask_3: 2.034  loss_dice_3: 2.123  loss_ce_4: 0.4592  loss_mask_4: 2.02  loss_dice_4: 2.138  loss_ce_5: 0.4842  loss_mask_5: 2.026  loss_dice_5: 2.152    time: 3.1973  last_time: 3.2007  data_time: 1.7769  last_data_time: 1.7706   lr: 0.00066681  max_mem: 12886M
[01/28 14:29:20] d2.utils.events INFO:  eta: 2:54:01  iter: 579  total_loss: 32.44  loss_ce: 0.4801  loss_mask: 1.996  loss_dice: 2.114  loss_ce_0: 0.6044  loss_mask_0: 1.985  loss_dice_0: 2.175  loss_ce_1: 0.5142  loss_mask_1: 1.992  loss_dice_1: 2.138  loss_ce_2: 0.4702  loss_mask_2: 2.004  loss_dice_2: 2.122  loss_ce_3: 0.4742  loss_mask_3: 2.003  loss_dice_3: 2.107  loss_ce_4: 0.484  loss_mask_4: 1.992  loss_dice_4: 2.104  loss_ce_5: 0.4719  loss_mask_5: 1.989  loss_dice_5: 2.102    time: 3.1948  last_time: 2.9473  data_time: 1.6954  last_data_time: 1.5361   lr: 0.00066443  max_mem: 12886M
[01/28 14:30:24] d2.utils.events INFO:  eta: 2:53:00  iter: 599  total_loss: 32.03  loss_ce: 0.4404  loss_mask: 2.027  loss_dice: 2.113  loss_ce_0: 0.5361  loss_mask_0: 1.984  loss_dice_0: 2.103  loss_ce_1: 0.5088  loss_mask_1: 2.046  loss_dice_1: 2.104  loss_ce_2: 0.4709  loss_mask_2: 2.02  loss_dice_2: 2.11  loss_ce_3: 0.4153  loss_mask_3: 2.031  loss_dice_3: 2.114  loss_ce_4: 0.4272  loss_mask_4: 2.019  loss_dice_4: 2.12  loss_ce_5: 0.4399  loss_mask_5: 2.027  loss_dice_5: 2.126    time: 3.1952  last_time: 3.3474  data_time: 1.7681  last_data_time: 1.8962   lr: 0.00066198  max_mem: 12886M
[01/28 14:31:27] d2.utils.events INFO:  eta: 2:51:56  iter: 619  total_loss: 31.63  loss_ce: 0.4487  loss_mask: 2.048  loss_dice: 2.074  loss_ce_0: 0.5369  loss_mask_0: 2.011  loss_dice_0: 2.094  loss_ce_1: 0.4921  loss_mask_1: 2.028  loss_dice_1: 2.102  loss_ce_2: 0.4568  loss_mask_2: 2.013  loss_dice_2: 2.068  loss_ce_3: 0.4469  loss_mask_3: 2.049  loss_dice_3: 2.057  loss_ce_4: 0.4433  loss_mask_4: 2.033  loss_dice_4: 2.065  loss_ce_5: 0.4457  loss_mask_5: 2.038  loss_dice_5: 2.078    time: 3.1934  last_time: 2.9211  data_time: 1.7090  last_data_time: 1.4889   lr: 0.00065945  max_mem: 12886M
[01/28 14:32:31] d2.utils.events INFO:  eta: 2:50:58  iter: 639  total_loss: 31.8  loss_ce: 0.3765  loss_mask: 2.059  loss_dice: 2.171  loss_ce_0: 0.5291  loss_mask_0: 1.978  loss_dice_0: 2.162  loss_ce_1: 0.4055  loss_mask_1: 2.047  loss_dice_1: 2.18  loss_ce_2: 0.3578  loss_mask_2: 2.044  loss_dice_2: 2.174  loss_ce_3: 0.3648  loss_mask_3: 2.042  loss_dice_3: 2.17  loss_ce_4: 0.3503  loss_mask_4: 2.046  loss_dice_4: 2.164  loss_ce_5: 0.3562  loss_mask_5: 2.05  loss_dice_5: 2.162    time: 3.1942  last_time: 3.1907  data_time: 1.7766  last_data_time: 1.7626   lr: 0.00065684  max_mem: 12886M
[01/28 14:33:34] d2.utils.events INFO:  eta: 2:49:56  iter: 659  total_loss: 32.97  loss_ce: 0.3187  loss_mask: 2.019  loss_dice: 2.26  loss_ce_0: 0.4535  loss_mask_0: 2.005  loss_dice_0: 2.218  loss_ce_1: 0.3802  loss_mask_1: 2.025  loss_dice_1: 2.247  loss_ce_2: 0.3328  loss_mask_2: 2.018  loss_dice_2: 2.242  loss_ce_3: 0.3096  loss_mask_3: 2.026  loss_dice_3: 2.245  loss_ce_4: 0.3154  loss_mask_4: 2.024  loss_dice_4: 2.242  loss_ce_5: 0.3131  loss_mask_5: 2.02  loss_dice_5: 2.243    time: 3.1931  last_time: 2.9646  data_time: 1.7206  last_data_time: 1.5024   lr: 0.00065416  max_mem: 12886M
[01/28 14:34:38] d2.utils.events INFO:  eta: 2:48:55  iter: 679  total_loss: 31.68  loss_ce: 0.3246  loss_mask: 2.076  loss_dice: 2.156  loss_ce_0: 0.4842  loss_mask_0: 2.019  loss_dice_0: 2.139  loss_ce_1: 0.4054  loss_mask_1: 2.045  loss_dice_1: 2.154  loss_ce_2: 0.3696  loss_mask_2: 2.044  loss_dice_2: 2.156  loss_ce_3: 0.354  loss_mask_3: 2.066  loss_dice_3: 2.165  loss_ce_4: 0.3567  loss_mask_4: 2.074  loss_dice_4: 2.162  loss_ce_5: 0.3553  loss_mask_5: 2.073  loss_dice_5: 2.155    time: 3.1935  last_time: 2.9692  data_time: 1.7686  last_data_time: 1.5576   lr: 0.0006514  max_mem: 12886M
[01/28 14:35:42] d2.utils.events INFO:  eta: 2:47:48  iter: 699  total_loss: 31.5  loss_ce: 0.3778  loss_mask: 1.978  loss_dice: 2.109  loss_ce_0: 0.4981  loss_mask_0: 1.976  loss_dice_0: 2.103  loss_ce_1: 0.4113  loss_mask_1: 1.962  loss_dice_1: 2.108  loss_ce_2: 0.3926  loss_mask_2: 1.979  loss_dice_2: 2.102  loss_ce_3: 0.3853  loss_mask_3: 1.989  loss_dice_3: 2.099  loss_ce_4: 0.3663  loss_mask_4: 1.975  loss_dice_4: 2.101  loss_ce_5: 0.3691  loss_mask_5: 1.986  loss_dice_5: 2.106    time: 3.1929  last_time: 3.5174  data_time: 1.7290  last_data_time: 2.0088   lr: 0.00064857  max_mem: 12886M
[01/28 14:36:45] d2.utils.events INFO:  eta: 2:46:44  iter: 719  total_loss: 32.03  loss_ce: 0.3838  loss_mask: 2.009  loss_dice: 2.148  loss_ce_0: 0.4319  loss_mask_0: 2.022  loss_dice_0: 2.161  loss_ce_1: 0.3943  loss_mask_1: 2.013  loss_dice_1: 2.122  loss_ce_2: 0.3766  loss_mask_2: 2.007  loss_dice_2: 2.126  loss_ce_3: 0.3673  loss_mask_3: 2.028  loss_dice_3: 2.114  loss_ce_4: 0.3822  loss_mask_4: 2.007  loss_dice_4: 2.131  loss_ce_5: 0.3818  loss_mask_5: 2.026  loss_dice_5: 2.136    time: 3.1924  last_time: 2.8782  data_time: 1.7434  last_data_time: 1.4666   lr: 0.00064566  max_mem: 12886M
[01/28 14:37:49] d2.utils.events INFO:  eta: 2:45:43  iter: 739  total_loss: 31.83  loss_ce: 0.346  loss_mask: 2.021  loss_dice: 2.133  loss_ce_0: 0.4417  loss_mask_0: 1.972  loss_dice_0: 2.147  loss_ce_1: 0.3905  loss_mask_1: 2.044  loss_dice_1: 2.111  loss_ce_2: 0.3504  loss_mask_2: 2.031  loss_dice_2: 2.104  loss_ce_3: 0.3313  loss_mask_3: 2.037  loss_dice_3: 2.123  loss_ce_4: 0.3291  loss_mask_4: 2.031  loss_dice_4: 2.127  loss_ce_5: 0.3142  loss_mask_5: 2.019  loss_dice_5: 2.139    time: 3.1924  last_time: 3.6693  data_time: 1.7535  last_data_time: 2.1899   lr: 0.00064268  max_mem: 12886M
[01/28 14:38:52] d2.utils.events INFO:  eta: 2:44:40  iter: 759  total_loss: 31.1  loss_ce: 0.3167  loss_mask: 1.961  loss_dice: 2.119  loss_ce_0: 0.4225  loss_mask_0: 1.984  loss_dice_0: 2.123  loss_ce_1: 0.372  loss_mask_1: 1.96  loss_dice_1: 2.134  loss_ce_2: 0.3189  loss_mask_2: 1.968  loss_dice_2: 2.122  loss_ce_3: 0.3193  loss_mask_3: 1.968  loss_dice_3: 2.12  loss_ce_4: 0.2993  loss_mask_4: 1.967  loss_dice_4: 2.123  loss_ce_5: 0.3166  loss_mask_5: 1.962  loss_dice_5: 2.115    time: 3.1907  last_time: 2.9932  data_time: 1.6970  last_data_time: 1.5718   lr: 0.00063963  max_mem: 12886M
[01/28 14:39:56] d2.utils.events INFO:  eta: 2:43:38  iter: 779  total_loss: 31.43  loss_ce: 0.3183  loss_mask: 2.048  loss_dice: 2.107  loss_ce_0: 0.4597  loss_mask_0: 2.009  loss_dice_0: 2.113  loss_ce_1: 0.3903  loss_mask_1: 2.03  loss_dice_1: 2.123  loss_ce_2: 0.3504  loss_mask_2: 2.043  loss_dice_2: 2.097  loss_ce_3: 0.3296  loss_mask_3: 2.053  loss_dice_3: 2.109  loss_ce_4: 0.3293  loss_mask_4: 2.051  loss_dice_4: 2.107  loss_ce_5: 0.3141  loss_mask_5: 2.051  loss_dice_5: 2.112    time: 3.1911  last_time: 3.7705  data_time: 1.7587  last_data_time: 2.2619   lr: 0.00063651  max_mem: 12886M
[01/28 14:40:59] d2.utils.events INFO:  eta: 2:42:33  iter: 799  total_loss: 31.38  loss_ce: 0.3648  loss_mask: 1.973  loss_dice: 2.036  loss_ce_0: 0.5223  loss_mask_0: 1.925  loss_dice_0: 2.085  loss_ce_1: 0.4828  loss_mask_1: 1.958  loss_dice_1: 2.061  loss_ce_2: 0.4306  loss_mask_2: 1.952  loss_dice_2: 2.039  loss_ce_3: 0.39  loss_mask_3: 1.951  loss_dice_3: 2.052  loss_ce_4: 0.3757  loss_mask_4: 1.969  loss_dice_4: 2.044  loss_ce_5: 0.3907  loss_mask_5: 1.958  loss_dice_5: 2.049    time: 3.1897  last_time: 2.9136  data_time: 1.6997  last_data_time: 1.4677   lr: 0.00063332  max_mem: 12886M
[01/28 14:42:04] d2.utils.events INFO:  eta: 2:41:35  iter: 819  total_loss: 31.46  loss_ce: 0.3496  loss_mask: 2.015  loss_dice: 2.126  loss_ce_0: 0.4632  loss_mask_0: 1.983  loss_dice_0: 2.123  loss_ce_1: 0.4128  loss_mask_1: 1.979  loss_dice_1: 2.136  loss_ce_2: 0.3396  loss_mask_2: 2.014  loss_dice_2: 2.122  loss_ce_3: 0.3445  loss_mask_3: 2.017  loss_dice_3: 2.118  loss_ce_4: 0.3599  loss_mask_4: 2.012  loss_dice_4: 2.127  loss_ce_5: 0.3577  loss_mask_5: 2.011  loss_dice_5: 2.117    time: 3.1910  last_time: 3.9011  data_time: 1.8042  last_data_time: 2.4606   lr: 0.00063005  max_mem: 12886M
[01/28 14:43:07] d2.utils.events INFO:  eta: 2:40:28  iter: 839  total_loss: 30.6  loss_ce: 0.2761  loss_mask: 1.999  loss_dice: 2.089  loss_ce_0: 0.3693  loss_mask_0: 1.962  loss_dice_0: 2.089  loss_ce_1: 0.3187  loss_mask_1: 2.001  loss_dice_1: 2.118  loss_ce_2: 0.3031  loss_mask_2: 1.997  loss_dice_2: 2.084  loss_ce_3: 0.3053  loss_mask_3: 1.998  loss_dice_3: 2.071  loss_ce_4: 0.2956  loss_mask_4: 1.994  loss_dice_4: 2.089  loss_ce_5: 0.2819  loss_mask_5: 1.996  loss_dice_5: 2.09    time: 3.1900  last_time: 3.0181  data_time: 1.7156  last_data_time: 1.6101   lr: 0.00062672  max_mem: 12886M
[01/28 14:44:10] d2.utils.events INFO:  eta: 2:39:24  iter: 859  total_loss: 31.1  loss_ce: 0.3116  loss_mask: 2.011  loss_dice: 2.032  loss_ce_0: 0.4278  loss_mask_0: 1.971  loss_dice_0: 2.045  loss_ce_1: 0.3902  loss_mask_1: 1.986  loss_dice_1: 2.03  loss_ce_2: 0.3382  loss_mask_2: 2.027  loss_dice_2: 2.007  loss_ce_3: 0.3288  loss_mask_3: 2.008  loss_dice_3: 2.001  loss_ce_4: 0.3405  loss_mask_4: 2.006  loss_dice_4: 1.992  loss_ce_5: 0.3485  loss_mask_5: 2.008  loss_dice_5: 2.014    time: 3.1899  last_time: 3.7806  data_time: 1.7401  last_data_time: 2.3159   lr: 0.00062332  max_mem: 12886M
[01/28 14:45:13] d2.utils.events INFO:  eta: 2:38:23  iter: 879  total_loss: 30.72  loss_ce: 0.3618  loss_mask: 1.977  loss_dice: 2.046  loss_ce_0: 0.4012  loss_mask_0: 1.969  loss_dice_0: 2.079  loss_ce_1: 0.3853  loss_mask_1: 1.971  loss_dice_1: 2.064  loss_ce_2: 0.3651  loss_mask_2: 1.976  loss_dice_2: 2.048  loss_ce_3: 0.368  loss_mask_3: 1.976  loss_dice_3: 2.042  loss_ce_4: 0.3611  loss_mask_4: 1.98  loss_dice_4: 2.048  loss_ce_5: 0.3643  loss_mask_5: 1.983  loss_dice_5: 2.041    time: 3.1892  last_time: 2.9657  data_time: 1.7233  last_data_time: 1.5398   lr: 0.00061985  max_mem: 12886M
[01/28 14:46:17] d2.utils.events INFO:  eta: 2:37:21  iter: 899  total_loss: 31.36  loss_ce: 0.3915  loss_mask: 1.955  loss_dice: 2.105  loss_ce_0: 0.4493  loss_mask_0: 1.959  loss_dice_0: 2.142  loss_ce_1: 0.429  loss_mask_1: 1.992  loss_dice_1: 2.09  loss_ce_2: 0.3931  loss_mask_2: 1.975  loss_dice_2: 2.069  loss_ce_3: 0.4088  loss_mask_3: 1.96  loss_dice_3: 2.1  loss_ce_4: 0.4117  loss_mask_4: 1.956  loss_dice_4: 2.08  loss_ce_5: 0.4004  loss_mask_5: 1.947  loss_dice_5: 2.074    time: 3.1894  last_time: 3.7263  data_time: 1.7577  last_data_time: 2.2890   lr: 0.00061632  max_mem: 12886M
[01/28 14:47:21] d2.utils.events INFO:  eta: 2:36:18  iter: 919  total_loss: 30.13  loss_ce: 0.3191  loss_mask: 1.876  loss_dice: 2.025  loss_ce_0: 0.4264  loss_mask_0: 1.886  loss_dice_0: 2.043  loss_ce_1: 0.3744  loss_mask_1: 1.896  loss_dice_1: 2.036  loss_ce_2: 0.3279  loss_mask_2: 1.868  loss_dice_2: 2.004  loss_ce_3: 0.3027  loss_mask_3: 1.871  loss_dice_3: 2.023  loss_ce_4: 0.3145  loss_mask_4: 1.862  loss_dice_4: 2.013  loss_ce_5: 0.3169  loss_mask_5: 1.863  loss_dice_5: 2.009    time: 3.1888  last_time: 3.0184  data_time: 1.7186  last_data_time: 1.6022   lr: 0.00061272  max_mem: 12886M
[01/28 14:48:24] d2.utils.events INFO:  eta: 2:35:16  iter: 939  total_loss: 30.57  loss_ce: 0.362  loss_mask: 1.965  loss_dice: 2.027  loss_ce_0: 0.4563  loss_mask_0: 1.939  loss_dice_0: 2.077  loss_ce_1: 0.423  loss_mask_1: 1.949  loss_dice_1: 2.06  loss_ce_2: 0.3675  loss_mask_2: 1.948  loss_dice_2: 2.05  loss_ce_3: 0.3561  loss_mask_3: 1.96  loss_dice_3: 2.037  loss_ce_4: 0.365  loss_mask_4: 1.953  loss_dice_4: 2.032  loss_ce_5: 0.354  loss_mask_5: 1.961  loss_dice_5: 2.027    time: 3.1882  last_time: 3.7521  data_time: 1.7183  last_data_time: 2.3164   lr: 0.00060906  max_mem: 12886M
[01/28 14:49:26] d2.utils.events INFO:  eta: 2:34:10  iter: 959  total_loss: 32.23  loss_ce: 0.3773  loss_mask: 1.974  loss_dice: 2.109  loss_ce_0: 0.4537  loss_mask_0: 1.966  loss_dice_0: 2.124  loss_ce_1: 0.4198  loss_mask_1: 2.001  loss_dice_1: 2.135  loss_ce_2: 0.384  loss_mask_2: 1.994  loss_dice_2: 2.127  loss_ce_3: 0.4016  loss_mask_3: 1.975  loss_dice_3: 2.082  loss_ce_4: 0.3877  loss_mask_4: 1.985  loss_dice_4: 2.105  loss_ce_5: 0.393  loss_mask_5: 1.984  loss_dice_5: 2.102    time: 3.1867  last_time: 2.8410  data_time: 1.6831  last_data_time: 1.4342   lr: 0.00060533  max_mem: 12886M
[01/28 14:50:30] d2.utils.events INFO:  eta: 2:33:10  iter: 979  total_loss: 30.53  loss_ce: 0.3375  loss_mask: 1.942  loss_dice: 1.979  loss_ce_0: 0.4179  loss_mask_0: 1.927  loss_dice_0: 2.068  loss_ce_1: 0.3822  loss_mask_1: 1.955  loss_dice_1: 2.019  loss_ce_2: 0.339  loss_mask_2: 1.951  loss_dice_2: 1.983  loss_ce_3: 0.3389  loss_mask_3: 1.945  loss_dice_3: 1.973  loss_ce_4: 0.3439  loss_mask_4: 1.953  loss_dice_4: 1.985  loss_ce_5: 0.3439  loss_mask_5: 1.951  loss_dice_5: 1.966    time: 3.1871  last_time: 3.4312  data_time: 1.7622  last_data_time: 1.9550   lr: 0.00060154  max_mem: 12886M
[01/28 14:51:33] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2048, sample_style='choice')]
[01/28 14:51:33] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[01/28 14:51:33] d2.data.common INFO: Serializing 992 elements to byte tensors and concatenating them all ...
[01/28 14:51:33] d2.data.common INFO: Serialized dataset takes 0.14 MiB
[01/28 14:51:33] d2.evaluation.evaluator INFO: Start inference on 992 batches
[01/28 14:51:36] d2.evaluation.evaluator INFO: Inference done 11/992. Dataloading: 0.0592 s/iter. Inference: 0.0996 s/iter. Eval: 0.0663 s/iter. Total: 0.2251 s/iter. ETA=0:03:40
[01/28 14:51:41] d2.evaluation.evaluator INFO: Inference done 35/992. Dataloading: 0.0588 s/iter. Inference: 0.0997 s/iter. Eval: 0.0587 s/iter. Total: 0.2172 s/iter. ETA=0:03:27
[01/28 14:51:46] d2.evaluation.evaluator INFO: Inference done 61/992. Dataloading: 0.0549 s/iter. Inference: 0.0996 s/iter. Eval: 0.0530 s/iter. Total: 0.2075 s/iter. ETA=0:03:13
[01/28 14:51:51] d2.evaluation.evaluator INFO: Inference done 85/992. Dataloading: 0.0560 s/iter. Inference: 0.0996 s/iter. Eval: 0.0548 s/iter. Total: 0.2105 s/iter. ETA=0:03:10
[01/28 14:51:56] d2.evaluation.evaluator INFO: Inference done 110/992. Dataloading: 0.0549 s/iter. Inference: 0.0996 s/iter. Eval: 0.0541 s/iter. Total: 0.2087 s/iter. ETA=0:03:04
[01/28 14:52:01] d2.evaluation.evaluator INFO: Inference done 136/992. Dataloading: 0.0535 s/iter. Inference: 0.0997 s/iter. Eval: 0.0525 s/iter. Total: 0.2058 s/iter. ETA=0:02:56
[01/28 14:52:06] d2.evaluation.evaluator INFO: Inference done 159/992. Dataloading: 0.0550 s/iter. Inference: 0.0997 s/iter. Eval: 0.0542 s/iter. Total: 0.2089 s/iter. ETA=0:02:54
[01/28 14:52:11] d2.evaluation.evaluator INFO: Inference done 185/992. Dataloading: 0.0538 s/iter. Inference: 0.0997 s/iter. Eval: 0.0531 s/iter. Total: 0.2067 s/iter. ETA=0:02:46
[01/28 14:52:17] d2.evaluation.evaluator INFO: Inference done 212/992. Dataloading: 0.0529 s/iter. Inference: 0.0996 s/iter. Eval: 0.0523 s/iter. Total: 0.2049 s/iter. ETA=0:02:39
[01/28 14:52:22] d2.evaluation.evaluator INFO: Inference done 235/992. Dataloading: 0.0538 s/iter. Inference: 0.0997 s/iter. Eval: 0.0531 s/iter. Total: 0.2066 s/iter. ETA=0:02:36
[01/28 14:52:27] d2.evaluation.evaluator INFO: Inference done 262/992. Dataloading: 0.0531 s/iter. Inference: 0.0996 s/iter. Eval: 0.0523 s/iter. Total: 0.2050 s/iter. ETA=0:02:29
[01/28 14:52:32] d2.evaluation.evaluator INFO: Inference done 287/992. Dataloading: 0.0531 s/iter. Inference: 0.0996 s/iter. Eval: 0.0524 s/iter. Total: 0.2052 s/iter. ETA=0:02:24
[01/28 14:52:37] d2.evaluation.evaluator INFO: Inference done 312/992. Dataloading: 0.0532 s/iter. Inference: 0.0996 s/iter. Eval: 0.0525 s/iter. Total: 0.2053 s/iter. ETA=0:02:19
[01/28 14:52:42] d2.evaluation.evaluator INFO: Inference done 339/992. Dataloading: 0.0526 s/iter. Inference: 0.0995 s/iter. Eval: 0.0520 s/iter. Total: 0.2042 s/iter. ETA=0:02:13
[01/28 14:52:47] d2.evaluation.evaluator INFO: Inference done 362/992. Dataloading: 0.0530 s/iter. Inference: 0.0995 s/iter. Eval: 0.0525 s/iter. Total: 0.2051 s/iter. ETA=0:02:09
[01/28 14:52:52] d2.evaluation.evaluator INFO: Inference done 388/992. Dataloading: 0.0527 s/iter. Inference: 0.0995 s/iter. Eval: 0.0521 s/iter. Total: 0.2044 s/iter. ETA=0:02:03
[01/28 14:52:58] d2.evaluation.evaluator INFO: Inference done 414/992. Dataloading: 0.0525 s/iter. Inference: 0.0995 s/iter. Eval: 0.0517 s/iter. Total: 0.2038 s/iter. ETA=0:01:57
[01/28 14:53:03] d2.evaluation.evaluator INFO: Inference done 437/992. Dataloading: 0.0529 s/iter. Inference: 0.0995 s/iter. Eval: 0.0524 s/iter. Total: 0.2049 s/iter. ETA=0:01:53
[01/28 14:53:08] d2.evaluation.evaluator INFO: Inference done 464/992. Dataloading: 0.0525 s/iter. Inference: 0.0995 s/iter. Eval: 0.0520 s/iter. Total: 0.2041 s/iter. ETA=0:01:47
[01/28 14:53:13] d2.evaluation.evaluator INFO: Inference done 489/992. Dataloading: 0.0525 s/iter. Inference: 0.0995 s/iter. Eval: 0.0520 s/iter. Total: 0.2041 s/iter. ETA=0:01:42
[01/28 14:53:18] d2.evaluation.evaluator INFO: Inference done 513/992. Dataloading: 0.0527 s/iter. Inference: 0.0995 s/iter. Eval: 0.0523 s/iter. Total: 0.2046 s/iter. ETA=0:01:37
[01/28 14:53:23] d2.evaluation.evaluator INFO: Inference done 540/992. Dataloading: 0.0524 s/iter. Inference: 0.0995 s/iter. Eval: 0.0520 s/iter. Total: 0.2040 s/iter. ETA=0:01:32
[01/28 14:53:28] d2.evaluation.evaluator INFO: Inference done 564/992. Dataloading: 0.0526 s/iter. Inference: 0.0995 s/iter. Eval: 0.0523 s/iter. Total: 0.2044 s/iter. ETA=0:01:27
[01/28 14:53:34] d2.evaluation.evaluator INFO: Inference done 589/992. Dataloading: 0.0525 s/iter. Inference: 0.0995 s/iter. Eval: 0.0522 s/iter. Total: 0.2043 s/iter. ETA=0:01:22
[01/28 14:53:39] d2.evaluation.evaluator INFO: Inference done 615/992. Dataloading: 0.0523 s/iter. Inference: 0.0995 s/iter. Eval: 0.0520 s/iter. Total: 0.2038 s/iter. ETA=0:01:16
[01/28 14:53:44] d2.evaluation.evaluator INFO: Inference done 638/992. Dataloading: 0.0526 s/iter. Inference: 0.0995 s/iter. Eval: 0.0524 s/iter. Total: 0.2045 s/iter. ETA=0:01:12
[01/28 14:53:49] d2.evaluation.evaluator INFO: Inference done 664/992. Dataloading: 0.0524 s/iter. Inference: 0.0995 s/iter. Eval: 0.0521 s/iter. Total: 0.2040 s/iter. ETA=0:01:06
[01/28 14:53:54] d2.evaluation.evaluator INFO: Inference done 690/992. Dataloading: 0.0522 s/iter. Inference: 0.0995 s/iter. Eval: 0.0519 s/iter. Total: 0.2036 s/iter. ETA=0:01:01
[01/28 14:53:59] d2.evaluation.evaluator INFO: Inference done 713/992. Dataloading: 0.0525 s/iter. Inference: 0.0995 s/iter. Eval: 0.0522 s/iter. Total: 0.2042 s/iter. ETA=0:00:56
[01/28 14:54:04] d2.evaluation.evaluator INFO: Inference done 739/992. Dataloading: 0.0523 s/iter. Inference: 0.0995 s/iter. Eval: 0.0521 s/iter. Total: 0.2039 s/iter. ETA=0:00:51
[01/28 14:54:09] d2.evaluation.evaluator INFO: Inference done 764/992. Dataloading: 0.0523 s/iter. Inference: 0.0994 s/iter. Eval: 0.0521 s/iter. Total: 0.2039 s/iter. ETA=0:00:46
[01/28 14:54:14] d2.evaluation.evaluator INFO: Inference done 788/992. Dataloading: 0.0525 s/iter. Inference: 0.0994 s/iter. Eval: 0.0522 s/iter. Total: 0.2042 s/iter. ETA=0:00:41
[01/28 14:54:19] d2.evaluation.evaluator INFO: Inference done 815/992. Dataloading: 0.0523 s/iter. Inference: 0.0994 s/iter. Eval: 0.0521 s/iter. Total: 0.2038 s/iter. ETA=0:00:36
[01/28 14:54:24] d2.evaluation.evaluator INFO: Inference done 839/992. Dataloading: 0.0524 s/iter. Inference: 0.0995 s/iter. Eval: 0.0522 s/iter. Total: 0.2041 s/iter. ETA=0:00:31
[01/28 14:54:29] d2.evaluation.evaluator INFO: Inference done 864/992. Dataloading: 0.0524 s/iter. Inference: 0.0995 s/iter. Eval: 0.0522 s/iter. Total: 0.2041 s/iter. ETA=0:00:26
[01/28 14:54:35] d2.evaluation.evaluator INFO: Inference done 890/992. Dataloading: 0.0522 s/iter. Inference: 0.0994 s/iter. Eval: 0.0520 s/iter. Total: 0.2038 s/iter. ETA=0:00:20
[01/28 14:54:40] d2.evaluation.evaluator INFO: Inference done 913/992. Dataloading: 0.0524 s/iter. Inference: 0.0994 s/iter. Eval: 0.0523 s/iter. Total: 0.2042 s/iter. ETA=0:00:16
[01/28 14:54:45] d2.evaluation.evaluator INFO: Inference done 939/992. Dataloading: 0.0523 s/iter. Inference: 0.0994 s/iter. Eval: 0.0522 s/iter. Total: 0.2040 s/iter. ETA=0:00:10
[01/28 14:54:50] d2.evaluation.evaluator INFO: Inference done 965/992. Dataloading: 0.0522 s/iter. Inference: 0.0994 s/iter. Eval: 0.0520 s/iter. Total: 0.2037 s/iter. ETA=0:00:05
[01/28 14:54:55] d2.evaluation.evaluator INFO: Inference done 988/992. Dataloading: 0.0524 s/iter. Inference: 0.0994 s/iter. Eval: 0.0522 s/iter. Total: 0.2041 s/iter. ETA=0:00:00
[01/28 14:54:56] d2.evaluation.evaluator INFO: Total inference time: 0:03:21.422098 (0.204075 s / iter per device, on 1 devices)
[01/28 14:54:56] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:38 (0.099433 s / iter per device, on 1 devices)
[01/28 14:54:56] d2.evaluation.sem_seg_evaluation INFO: OrderedDict([('sem_seg', {'mIoU': 44.50708315712792, 'fwIoU': 54.40697057018533, 'IoU-background': 99.6544727549102, 'BoundaryIoU-background': 72.30093617022358, 'min(IoU, B-Iou)-background': 72.30093617022358, 'IoU-building': 67.09356756902805, 'BoundaryIoU-building': 39.14028903642938, 'min(IoU, B-Iou)-building': 39.14028903642938, 'IoU-road': 44.53163740237114, 'BoundaryIoU-road': 18.630082962125076, 'min(IoU, B-Iou)-road': 18.630082962125076, 'IoU-water': 29.647472076754084, 'BoundaryIoU-water': 13.271364334683442, 'min(IoU, B-Iou)-water': 13.271364334683442, 'IoU-barren': 39.77018231840734, 'BoundaryIoU-barren': 12.594652971678311, 'min(IoU, B-Iou)-barren': 12.594652971678311, 'IoU-forest': 26.43394774010726, 'BoundaryIoU-forest': 5.12477615056919, 'min(IoU, B-Iou)-forest': 5.12477615056919, 'IoU-agriculture': 4.418302238317389, 'BoundaryIoU-agriculture': 0.43408728811388686, 'min(IoU, B-Iou)-agriculture': 0.43408728811388686, 'mACC': 53.65395815557338, 'pACC': 71.92517097367653, 'ACC-background': 99.80151289963368, 'ACC-building': 92.84487693136062, 'ACC-road': 77.96756168447091, 'ACC-water': 30.388275533082638, 'ACC-barren': 40.33437927017706, 'ACC-forest': 29.736140140335333, 'ACC-agriculture': 4.504960629953417})])
[01/28 14:54:56] d2.engine.defaults INFO: Evaluation results for loveda_val in csv format:
[01/28 14:54:56] d2.evaluation.testing INFO: copypaste: Task: sem_seg
[01/28 14:54:56] d2.evaluation.testing INFO: copypaste: mIoU,fwIoU,mACC,pACC
[01/28 14:54:56] d2.evaluation.testing INFO: copypaste: 44.5071,54.4070,53.6540,71.9252
[01/28 14:54:56] d2.utils.events INFO:  eta: 2:32:08  iter: 999  total_loss: 30.89  loss_ce: 0.3414  loss_mask: 1.951  loss_dice: 2.066  loss_ce_0: 0.4512  loss_mask_0: 1.957  loss_dice_0: 2.084  loss_ce_1: 0.3946  loss_mask_1: 1.972  loss_dice_1: 2.079  loss_ce_2: 0.3415  loss_mask_2: 1.951  loss_dice_2: 2.056  loss_ce_3: 0.3359  loss_mask_3: 1.948  loss_dice_3: 2.044  loss_ce_4: 0.3519  loss_mask_4: 1.953  loss_dice_4: 2.051  loss_ce_5: 0.3488  loss_mask_5: 1.961  loss_dice_5: 2.044    time: 3.1861  last_time: 3.0269  data_time: 1.6958  last_data_time: 1.5973   lr: 0.00059768  max_mem: 12886M
[01/28 14:55:59] d2.utils.events INFO:  eta: 2:30:59  iter: 1019  total_loss: 30.38  loss_ce: 0.3914  loss_mask: 1.918  loss_dice: 1.978  loss_ce_0: 0.4549  loss_mask_0: 1.929  loss_dice_0: 2.03  loss_ce_1: 0.4185  loss_mask_1: 1.938  loss_dice_1: 2.013  loss_ce_2: 0.3864  loss_mask_2: 1.924  loss_dice_2: 2.002  loss_ce_3: 0.3835  loss_mask_3: 1.914  loss_dice_3: 1.989  loss_ce_4: 0.3917  loss_mask_4: 1.914  loss_dice_4: 1.996  loss_ce_5: 0.3957  loss_mask_5: 1.923  loss_dice_5: 1.979    time: 3.1853  last_time: 3.0325  data_time: 1.7124  last_data_time: 1.6214   lr: 0.00059377  max_mem: 12886M
[01/28 14:57:02] d2.utils.events INFO:  eta: 2:30:00  iter: 1039  total_loss: 30.05  loss_ce: 0.3367  loss_mask: 1.946  loss_dice: 2.052  loss_ce_0: 0.4494  loss_mask_0: 1.893  loss_dice_0: 2.058  loss_ce_1: 0.3428  loss_mask_1: 1.952  loss_dice_1: 2.076  loss_ce_2: 0.3678  loss_mask_2: 1.963  loss_dice_2: 2.057  loss_ce_3: 0.3483  loss_mask_3: 1.963  loss_dice_3: 2.067  loss_ce_4: 0.3186  loss_mask_4: 1.949  loss_dice_4: 2.061  loss_ce_5: 0.3162  loss_mask_5: 1.959  loss_dice_5: 2.059    time: 3.1852  last_time: 3.8503  data_time: 1.7384  last_data_time: 2.3994   lr: 0.00058979  max_mem: 12886M
[01/28 14:58:06] d2.utils.events INFO:  eta: 2:28:59  iter: 1059  total_loss: 30.63  loss_ce: 0.309  loss_mask: 1.959  loss_dice: 2.026  loss_ce_0: 0.3963  loss_mask_0: 1.939  loss_dice_0: 2.042  loss_ce_1: 0.3287  loss_mask_1: 1.971  loss_dice_1: 2.036  loss_ce_2: 0.3488  loss_mask_2: 1.949  loss_dice_2: 2.017  loss_ce_3: 0.3267  loss_mask_3: 1.965  loss_dice_3: 2.031  loss_ce_4: 0.3089  loss_mask_4: 1.962  loss_dice_4: 2.015  loss_ce_5: 0.3218  loss_mask_5: 1.967  loss_dice_5: 2.034    time: 3.1848  last_time: 3.0785  data_time: 1.7293  last_data_time: 1.6630   lr: 0.00058576  max_mem: 12886M
[01/28 14:59:10] d2.utils.events INFO:  eta: 2:27:54  iter: 1079  total_loss: 30.21  loss_ce: 0.3748  loss_mask: 1.95  loss_dice: 1.981  loss_ce_0: 0.4414  loss_mask_0: 1.922  loss_dice_0: 2.063  loss_ce_1: 0.4233  loss_mask_1: 1.934  loss_dice_1: 2.028  loss_ce_2: 0.3718  loss_mask_2: 1.926  loss_dice_2: 1.99  loss_ce_3: 0.3681  loss_mask_3: 1.943  loss_dice_3: 1.981  loss_ce_4: 0.3708  loss_mask_4: 1.949  loss_dice_4: 1.98  loss_ce_5: 0.3611  loss_mask_5: 1.956  loss_dice_5: 1.967    time: 3.1853  last_time: 3.0302  data_time: 1.7654  last_data_time: 1.6145   lr: 0.00058167  max_mem: 12886M
[01/28 15:00:13] d2.utils.events INFO:  eta: 2:26:44  iter: 1099  total_loss: 29.52  loss_ce: 0.3844  loss_mask: 1.901  loss_dice: 1.938  loss_ce_0: 0.4634  loss_mask_0: 1.885  loss_dice_0: 1.979  loss_ce_1: 0.4298  loss_mask_1: 1.912  loss_dice_1: 1.964  loss_ce_2: 0.3839  loss_mask_2: 1.901  loss_dice_2: 1.933  loss_ce_3: 0.3968  loss_mask_3: 1.884  loss_dice_3: 1.907  loss_ce_4: 0.3929  loss_mask_4: 1.875  loss_dice_4: 1.929  loss_ce_5: 0.3879  loss_mask_5: 1.892  loss_dice_5: 1.919    time: 3.1843  last_time: 2.9422  data_time: 1.6947  last_data_time: 1.4763   lr: 0.00057752  max_mem: 12886M
[01/28 15:01:16] d2.utils.events INFO:  eta: 2:25:43  iter: 1119  total_loss: 30.76  loss_ce: 0.3657  loss_mask: 1.934  loss_dice: 2.027  loss_ce_0: 0.4727  loss_mask_0: 1.943  loss_dice_0: 2.027  loss_ce_1: 0.3785  loss_mask_1: 1.954  loss_dice_1: 2.06  loss_ce_2: 0.3681  loss_mask_2: 1.944  loss_dice_2: 2.044  loss_ce_3: 0.3892  loss_mask_3: 1.938  loss_dice_3: 2.023  loss_ce_4: 0.3925  loss_mask_4: 1.931  loss_dice_4: 2.037  loss_ce_5: 0.3907  loss_mask_5: 1.941  loss_dice_5: 2.034    time: 3.1842  last_time: 2.9652  data_time: 1.7341  last_data_time: 1.5491   lr: 0.00057331  max_mem: 12886M
[01/28 15:02:19] d2.utils.events INFO:  eta: 2:24:42  iter: 1139  total_loss: 30.8  loss_ce: 0.3393  loss_mask: 1.919  loss_dice: 2.063  loss_ce_0: 0.4399  loss_mask_0: 1.935  loss_dice_0: 2.08  loss_ce_1: 0.3634  loss_mask_1: 1.949  loss_dice_1: 2.116  loss_ce_2: 0.341  loss_mask_2: 1.916  loss_dice_2: 2.072  loss_ce_3: 0.3411  loss_mask_3: 1.924  loss_dice_3: 2.07  loss_ce_4: 0.3295  loss_mask_4: 1.923  loss_dice_4: 2.064  loss_ce_5: 0.3424  loss_mask_5: 1.914  loss_dice_5: 2.071    time: 3.1835  last_time: 2.8501  data_time: 1.7086  last_data_time: 1.4079   lr: 0.00056905  max_mem: 12886M
[01/28 15:03:23] d2.utils.events INFO:  eta: 2:23:41  iter: 1159  total_loss: 29.79  loss_ce: 0.323  loss_mask: 1.926  loss_dice: 1.963  loss_ce_0: 0.4026  loss_mask_0: 1.885  loss_dice_0: 1.979  loss_ce_1: 0.3494  loss_mask_1: 1.916  loss_dice_1: 2.01  loss_ce_2: 0.2812  loss_mask_2: 1.91  loss_dice_2: 1.971  loss_ce_3: 0.3163  loss_mask_3: 1.916  loss_dice_3: 1.969  loss_ce_4: 0.3165  loss_mask_4: 1.916  loss_dice_4: 1.955  loss_ce_5: 0.3438  loss_mask_5: 1.923  loss_dice_5: 1.973    time: 3.1836  last_time: 2.9485  data_time: 1.7469  last_data_time: 1.5295   lr: 0.00056473  max_mem: 12886M
[01/28 15:04:25] d2.utils.events INFO:  eta: 2:22:37  iter: 1179  total_loss: 29.14  loss_ce: 0.3535  loss_mask: 1.861  loss_dice: 1.908  loss_ce_0: 0.4081  loss_mask_0: 1.853  loss_dice_0: 1.941  loss_ce_1: 0.3857  loss_mask_1: 1.87  loss_dice_1: 1.942  loss_ce_2: 0.3413  loss_mask_2: 1.864  loss_dice_2: 1.928  loss_ce_3: 0.3343  loss_mask_3: 1.866  loss_dice_3: 1.918  loss_ce_4: 0.3474  loss_mask_4: 1.861  loss_dice_4: 1.914  loss_ce_5: 0.3584  loss_mask_5: 1.862  loss_dice_5: 1.918    time: 3.1826  last_time: 2.7954  data_time: 1.6816  last_data_time: 1.3551   lr: 0.00056037  max_mem: 12886M
[01/28 15:05:29] d2.utils.events INFO:  eta: 2:21:30  iter: 1199  total_loss: 30.16  loss_ce: 0.3805  loss_mask: 1.943  loss_dice: 1.962  loss_ce_0: 0.4011  loss_mask_0: 1.944  loss_dice_0: 2.021  loss_ce_1: 0.4076  loss_mask_1: 1.951  loss_dice_1: 2.011  loss_ce_2: 0.374  loss_mask_2: 1.926  loss_dice_2: 1.968  loss_ce_3: 0.3733  loss_mask_3: 1.927  loss_dice_3: 1.964  loss_ce_4: 0.3948  loss_mask_4: 1.933  loss_dice_4: 1.97  loss_ce_5: 0.3823  loss_mask_5: 1.927  loss_dice_5: 1.965    time: 3.1824  last_time: 2.9669  data_time: 1.7355  last_data_time: 1.5356   lr: 0.00055595  max_mem: 12886M
[01/28 15:06:31] d2.utils.events INFO:  eta: 2:20:24  iter: 1219  total_loss: 29.82  loss_ce: 0.3867  loss_mask: 1.909  loss_dice: 1.943  loss_ce_0: 0.4289  loss_mask_0: 1.913  loss_dice_0: 1.98  loss_ce_1: 0.4235  loss_mask_1: 1.911  loss_dice_1: 1.952  loss_ce_2: 0.4017  loss_mask_2: 1.919  loss_dice_2: 1.939  loss_ce_3: 0.3968  loss_mask_3: 1.913  loss_dice_3: 1.941  loss_ce_4: 0.3915  loss_mask_4: 1.912  loss_dice_4: 1.949  loss_ce_5: 0.4015  loss_mask_5: 1.914  loss_dice_5: 1.946    time: 3.1815  last_time: 2.9144  data_time: 1.6944  last_data_time: 1.5039   lr: 0.00055148  max_mem: 12886M
[01/28 15:07:35] d2.utils.events INFO:  eta: 2:19:15  iter: 1239  total_loss: 30.08  loss_ce: 0.3662  loss_mask: 1.921  loss_dice: 2.029  loss_ce_0: 0.4439  loss_mask_0: 1.893  loss_dice_0: 2.081  loss_ce_1: 0.4122  loss_mask_1: 1.919  loss_dice_1: 2.086  loss_ce_2: 0.338  loss_mask_2: 1.934  loss_dice_2: 2.052  loss_ce_3: 0.3434  loss_mask_3: 1.929  loss_dice_3: 2.034  loss_ce_4: 0.3325  loss_mask_4: 1.927  loss_dice_4: 2.037  loss_ce_5: 0.3464  loss_mask_5: 1.929  loss_dice_5: 2.039    time: 3.1813  last_time: 2.8797  data_time: 1.7243  last_data_time: 1.4610   lr: 0.00054696  max_mem: 12886M
[01/28 15:08:37] d2.utils.events INFO:  eta: 2:18:11  iter: 1259  total_loss: 29.1  loss_ce: 0.3656  loss_mask: 1.879  loss_dice: 1.91  loss_ce_0: 0.421  loss_mask_0: 1.87  loss_dice_0: 1.91  loss_ce_1: 0.4069  loss_mask_1: 1.862  loss_dice_1: 1.913  loss_ce_2: 0.3776  loss_mask_2: 1.887  loss_dice_2: 1.893  loss_ce_3: 0.3721  loss_mask_3: 1.884  loss_dice_3: 1.903  loss_ce_4: 0.3489  loss_mask_4: 1.883  loss_dice_4: 1.901  loss_ce_5: 0.3508  loss_mask_5: 1.881  loss_dice_5: 1.907    time: 3.1805  last_time: 3.1426  data_time: 1.6907  last_data_time: 1.7245   lr: 0.00054239  max_mem: 12886M
[01/28 15:09:40] d2.utils.events INFO:  eta: 2:17:05  iter: 1279  total_loss: 29.51  loss_ce: 0.3083  loss_mask: 1.928  loss_dice: 1.938  loss_ce_0: 0.3796  loss_mask_0: 1.928  loss_dice_0: 1.96  loss_ce_1: 0.3493  loss_mask_1: 1.947  loss_dice_1: 1.941  loss_ce_2: 0.3266  loss_mask_2: 1.93  loss_dice_2: 1.933  loss_ce_3: 0.3155  loss_mask_3: 1.919  loss_dice_3: 1.932  loss_ce_4: 0.3553  loss_mask_4: 1.921  loss_dice_4: 1.934  loss_ce_5: 0.3216  loss_mask_5: 1.915  loss_dice_5: 1.96    time: 3.1800  last_time: 2.9657  data_time: 1.7046  last_data_time: 1.5419   lr: 0.00053777  max_mem: 12886M
[01/28 15:10:44] d2.utils.events INFO:  eta: 2:16:00  iter: 1299  total_loss: 29.14  loss_ce: 0.2994  loss_mask: 1.869  loss_dice: 1.927  loss_ce_0: 0.4089  loss_mask_0: 1.875  loss_dice_0: 1.984  loss_ce_1: 0.319  loss_mask_1: 1.883  loss_dice_1: 1.932  loss_ce_2: 0.3004  loss_mask_2: 1.873  loss_dice_2: 1.934  loss_ce_3: 0.2863  loss_mask_3: 1.876  loss_dice_3: 1.941  loss_ce_4: 0.2888  loss_mask_4: 1.882  loss_dice_4: 1.94  loss_ce_5: 0.2937  loss_mask_5: 1.874  loss_dice_5: 1.929    time: 3.1797  last_time: 2.9825  data_time: 1.7247  last_data_time: 1.5398   lr: 0.00053311  max_mem: 12886M
[01/28 15:11:48] d2.utils.events INFO:  eta: 2:15:01  iter: 1319  total_loss: 30.06  loss_ce: 0.3093  loss_mask: 1.946  loss_dice: 2.033  loss_ce_0: 0.4232  loss_mask_0: 1.937  loss_dice_0: 2.056  loss_ce_1: 0.3511  loss_mask_1: 1.95  loss_dice_1: 2.041  loss_ce_2: 0.3282  loss_mask_2: 1.945  loss_dice_2: 2.013  loss_ce_3: 0.3285  loss_mask_3: 1.947  loss_dice_3: 2.021  loss_ce_4: 0.3211  loss_mask_4: 1.953  loss_dice_4: 2.012  loss_ce_5: 0.3071  loss_mask_5: 1.948  loss_dice_5: 2.024    time: 3.1802  last_time: 2.8829  data_time: 1.7705  last_data_time: 1.4576   lr: 0.0005284  max_mem: 12886M
[01/28 15:12:50] d2.utils.events INFO:  eta: 2:13:56  iter: 1339  total_loss: 28.72  loss_ce: 0.285  loss_mask: 1.851  loss_dice: 1.903  loss_ce_0: 0.4105  loss_mask_0: 1.831  loss_dice_0: 1.927  loss_ce_1: 0.3375  loss_mask_1: 1.842  loss_dice_1: 1.942  loss_ce_2: 0.334  loss_mask_2: 1.849  loss_dice_2: 1.924  loss_ce_3: 0.2972  loss_mask_3: 1.85  loss_dice_3: 1.911  loss_ce_4: 0.3025  loss_mask_4: 1.848  loss_dice_4: 1.906  loss_ce_5: 0.3139  loss_mask_5: 1.854  loss_dice_5: 1.92    time: 3.1794  last_time: 2.8526  data_time: 1.6886  last_data_time: 1.3767   lr: 0.00052365  max_mem: 12886M
[01/28 15:13:54] d2.utils.events INFO:  eta: 2:12:55  iter: 1359  total_loss: 29.33  loss_ce: 0.2867  loss_mask: 1.914  loss_dice: 1.927  loss_ce_0: 0.3724  loss_mask_0: 1.935  loss_dice_0: 1.957  loss_ce_1: 0.3157  loss_mask_1: 1.951  loss_dice_1: 1.945  loss_ce_2: 0.2834  loss_mask_2: 1.952  loss_dice_2: 1.929  loss_ce_3: 0.2891  loss_mask_3: 1.935  loss_dice_3: 1.911  loss_ce_4: 0.2885  loss_mask_4: 1.925  loss_dice_4: 1.929  loss_ce_5: 0.2887  loss_mask_5: 1.93  loss_dice_5: 1.938    time: 3.1796  last_time: 2.9460  data_time: 1.7531  last_data_time: 1.5325   lr: 0.00051885  max_mem: 12886M
[01/28 15:14:57] d2.utils.events INFO:  eta: 2:11:49  iter: 1379  total_loss: 28.53  loss_ce: 0.3466  loss_mask: 1.804  loss_dice: 1.901  loss_ce_0: 0.4321  loss_mask_0: 1.809  loss_dice_0: 1.97  loss_ce_1: 0.3897  loss_mask_1: 1.801  loss_dice_1: 1.945  loss_ce_2: 0.385  loss_mask_2: 1.796  loss_dice_2: 1.912  loss_ce_3: 0.3495  loss_mask_3: 1.8  loss_dice_3: 1.911  loss_ce_4: 0.3545  loss_mask_4: 1.818  loss_dice_4: 1.899  loss_ce_5: 0.3603  loss_mask_5: 1.813  loss_dice_5: 1.911    time: 3.1786  last_time: 3.0247  data_time: 1.6690  last_data_time: 1.5521   lr: 0.00051402  max_mem: 12886M
[01/28 15:15:59] d2.utils.events INFO:  eta: 2:10:48  iter: 1399  total_loss: 28.75  loss_ce: 0.273  loss_mask: 1.853  loss_dice: 1.907  loss_ce_0: 0.3784  loss_mask_0: 1.878  loss_dice_0: 1.975  loss_ce_1: 0.3378  loss_mask_1: 1.884  loss_dice_1: 1.951  loss_ce_2: 0.2636  loss_mask_2: 1.877  loss_dice_2: 1.939  loss_ce_3: 0.2818  loss_mask_3: 1.875  loss_dice_3: 1.932  loss_ce_4: 0.2706  loss_mask_4: 1.87  loss_dice_4: 1.92  loss_ce_5: 0.2694  loss_mask_5: 1.862  loss_dice_5: 1.914    time: 3.1781  last_time: 3.0436  data_time: 1.7074  last_data_time: 1.6177   lr: 0.00050914  max_mem: 12886M
[01/28 15:17:02] d2.utils.events INFO:  eta: 2:09:47  iter: 1419  total_loss: 29.35  loss_ce: 0.3048  loss_mask: 1.813  loss_dice: 1.923  loss_ce_0: 0.4107  loss_mask_0: 1.837  loss_dice_0: 1.949  loss_ce_1: 0.3605  loss_mask_1: 1.818  loss_dice_1: 1.959  loss_ce_2: 0.3291  loss_mask_2: 1.818  loss_dice_2: 1.933  loss_ce_3: 0.3253  loss_mask_3: 1.817  loss_dice_3: 1.923  loss_ce_4: 0.3036  loss_mask_4: 1.817  loss_dice_4: 1.912  loss_ce_5: 0.3082  loss_mask_5: 1.819  loss_dice_5: 1.925    time: 3.1770  last_time: 2.8814  data_time: 1.6647  last_data_time: 1.4644   lr: 0.00050423  max_mem: 12886M
[01/28 15:18:05] d2.utils.events INFO:  eta: 2:08:46  iter: 1439  total_loss: 28.5  loss_ce: 0.2645  loss_mask: 1.848  loss_dice: 1.931  loss_ce_0: 0.3934  loss_mask_0: 1.86  loss_dice_0: 1.946  loss_ce_1: 0.3272  loss_mask_1: 1.837  loss_dice_1: 1.959  loss_ce_2: 0.2876  loss_mask_2: 1.836  loss_dice_2: 1.936  loss_ce_3: 0.2769  loss_mask_3: 1.833  loss_dice_3: 1.948  loss_ce_4: 0.2718  loss_mask_4: 1.834  loss_dice_4: 1.927  loss_ce_5: 0.28  loss_mask_5: 1.831  loss_dice_5: 1.931    time: 3.1771  last_time: 2.8611  data_time: 1.7394  last_data_time: 1.4440   lr: 0.00049927  max_mem: 12886M
[01/28 15:19:09] d2.utils.events INFO:  eta: 2:07:46  iter: 1459  total_loss: 29.25  loss_ce: 0.3119  loss_mask: 1.925  loss_dice: 1.972  loss_ce_0: 0.3971  loss_mask_0: 1.934  loss_dice_0: 2.007  loss_ce_1: 0.334  loss_mask_1: 1.88  loss_dice_1: 2.015  loss_ce_2: 0.3275  loss_mask_2: 1.914  loss_dice_2: 1.977  loss_ce_3: 0.3269  loss_mask_3: 1.893  loss_dice_3: 1.973  loss_ce_4: 0.342  loss_mask_4: 1.911  loss_dice_4: 1.958  loss_ce_5: 0.3357  loss_mask_5: 1.924  loss_dice_5: 1.959    time: 3.1771  last_time: 2.9327  data_time: 1.7328  last_data_time: 1.4921   lr: 0.00049428  max_mem: 12886M
[01/28 15:20:13] d2.utils.events INFO:  eta: 2:06:45  iter: 1479  total_loss: 29.52  loss_ce: 0.3383  loss_mask: 1.879  loss_dice: 1.916  loss_ce_0: 0.4389  loss_mask_0: 1.902  loss_dice_0: 1.909  loss_ce_1: 0.4092  loss_mask_1: 1.895  loss_dice_1: 1.908  loss_ce_2: 0.3439  loss_mask_2: 1.879  loss_dice_2: 1.9  loss_ce_3: 0.3533  loss_mask_3: 1.872  loss_dice_3: 1.918  loss_ce_4: 0.3514  loss_mask_4: 1.875  loss_dice_4: 1.907  loss_ce_5: 0.3383  loss_mask_5: 1.874  loss_dice_5: 1.915    time: 3.1775  last_time: 2.9319  data_time: 1.7588  last_data_time: 1.5157   lr: 0.00048925  max_mem: 12886M
[01/28 15:21:16] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2048, sample_style='choice')]
[01/28 15:21:16] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[01/28 15:21:16] d2.data.common INFO: Serializing 992 elements to byte tensors and concatenating them all ...
[01/28 15:21:16] d2.data.common INFO: Serialized dataset takes 0.14 MiB
[01/28 15:21:16] d2.evaluation.evaluator INFO: Start inference on 992 batches
[01/28 15:21:19] d2.evaluation.evaluator INFO: Inference done 11/992. Dataloading: 0.0510 s/iter. Inference: 0.1001 s/iter. Eval: 0.0672 s/iter. Total: 0.2183 s/iter. ETA=0:03:34
[01/28 15:21:24] d2.evaluation.evaluator INFO: Inference done 37/992. Dataloading: 0.0469 s/iter. Inference: 0.0996 s/iter. Eval: 0.0515 s/iter. Total: 0.1980 s/iter. ETA=0:03:09
[01/28 15:21:29] d2.evaluation.evaluator INFO: Inference done 63/992. Dataloading: 0.0477 s/iter. Inference: 0.0995 s/iter. Eval: 0.0509 s/iter. Total: 0.1982 s/iter. ETA=0:03:04
[01/28 15:21:34] d2.evaluation.evaluator INFO: Inference done 86/992. Dataloading: 0.0514 s/iter. Inference: 0.0995 s/iter. Eval: 0.0542 s/iter. Total: 0.2052 s/iter. ETA=0:03:05
[01/28 15:21:39] d2.evaluation.evaluator INFO: Inference done 112/992. Dataloading: 0.0503 s/iter. Inference: 0.0995 s/iter. Eval: 0.0528 s/iter. Total: 0.2028 s/iter. ETA=0:02:58
[01/28 15:21:44] d2.evaluation.evaluator INFO: Inference done 136/992. Dataloading: 0.0509 s/iter. Inference: 0.0996 s/iter. Eval: 0.0534 s/iter. Total: 0.2040 s/iter. ETA=0:02:54
[01/28 15:21:49] d2.evaluation.evaluator INFO: Inference done 160/992. Dataloading: 0.0517 s/iter. Inference: 0.0996 s/iter. Eval: 0.0543 s/iter. Total: 0.2057 s/iter. ETA=0:02:51
[01/28 15:21:54] d2.evaluation.evaluator INFO: Inference done 186/992. Dataloading: 0.0510 s/iter. Inference: 0.0996 s/iter. Eval: 0.0536 s/iter. Total: 0.2042 s/iter. ETA=0:02:44
[01/28 15:21:59] d2.evaluation.evaluator INFO: Inference done 209/992. Dataloading: 0.0518 s/iter. Inference: 0.0995 s/iter. Eval: 0.0548 s/iter. Total: 0.2061 s/iter. ETA=0:02:41
[01/28 15:22:05] d2.evaluation.evaluator INFO: Inference done 234/992. Dataloading: 0.0516 s/iter. Inference: 0.0995 s/iter. Eval: 0.0543 s/iter. Total: 0.2055 s/iter. ETA=0:02:35
[01/28 15:22:10] d2.evaluation.evaluator INFO: Inference done 260/992. Dataloading: 0.0513 s/iter. Inference: 0.0995 s/iter. Eval: 0.0537 s/iter. Total: 0.2045 s/iter. ETA=0:02:29
[01/28 15:22:15] d2.evaluation.evaluator INFO: Inference done 282/992. Dataloading: 0.0523 s/iter. Inference: 0.0995 s/iter. Eval: 0.0546 s/iter. Total: 0.2064 s/iter. ETA=0:02:26
[01/28 15:22:20] d2.evaluation.evaluator INFO: Inference done 308/992. Dataloading: 0.0518 s/iter. Inference: 0.0995 s/iter. Eval: 0.0540 s/iter. Total: 0.2054 s/iter. ETA=0:02:20
[01/28 15:22:25] d2.evaluation.evaluator INFO: Inference done 334/992. Dataloading: 0.0516 s/iter. Inference: 0.0995 s/iter. Eval: 0.0536 s/iter. Total: 0.2047 s/iter. ETA=0:02:14
[01/28 15:22:30] d2.evaluation.evaluator INFO: Inference done 357/992. Dataloading: 0.0522 s/iter. Inference: 0.0995 s/iter. Eval: 0.0543 s/iter. Total: 0.2061 s/iter. ETA=0:02:10
[01/28 15:22:35] d2.evaluation.evaluator INFO: Inference done 383/992. Dataloading: 0.0517 s/iter. Inference: 0.0995 s/iter. Eval: 0.0539 s/iter. Total: 0.2051 s/iter. ETA=0:02:04
[01/28 15:22:40] d2.evaluation.evaluator INFO: Inference done 407/992. Dataloading: 0.0520 s/iter. Inference: 0.0995 s/iter. Eval: 0.0540 s/iter. Total: 0.2055 s/iter. ETA=0:02:00
[01/28 15:22:45] d2.evaluation.evaluator INFO: Inference done 431/992. Dataloading: 0.0522 s/iter. Inference: 0.0994 s/iter. Eval: 0.0542 s/iter. Total: 0.2059 s/iter. ETA=0:01:55
[01/28 15:22:50] d2.evaluation.evaluator INFO: Inference done 457/992. Dataloading: 0.0518 s/iter. Inference: 0.0994 s/iter. Eval: 0.0538 s/iter. Total: 0.2051 s/iter. ETA=0:01:49
[01/28 15:22:55] d2.evaluation.evaluator INFO: Inference done 480/992. Dataloading: 0.0521 s/iter. Inference: 0.0994 s/iter. Eval: 0.0542 s/iter. Total: 0.2058 s/iter. ETA=0:01:45
[01/28 15:23:00] d2.evaluation.evaluator INFO: Inference done 505/992. Dataloading: 0.0521 s/iter. Inference: 0.0994 s/iter. Eval: 0.0542 s/iter. Total: 0.2058 s/iter. ETA=0:01:40
[01/28 15:23:05] d2.evaluation.evaluator INFO: Inference done 531/992. Dataloading: 0.0518 s/iter. Inference: 0.0994 s/iter. Eval: 0.0539 s/iter. Total: 0.2052 s/iter. ETA=0:01:34
[01/28 15:23:10] d2.evaluation.evaluator INFO: Inference done 553/992. Dataloading: 0.0523 s/iter. Inference: 0.0995 s/iter. Eval: 0.0544 s/iter. Total: 0.2062 s/iter. ETA=0:01:30
[01/28 15:23:16] d2.evaluation.evaluator INFO: Inference done 579/992. Dataloading: 0.0521 s/iter. Inference: 0.0995 s/iter. Eval: 0.0541 s/iter. Total: 0.2058 s/iter. ETA=0:01:24
[01/28 15:23:21] d2.evaluation.evaluator INFO: Inference done 605/992. Dataloading: 0.0519 s/iter. Inference: 0.0994 s/iter. Eval: 0.0538 s/iter. Total: 0.2052 s/iter. ETA=0:01:19
[01/28 15:23:26] d2.evaluation.evaluator INFO: Inference done 627/992. Dataloading: 0.0522 s/iter. Inference: 0.0995 s/iter. Eval: 0.0542 s/iter. Total: 0.2060 s/iter. ETA=0:01:15
[01/28 15:23:31] d2.evaluation.evaluator INFO: Inference done 653/992. Dataloading: 0.0520 s/iter. Inference: 0.0994 s/iter. Eval: 0.0540 s/iter. Total: 0.2056 s/iter. ETA=0:01:09
[01/28 15:23:36] d2.evaluation.evaluator INFO: Inference done 678/992. Dataloading: 0.0520 s/iter. Inference: 0.0994 s/iter. Eval: 0.0540 s/iter. Total: 0.2055 s/iter. ETA=0:01:04
[01/28 15:23:41] d2.evaluation.evaluator INFO: Inference done 702/992. Dataloading: 0.0522 s/iter. Inference: 0.0995 s/iter. Eval: 0.0541 s/iter. Total: 0.2058 s/iter. ETA=0:00:59
[01/28 15:23:46] d2.evaluation.evaluator INFO: Inference done 728/992. Dataloading: 0.0520 s/iter. Inference: 0.0995 s/iter. Eval: 0.0539 s/iter. Total: 0.2054 s/iter. ETA=0:00:54
[01/28 15:23:51] d2.evaluation.evaluator INFO: Inference done 752/992. Dataloading: 0.0521 s/iter. Inference: 0.0994 s/iter. Eval: 0.0540 s/iter. Total: 0.2057 s/iter. ETA=0:00:49
[01/28 15:23:56] d2.evaluation.evaluator INFO: Inference done 777/992. Dataloading: 0.0522 s/iter. Inference: 0.0994 s/iter. Eval: 0.0540 s/iter. Total: 0.2057 s/iter. ETA=0:00:44
[01/28 15:24:01] d2.evaluation.evaluator INFO: Inference done 803/992. Dataloading: 0.0520 s/iter. Inference: 0.0994 s/iter. Eval: 0.0538 s/iter. Total: 0.2053 s/iter. ETA=0:00:38
[01/28 15:24:06] d2.evaluation.evaluator INFO: Inference done 826/992. Dataloading: 0.0522 s/iter. Inference: 0.0994 s/iter. Eval: 0.0541 s/iter. Total: 0.2058 s/iter. ETA=0:00:34
[01/28 15:24:12] d2.evaluation.evaluator INFO: Inference done 852/992. Dataloading: 0.0521 s/iter. Inference: 0.0994 s/iter. Eval: 0.0540 s/iter. Total: 0.2056 s/iter. ETA=0:00:28
[01/28 15:24:17] d2.evaluation.evaluator INFO: Inference done 878/992. Dataloading: 0.0520 s/iter. Inference: 0.0994 s/iter. Eval: 0.0538 s/iter. Total: 0.2053 s/iter. ETA=0:00:23
[01/28 15:24:22] d2.evaluation.evaluator INFO: Inference done 901/992. Dataloading: 0.0523 s/iter. Inference: 0.0994 s/iter. Eval: 0.0540 s/iter. Total: 0.2058 s/iter. ETA=0:00:18
[01/28 15:24:27] d2.evaluation.evaluator INFO: Inference done 927/992. Dataloading: 0.0521 s/iter. Inference: 0.0994 s/iter. Eval: 0.0539 s/iter. Total: 0.2055 s/iter. ETA=0:00:13
[01/28 15:24:32] d2.evaluation.evaluator INFO: Inference done 952/992. Dataloading: 0.0521 s/iter. Inference: 0.0994 s/iter. Eval: 0.0538 s/iter. Total: 0.2054 s/iter. ETA=0:00:08
[01/28 15:24:37] d2.evaluation.evaluator INFO: Inference done 976/992. Dataloading: 0.0523 s/iter. Inference: 0.0994 s/iter. Eval: 0.0540 s/iter. Total: 0.2057 s/iter. ETA=0:00:03
[01/28 15:24:40] d2.evaluation.evaluator INFO: Total inference time: 0:03:22.810093 (0.205481 s / iter per device, on 1 devices)
[01/28 15:24:40] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:38 (0.099404 s / iter per device, on 1 devices)
[01/28 15:24:41] d2.evaluation.sem_seg_evaluation INFO: OrderedDict([('sem_seg', {'mIoU': 39.488867283343424, 'fwIoU': 36.62577832603963, 'IoU-background': 99.32510627745732, 'BoundaryIoU-background': 65.9976834028449, 'min(IoU, B-Iou)-background': 65.9976834028449, 'IoU-building': 34.47644495309829, 'BoundaryIoU-building': 16.996742935433314, 'min(IoU, B-Iou)-building': 16.996742935433314, 'IoU-road': 11.063103781695585, 'BoundaryIoU-road': 12.164750843933572, 'min(IoU, B-Iou)-road': 11.063103781695585, 'IoU-water': 32.98316851650732, 'BoundaryIoU-water': 19.91663791589129, 'min(IoU, B-Iou)-water': 19.91663791589129, 'IoU-barren': 57.74154774094175, 'BoundaryIoU-barren': 15.47226465874036, 'min(IoU, B-Iou)-barren': 15.47226465874036, 'IoU-forest': 35.81234983974361, 'BoundaryIoU-forest': 7.372071144255882, 'min(IoU, B-Iou)-forest': 7.372071144255882, 'IoU-agriculture': 5.020349873960106, 'BoundaryIoU-agriculture': 0.6980786939483355, 'min(IoU, B-Iou)-agriculture': 0.6980786939483355, 'mACC': 54.094381686871884, 'pACC': 46.347121401206444, 'ACC-background': 99.92742527658905, 'ACC-building': 42.1067927229377, 'ACC-road': 91.82918220909406, 'ACC-water': 34.36943687723015, 'ACC-barren': 60.226181306874274, 'ACC-forest': 44.86637485365052, 'ACC-agriculture': 5.335278561727406})])
[01/28 15:24:41] d2.engine.defaults INFO: Evaluation results for loveda_val in csv format:
[01/28 15:24:41] d2.evaluation.testing INFO: copypaste: Task: sem_seg
[01/28 15:24:41] d2.evaluation.testing INFO: copypaste: mIoU,fwIoU,mACC,pACC
[01/28 15:24:41] d2.evaluation.testing INFO: copypaste: 39.4889,36.6258,54.0944,46.3471
[01/28 15:24:41] d2.utils.events INFO:  eta: 2:05:45  iter: 1499  total_loss: 29  loss_ce: 0.3096  loss_mask: 1.846  loss_dice: 1.965  loss_ce_0: 0.3855  loss_mask_0: 1.865  loss_dice_0: 1.965  loss_ce_1: 0.3617  loss_mask_1: 1.875  loss_dice_1: 1.969  loss_ce_2: 0.3327  loss_mask_2: 1.838  loss_dice_2: 1.956  loss_ce_3: 0.3325  loss_mask_3: 1.834  loss_dice_3: 1.951  loss_ce_4: 0.2966  loss_mask_4: 1.842  loss_dice_4: 1.969  loss_ce_5: 0.3081  loss_mask_5: 1.841  loss_dice_5: 1.966    time: 3.1773  last_time: 3.0708  data_time: 1.7203  last_data_time: 1.6045   lr: 0.00048419  max_mem: 12886M
[01/28 15:25:43] d2.utils.events INFO:  eta: 2:04:40  iter: 1519  total_loss: 28.49  loss_ce: 0.309  loss_mask: 1.817  loss_dice: 1.878  loss_ce_0: 0.3919  loss_mask_0: 1.827  loss_dice_0: 1.888  loss_ce_1: 0.364  loss_mask_1: 1.817  loss_dice_1: 1.895  loss_ce_2: 0.3234  loss_mask_2: 1.819  loss_dice_2: 1.875  loss_ce_3: 0.3177  loss_mask_3: 1.811  loss_dice_3: 1.857  loss_ce_4: 0.3193  loss_mask_4: 1.82  loss_dice_4: 1.862  loss_ce_5: 0.3036  loss_mask_5: 1.835  loss_dice_5: 1.86    time: 3.1768  last_time: 3.4869  data_time: 1.7015  last_data_time: 1.9512   lr: 0.0004791  max_mem: 12886M
[01/28 15:26:47] d2.utils.events INFO:  eta: 2:03:31  iter: 1539  total_loss: 28.94  loss_ce: 0.2879  loss_mask: 1.873  loss_dice: 1.966  loss_ce_0: 0.4153  loss_mask_0: 1.855  loss_dice_0: 1.957  loss_ce_1: 0.3503  loss_mask_1: 1.87  loss_dice_1: 2  loss_ce_2: 0.338  loss_mask_2: 1.866  loss_dice_2: 1.976  loss_ce_3: 0.307  loss_mask_3: 1.867  loss_dice_3: 1.969  loss_ce_4: 0.335  loss_mask_4: 1.85  loss_dice_4: 1.988  loss_ce_5: 0.3089  loss_mask_5: 1.861  loss_dice_5: 1.974    time: 3.1767  last_time: 2.9852  data_time: 1.7281  last_data_time: 1.5590   lr: 0.00047397  max_mem: 12886M
[01/28 15:27:49] d2.utils.events INFO:  eta: 2:02:23  iter: 1559  total_loss: 27.99  loss_ce: 0.243  loss_mask: 1.872  loss_dice: 1.892  loss_ce_0: 0.3358  loss_mask_0: 1.852  loss_dice_0: 1.917  loss_ce_1: 0.2721  loss_mask_1: 1.849  loss_dice_1: 1.899  loss_ce_2: 0.2466  loss_mask_2: 1.855  loss_dice_2: 1.889  loss_ce_3: 0.2267  loss_mask_3: 1.869  loss_dice_3: 1.879  loss_ce_4: 0.2446  loss_mask_4: 1.869  loss_dice_4: 1.875  loss_ce_5: 0.2444  loss_mask_5: 1.856  loss_dice_5: 1.88    time: 3.1759  last_time: 3.2847  data_time: 1.6813  last_data_time: 1.7809   lr: 0.00046882  max_mem: 12886M
[01/28 15:28:53] d2.utils.events INFO:  eta: 2:01:27  iter: 1579  total_loss: 28.85  loss_ce: 0.3143  loss_mask: 1.809  loss_dice: 1.928  loss_ce_0: 0.379  loss_mask_0: 1.808  loss_dice_0: 1.946  loss_ce_1: 0.3225  loss_mask_1: 1.816  loss_dice_1: 1.976  loss_ce_2: 0.3144  loss_mask_2: 1.815  loss_dice_2: 1.948  loss_ce_3: 0.341  loss_mask_3: 1.814  loss_dice_3: 1.938  loss_ce_4: 0.3359  loss_mask_4: 1.805  loss_dice_4: 1.935  loss_ce_5: 0.3356  loss_mask_5: 1.811  loss_dice_5: 1.926    time: 3.1759  last_time: 2.9801  data_time: 1.7332  last_data_time: 1.5704   lr: 0.00046363  max_mem: 12886M
[01/28 15:29:57] d2.utils.events INFO:  eta: 2:00:27  iter: 1599  total_loss: 28.74  loss_ce: 0.3203  loss_mask: 1.883  loss_dice: 1.872  loss_ce_0: 0.3976  loss_mask_0: 1.866  loss_dice_0: 1.905  loss_ce_1: 0.3618  loss_mask_1: 1.846  loss_dice_1: 1.896  loss_ce_2: 0.33  loss_mask_2: 1.874  loss_dice_2: 1.881  loss_ce_3: 0.3006  loss_mask_3: 1.889  loss_dice_3: 1.871  loss_ce_4: 0.3153  loss_mask_4: 1.882  loss_dice_4: 1.879  loss_ce_5: 0.3315  loss_mask_5: 1.884  loss_dice_5: 1.873    time: 3.1763  last_time: 3.8634  data_time: 1.7680  last_data_time: 2.3319   lr: 0.00045842  max_mem: 12886M
[01/28 15:30:59] d2.utils.events INFO:  eta: 1:59:25  iter: 1619  total_loss: 27.78  loss_ce: 0.306  loss_mask: 1.827  loss_dice: 1.847  loss_ce_0: 0.3921  loss_mask_0: 1.79  loss_dice_0: 1.887  loss_ce_1: 0.3224  loss_mask_1: 1.81  loss_dice_1: 1.869  loss_ce_2: 0.3155  loss_mask_2: 1.846  loss_dice_2: 1.845  loss_ce_3: 0.3211  loss_mask_3: 1.838  loss_dice_3: 1.84  loss_ce_4: 0.3134  loss_mask_4: 1.83  loss_dice_4: 1.86  loss_ce_5: 0.3223  loss_mask_5: 1.838  loss_dice_5: 1.843    time: 3.1755  last_time: 2.8435  data_time: 1.6774  last_data_time: 1.4147   lr: 0.00045318  max_mem: 12886M
[01/28 15:32:03] d2.utils.events INFO:  eta: 1:58:22  iter: 1639  total_loss: 28.92  loss_ce: 0.3045  loss_mask: 1.921  loss_dice: 1.895  loss_ce_0: 0.4027  loss_mask_0: 1.913  loss_dice_0: 1.948  loss_ce_1: 0.3048  loss_mask_1: 1.958  loss_dice_1: 1.953  loss_ce_2: 0.3121  loss_mask_2: 1.938  loss_dice_2: 1.889  loss_ce_3: 0.3127  loss_mask_3: 1.96  loss_dice_3: 1.904  loss_ce_4: 0.2995  loss_mask_4: 1.952  loss_dice_4: 1.898  loss_ce_5: 0.3096  loss_mask_5: 1.933  loss_dice_5: 1.899    time: 3.1755  last_time: 3.8542  data_time: 1.7347  last_data_time: 2.3353   lr: 0.00044791  max_mem: 12886M
[01/28 15:33:05] d2.utils.events INFO:  eta: 1:57:20  iter: 1659  total_loss: 29  loss_ce: 0.2769  loss_mask: 1.895  loss_dice: 1.899  loss_ce_0: 0.3471  loss_mask_0: 1.906  loss_dice_0: 1.947  loss_ce_1: 0.3523  loss_mask_1: 1.895  loss_dice_1: 1.913  loss_ce_2: 0.3152  loss_mask_2: 1.877  loss_dice_2: 1.9  loss_ce_3: 0.2736  loss_mask_3: 1.878  loss_dice_3: 1.907  loss_ce_4: 0.2744  loss_mask_4: 1.891  loss_dice_4: 1.893  loss_ce_5: 0.3179  loss_mask_5: 1.89  loss_dice_5: 1.918    time: 3.1750  last_time: 2.9229  data_time: 1.6931  last_data_time: 1.5189   lr: 0.00044262  max_mem: 12886M
[01/28 15:34:09] d2.utils.events INFO:  eta: 1:56:18  iter: 1679  total_loss: 28.07  loss_ce: 0.2814  loss_mask: 1.793  loss_dice: 1.817  loss_ce_0: 0.3847  loss_mask_0: 1.796  loss_dice_0: 1.86  loss_ce_1: 0.3365  loss_mask_1: 1.824  loss_dice_1: 1.842  loss_ce_2: 0.2992  loss_mask_2: 1.794  loss_dice_2: 1.823  loss_ce_3: 0.2954  loss_mask_3: 1.792  loss_dice_3: 1.816  loss_ce_4: 0.27  loss_mask_4: 1.801  loss_dice_4: 1.817  loss_ce_5: 0.2898  loss_mask_5: 1.798  loss_dice_5: 1.814    time: 3.1750  last_time: 3.7874  data_time: 1.7337  last_data_time: 2.2834   lr: 0.00043731  max_mem: 12886M
[01/28 15:35:12] d2.utils.events INFO:  eta: 1:55:29  iter: 1699  total_loss: 27.92  loss_ce: 0.326  loss_mask: 1.801  loss_dice: 1.856  loss_ce_0: 0.3813  loss_mask_0: 1.808  loss_dice_0: 1.903  loss_ce_1: 0.3594  loss_mask_1: 1.803  loss_dice_1: 1.879  loss_ce_2: 0.335  loss_mask_2: 1.797  loss_dice_2: 1.86  loss_ce_3: 0.3308  loss_mask_3: 1.795  loss_dice_3: 1.841  loss_ce_4: 0.3183  loss_mask_4: 1.794  loss_dice_4: 1.85  loss_ce_5: 0.3279  loss_mask_5: 1.802  loss_dice_5: 1.848    time: 3.1750  last_time: 3.0270  data_time: 1.7345  last_data_time: 1.6167   lr: 0.00043197  max_mem: 12886M
[01/28 15:36:15] d2.utils.events INFO:  eta: 1:54:21  iter: 1719  total_loss: 28.79  loss_ce: 0.3039  loss_mask: 1.839  loss_dice: 1.906  loss_ce_0: 0.4243  loss_mask_0: 1.854  loss_dice_0: 1.939  loss_ce_1: 0.3546  loss_mask_1: 1.857  loss_dice_1: 1.919  loss_ce_2: 0.3047  loss_mask_2: 1.844  loss_dice_2: 1.902  loss_ce_3: 0.3293  loss_mask_3: 1.834  loss_dice_3: 1.903  loss_ce_4: 0.3025  loss_mask_4: 1.85  loss_dice_4: 1.907  loss_ce_5: 0.2922  loss_mask_5: 1.841  loss_dice_5: 1.91    time: 3.1747  last_time: 3.7394  data_time: 1.7106  last_data_time: 2.2386   lr: 0.00042662  max_mem: 12886M
[01/28 15:36:58] d2.engine.hooks INFO: Overall training speed: 1731 iterations in 1:31:37 (3.1757 s / it)
[01/28 15:36:58] d2.engine.hooks INFO: Total training time: 1:41:58 (0:10:21 on hooks)
[01/28 15:36:58] d2.utils.events INFO:  eta: 1:53:37  iter: 1733  total_loss: 28.24  loss_ce: 0.2774  loss_mask: 1.838  loss_dice: 1.891  loss_ce_0: 0.381  loss_mask_0: 1.829  loss_dice_0: 1.939  loss_ce_1: 0.3449  loss_mask_1: 1.837  loss_dice_1: 1.935  loss_ce_2: 0.2749  loss_mask_2: 1.837  loss_dice_2: 1.905  loss_ce_3: 0.2782  loss_mask_3: 1.841  loss_dice_3: 1.886  loss_ce_4: 0.274  loss_mask_4: 1.842  loss_dice_4: 1.901  loss_ce_5: 0.2687  loss_mask_5: 1.825  loss_dice_5: 1.88    time: 3.1746  last_time: 3.4124  data_time: 1.7296  last_data_time: 1.8851   lr: 0.00042313  max_mem: 12886M
[01/28 15:45:32] detectron2 INFO: Rank of current process: 0. World size: 1
[01/28 15:45:33] detectron2 INFO: Environment info:
-------------------------------  -----------------------------------------------------------------
sys.platform                     linux
Python                           3.11.11 (main, Dec  4 2024, 08:55:07) [GCC 11.4.0]
numpy                            1.26.4
detectron2                       0.6 @/usr/local/lib/python3.11/dist-packages/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.2
detectron2 arch flags            7.5
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.5.1+cu121 @/usr/local/lib/python3.11/dist-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            Tesla T4 (arch=7.5)
Driver version                   535.104.05
CUDA_HOME                        /usr/local/cuda
Pillow                           11.1.0
torchvision                      0.20.1+cu121 @/usr/local/lib/python3.11/dist-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -----------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2024.2-Product Build 20240605 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.5.3 (Git Hash 66f0cb9eb66affd2da3bf5f8d897376f04aae6af)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DLIBKINETO_NOXPUPTI=ON -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, TORCH_VERSION=2.5.1, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[01/28 15:45:33] detectron2 INFO: Command line arguments: Namespace(config_file='./configs/loveDa/semantic-segmentation/pem_R50_bs32_90k.yaml', resume=False, eval_only=False, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:49152', opts=['DATALOADER.NUM_WORKERS', '0'])
[01/28 15:45:33] detectron2 INFO: Contents of args.config_file=./configs/loveDa/semantic-segmentation/pem_R50_bs32_90k.yaml:
[38;5;204m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBase-loveDa-SemanticSegmentation.yaml[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormer[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormerHead[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mSyncBN[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;245m# pixel decoder[39m
[38;5;15m    [39m[38;5;204mPIXEL_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPEM_Pixel_Decoder[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_ENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMultiScaleMaskedTransformerDecoder[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mmulti_scale_pixel_decoder[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mCLASS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mENFORCE_INPUT_PROJ[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m[38;5;15m [39m[38;5;245m# 6 decoder layers, add one for the loss on learnable query[39m
[38;5;15m    [39m[38;5;204mTRAIN_NUM_POINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12544[39m
[38;5;15m    [39m[38;5;204mOVERSAMPLE_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3.0[39m
[38;5;15m    [39m[38;5;204mIMPORTANCE_SAMPLE_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.75[39m
[38;5;15m    [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mSEMANTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m      [39m[38;5;204mINSTANCE_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m      [39m[38;5;204mPANOPTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.8[39m
[38;5;15m      [39m[38;5;204mOBJECT_MASK_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.8[39m

[01/28 15:45:33] detectron2 INFO: Running with full config:
[38;5;204mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mREPEAT_SQRT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mloveda_val[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mloveda_train[39m
[38;5;204mFLOAT32_PRECISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;204mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCOLOR_AUG_SSD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSINGLE_CATEGORY_MAX_AREA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mabsolute[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mmask_former_semantic[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRGB[39m
[38;5;15m  [39m[38;5;204mIMAGE_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m  [39m[38;5;204mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;204mMAX_SCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m  [39m[38;5;204mMIN_SCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m614[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m716[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m819[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m921[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1126[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1228[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1331[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1433[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1536[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1638[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1740[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1843[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1945[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;204mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;204mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_resnet_backbone[39m
[38;5;15m  [39m[38;5;204mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLASS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mENFORCE_INPUT_PROJ[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mIMPORTANCE_SAMPLE_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.75[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mOVERSAMPLE_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3.0[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mINSTANCE_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m      [39m[38;5;204mOBJECT_MASK_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.8[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.8[39m
[38;5;15m      [39m[38;5;204mPANOPTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m      [39m[38;5;204mSEMANTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mSEM_SEG_POSTPROCESSING_BEFORE_INFERENCE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mTRAIN_NUM_POINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12544[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMultiScaleMaskedTransformerDecoder[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mmulti_scale_pixel_decoder[39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormer[39m
[38;5;15m  [39m[38;5;204mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;204mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSyncBN[39m
[38;5;15m    [39m[38;5;204mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_MULTI_GRID[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;204mSTEM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbasic[39m
[38;5;15m    [39m[38;5;204mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;204mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;204mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRes5ROIHeads[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;204mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m18[39m
[38;5;15m    [39m[38;5;204mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mLOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhard_pixel_mining[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormerHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSyncBN[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m    [39m[38;5;204mPIXEL_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPEM_Pixel_Decoder[39m
[38;5;15m    [39m[38;5;204mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m    [39m[38;5;204mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_ENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSTDC[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBLOCK_NUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mBLOCK_TIPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcat[39m
[38;5;15m    [39m[38;5;204mLAYERS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSyncBN[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mUSE_CONV_LAST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdetectron2://ImageNetPretrained/torchvision/R-50.pkl[39m
[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output[39m
[38;5;204mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0007[39m
[38;5;15m  [39m[38;5;204mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfull_model[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m16[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupCosineLR[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m  [39m[38;5;204mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mADAMW[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_CONSTANT_ENDING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30000[39m
[38;5;15m  [39m[38;5;204mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;204mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1280[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1536[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1792[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;204mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[01/28 15:45:33] detectron2 INFO: Full config saved to ./output/config.yaml
[01/28 15:45:33] d2.utils.env INFO: Using a generated random seed 33581340
[01/28 15:45:34] d2.engine.defaults INFO: Model:
MaskFormer(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): MaskFormerHead(
    (pixel_decoder): PEM_Pixel_Decoder(
      (in_projections): ModuleList(
        (0): ConvBNReLU(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU()
        )
        (1): ConvBNReLU(
          (conv): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU()
        )
        (2): ConvBNReLU(
          (conv): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU()
        )
        (3): ConvBNReLU(
          (conv): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU()
        )
      )
      (conv_avg): ConvBNReLU(
        (conv): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
      (csm): ModuleList(
        (0-3): 4 x CSM(
          (mlp): Sequential(
            (0): MLP(
              (mlp): Sequential(
                (0): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
                (3): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              )
            )
            (1): Sigmoid()
          )
        )
      )
      (dcn): ModuleList(
        (0-2): 3 x DeformLayer(
          (dcn_offset): Conv2d(128, 27, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (dcn): ModulatedDeformConv(in_channels=128, out_channels=128, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=1, deformable_groups=1, bias=False)
          (dcn_bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (up_sample): ConvTranspose2d(128, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
          (up_bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU()
        )
      )
      (out): ConvBNReLU(
        (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-5): 6 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-5): 6 x PEM_CA(
          (feature_proj): LocalRepresentation(
            (to_query_3x3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256)
            (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (out): Linear(in_features=256, out_features=256, bias=True)
          )
          (query_proj): Sequential(
            (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            (1): Linear(in_features=256, out_features=256, bias=True)
          )
          (proj): Linear(in_features=256, out_features=256, bias=True)
          (final): Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-5): 6 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(100, 256)
      (query_embed): Embedding(100, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
      )
      (class_embed): Linear(in_features=256, out_features=8, bias=True)
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0}
      num_classes: 7
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
)
[01/28 15:45:34] d2.data.build INFO: Using training sampler TrainingSampler
[01/28 15:45:34] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[01/28 15:45:34] d2.data.common INFO: Serializing 1156 elements to byte tensors and concatenating them all ...
[01/28 15:45:34] d2.data.common INFO: Serialized dataset takes 0.19 MiB
[01/28 15:45:34] d2.data.build INFO: Making batched data loader with batch_size=16
[01/28 15:45:34] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/torchvision/R-50.pkl ...
[01/28 15:45:34] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /root/.torch/iopath_cache/detectron2/ImageNetPretrained/torchvision/R-50.pkl ...
[01/28 15:45:35] fvcore.common.checkpoint INFO: Reading a file from 'torchvision'
[01/28 15:45:35] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone - Total num: 53
[01/28 15:45:35] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mcriterion.empty_weight[0m
[34msem_seg_head.pixel_decoder.conv_avg.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.conv_avg.conv.weight[0m
[34msem_seg_head.pixel_decoder.csm.0.mlp.0.mlp.0.weight[0m
[34msem_seg_head.pixel_decoder.csm.0.mlp.0.mlp.1.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.csm.0.mlp.0.mlp.3.weight[0m
[34msem_seg_head.pixel_decoder.csm.1.mlp.0.mlp.0.weight[0m
[34msem_seg_head.pixel_decoder.csm.1.mlp.0.mlp.1.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.csm.1.mlp.0.mlp.3.weight[0m
[34msem_seg_head.pixel_decoder.csm.2.mlp.0.mlp.0.weight[0m
[34msem_seg_head.pixel_decoder.csm.2.mlp.0.mlp.1.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.csm.2.mlp.0.mlp.3.weight[0m
[34msem_seg_head.pixel_decoder.csm.3.mlp.0.mlp.0.weight[0m
[34msem_seg_head.pixel_decoder.csm.3.mlp.0.mlp.1.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.csm.3.mlp.0.mlp.3.weight[0m
[34msem_seg_head.pixel_decoder.dcn.0.dcn.weight[0m
[34msem_seg_head.pixel_decoder.dcn.0.dcn_bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.0.dcn_offset.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.0.up_bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.0.up_sample.weight[0m
[34msem_seg_head.pixel_decoder.dcn.1.dcn.weight[0m
[34msem_seg_head.pixel_decoder.dcn.1.dcn_bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.1.dcn_offset.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.1.up_bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.1.up_sample.weight[0m
[34msem_seg_head.pixel_decoder.dcn.2.dcn.weight[0m
[34msem_seg_head.pixel_decoder.dcn.2.dcn_bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.2.dcn_offset.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.2.up_bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.2.up_sample.weight[0m
[34msem_seg_head.pixel_decoder.in_projections.0.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.in_projections.0.conv.weight[0m
[34msem_seg_head.pixel_decoder.in_projections.1.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.in_projections.1.conv.weight[0m
[34msem_seg_head.pixel_decoder.in_projections.2.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.in_projections.2.conv.weight[0m
[34msem_seg_head.pixel_decoder.in_projections.3.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.in_projections.3.conv.weight[0m
[34msem_seg_head.pixel_decoder.out.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.out.conv.weight[0m
[34msem_seg_head.predictor.class_embed.{bias, weight}[0m
[34msem_seg_head.predictor.decoder_norm.{bias, weight}[0m
[34msem_seg_head.predictor.input_proj.0.{bias, weight}[0m
[34msem_seg_head.predictor.input_proj.1.{bias, weight}[0m
[34msem_seg_head.predictor.input_proj.2.{bias, weight}[0m
[34msem_seg_head.predictor.level_embed.weight[0m
[34msem_seg_head.predictor.mask_embed.layers.0.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.1.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.2.{bias, weight}[0m
[34msem_seg_head.predictor.query_embed.weight[0m
[34msem_seg_head.predictor.query_feat.weight[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.alpha[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.feature_proj.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.feature_proj.out.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.feature_proj.to_query_3x3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.final.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.query_proj.0.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.query_proj.1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.alpha[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.feature_proj.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.feature_proj.out.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.feature_proj.to_query_3x3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.final.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.query_proj.0.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.query_proj.1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.alpha[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.feature_proj.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.feature_proj.out.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.feature_proj.to_query_3x3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.final.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.query_proj.0.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.query_proj.1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.3.alpha[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.3.feature_proj.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.3.feature_proj.out.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.3.feature_proj.to_query_3x3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.3.final.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.3.proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.3.query_proj.0.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.3.query_proj.1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.4.alpha[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.4.feature_proj.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.4.feature_proj.out.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.4.feature_proj.to_query_3x3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.4.final.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.4.proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.4.query_proj.0.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.4.query_proj.1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.5.alpha[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.5.feature_proj.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.5.feature_proj.out.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.5.feature_proj.to_query_3x3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.5.final.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.5.proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.5.query_proj.0.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.5.query_proj.1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.0.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.0.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.0.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.1.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.1.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.1.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.2.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.2.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.2.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.3.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.3.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.3.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.4.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.4.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.4.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.5.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.5.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.5.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.0.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.0.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.0.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.1.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.1.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.1.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.2.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.2.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.2.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.3.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.3.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.3.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.4.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.4.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.4.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.5.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.5.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.5.self_attn.{in_proj_bias, in_proj_weight}[0m
[01/28 15:45:35] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mstem.fc.{bias, weight}[0m
[01/28 15:45:35] d2.engine.train_loop INFO: Starting training from iteration 0
[01/28 15:45:35] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/usr/local/lib/python3.11/dist-packages/detectron2/engine/train_loop.py", line 155, in train
    self.run_step()
  File "/usr/local/lib/python3.11/dist-packages/detectron2/engine/defaults.py", line 530, in run_step
    self._trainer.run_step()
  File "/usr/local/lib/python3.11/dist-packages/detectron2/engine/train_loop.py", line 488, in run_step
    data = next(self._data_loader_iter)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/detectron2/data/common.py", line 329, in __iter__
    for d in self.dataset:
  File "/usr/local/lib/python3.11/dist-packages/torch/utils/data/dataloader.py", line 701, in __next__
    data = self._next_data()
           ^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/utils/data/dataloader.py", line 757, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/torch/utils/data/_utils/fetch.py", line 33, in fetch
    data.append(next(self.dataset_iter))
                ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/detectron2/data/common.py", line 296, in __iter__
    yield self.dataset[idx]
          ~~~~~~~~~~~~^^^^^
  File "/usr/local/lib/python3.11/dist-packages/detectron2/data/common.py", line 125, in __getitem__
    data = self._map_func(self._dataset[cur_idx])
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/detectron2/utils/serialize.py", line 26, in __call__
    return self._obj(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/content/PEM/pem/data/dataset_mappers/mask_former_semantic_dataset_mapper.py", line 114, in __call__
    sem_seg_gt = utils.read_image(dataset_dict.pop("sem_seg_file_name")).astype("double")
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/detectron2/data/detection_utils.py", line 180, in read_image
    with PathManager.open(file_name, "rb") as f:
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/iopath/common/file_io.py", line 1012, in open
    bret = handler._open(path, mode, buffering=buffering, **kwargs)  # type: ignore
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.11/dist-packages/iopath/common/file_io.py", line 604, in _open
    return open(  # type: ignore
           ^^^^^^^^^^^^^^^^^^^^^
FileNotFoundError: [Errno 2] No such file or directory: 'datasets/loveDa/train/annotations/2053_fake.png'
[01/28 15:45:35] d2.engine.hooks INFO: Total training time: 0:00:00 (0:00:00 on hooks)
[01/28 15:45:35] d2.utils.events INFO:  iter: 0       lr: N/A  max_mem: 139M
[01/28 15:48:31] detectron2 INFO: Rank of current process: 0. World size: 1
[01/28 15:48:32] detectron2 INFO: Environment info:
-------------------------------  -----------------------------------------------------------------
sys.platform                     linux
Python                           3.11.11 (main, Dec  4 2024, 08:55:07) [GCC 11.4.0]
numpy                            1.26.4
detectron2                       0.6 @/usr/local/lib/python3.11/dist-packages/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.2
detectron2 arch flags            7.5
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.5.1+cu121 @/usr/local/lib/python3.11/dist-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            Tesla T4 (arch=7.5)
Driver version                   535.104.05
CUDA_HOME                        /usr/local/cuda
Pillow                           11.1.0
torchvision                      0.20.1+cu121 @/usr/local/lib/python3.11/dist-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -----------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2024.2-Product Build 20240605 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.5.3 (Git Hash 66f0cb9eb66affd2da3bf5f8d897376f04aae6af)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DLIBKINETO_NOXPUPTI=ON -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, TORCH_VERSION=2.5.1, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[01/28 15:48:32] detectron2 INFO: Command line arguments: Namespace(config_file='./configs/loveDa/semantic-segmentation/pem_R50_bs32_90k.yaml', resume=False, eval_only=False, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:49152', opts=['DATALOADER.NUM_WORKERS', '0'])
[01/28 15:48:32] detectron2 INFO: Contents of args.config_file=./configs/loveDa/semantic-segmentation/pem_R50_bs32_90k.yaml:
[38;5;204m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mBase-loveDa-SemanticSegmentation.yaml[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormer[39m[38;5;186m"[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMaskFormerHead[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mSyncBN[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;245m# pixel decoder[39m
[38;5;15m    [39m[38;5;204mPIXEL_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mPEM_Pixel_Decoder[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;186m"[39m[38;5;186mres2[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres3[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres4[39m[38;5;186m"[39m[38;5;15m,[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mres5[39m[38;5;186m"[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_ENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mMultiScaleMaskedTransformerDecoder[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m"[39m[38;5;186mmulti_scale_pixel_decoder[39m[38;5;186m"[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mCLASS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mENFORCE_INPUT_PROJ[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m    [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m[38;5;15m [39m[38;5;245m# 6 decoder layers, add one for the loss on learnable query[39m
[38;5;15m    [39m[38;5;204mTRAIN_NUM_POINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12544[39m
[38;5;15m    [39m[38;5;204mOVERSAMPLE_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3.0[39m
[38;5;15m    [39m[38;5;204mIMPORTANCE_SAMPLE_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.75[39m
[38;5;15m    [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mSEMANTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrue[39m
[38;5;15m      [39m[38;5;204mINSTANCE_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m      [39m[38;5;204mPANOPTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFalse[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.8[39m
[38;5;15m      [39m[38;5;204mOBJECT_MASK_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.8[39m

[01/28 15:48:32] detectron2 INFO: Running with full config:
[38;5;204mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mREPEAT_SQRT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mloveda_val[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mloveda_train[39m
[38;5;204mFLOAT32_PRECISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;204mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCOLOR_AUG_SSD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSINGLE_CATEGORY_MAX_AREA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mabsolute[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mmask_former_semantic[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRGB[39m
[38;5;15m  [39m[38;5;204mIMAGE_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m  [39m[38;5;204mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;204mMAX_SCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m  [39m[38;5;204mMIN_SCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m614[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m716[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m819[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m921[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1126[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1228[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1331[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1433[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1536[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1638[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1740[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1843[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1945[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;204mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;204mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbuild_resnet_backbone[39m
[38;5;15m  [39m[38;5;204mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLASS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mENFORCE_INPUT_PROJ[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mIMPORTANCE_SAMPLE_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.75[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m    [39m[38;5;204mOVERSAMPLE_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3.0[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mINSTANCE_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m      [39m[38;5;204mOBJECT_MASK_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.8[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.8[39m
[38;5;15m      [39m[38;5;204mPANOPTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m      [39m[38;5;204mSEMANTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mSEM_SEG_POSTPROCESSING_BEFORE_INFERENCE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mTRAIN_NUM_POINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12544[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMultiScaleMaskedTransformerDecoder[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mmulti_scale_pixel_decoder[39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormer[39m
[38;5;15m  [39m[38;5;204mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;204mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m123.675[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.28[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m103.53[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m58.395[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.12[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m57.375[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSyncBN[39m
[38;5;15m    [39m[38;5;204mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_MULTI_GRID[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;204mSTEM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbasic[39m
[38;5;15m    [39m[38;5;204mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;204mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;204mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRes5ROIHeads[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;204mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m18[39m
[38;5;15m    [39m[38;5;204mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mLOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhard_pixel_mining[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskFormerHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSyncBN[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m    [39m[38;5;204mPIXEL_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mPEM_Pixel_Decoder[39m
[38;5;15m    [39m[38;5;204mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m    [39m[38;5;204mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_ENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSTDC[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBLOCK_NUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mBLOCK_TIPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcat[39m
[38;5;15m    [39m[38;5;204mLAYERS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mSyncBN[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mUSE_CONV_LAST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mdetectron2://ImageNetPretrained/torchvision/R-50.pkl[39m
[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./output[39m
[38;5;204mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0007[39m
[38;5;15m  [39m[38;5;204mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfull_model[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m16[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupCosineLR[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m  [39m[38;5;204mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mADAMW[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_CONSTANT_ENDING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30000[39m
[38;5;15m  [39m[38;5;204mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;204mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m768[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1280[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1536[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1792[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;204mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[01/28 15:48:32] detectron2 INFO: Full config saved to ./output/config.yaml
[01/28 15:48:32] d2.utils.env INFO: Using a generated random seed 32769050
[01/28 15:48:34] d2.engine.defaults INFO: Model:
MaskFormer(
  (backbone): ResNet(
    (stem): BasicStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
        (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (sem_seg_head): MaskFormerHead(
    (pixel_decoder): PEM_Pixel_Decoder(
      (in_projections): ModuleList(
        (0): ConvBNReLU(
          (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU()
        )
        (1): ConvBNReLU(
          (conv): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU()
        )
        (2): ConvBNReLU(
          (conv): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU()
        )
        (3): ConvBNReLU(
          (conv): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU()
        )
      )
      (conv_avg): ConvBNReLU(
        (conv): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
      (csm): ModuleList(
        (0-3): 4 x CSM(
          (mlp): Sequential(
            (0): MLP(
              (mlp): Sequential(
                (0): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU()
                (3): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
              )
            )
            (1): Sigmoid()
          )
        )
      )
      (dcn): ModuleList(
        (0-2): 3 x DeformLayer(
          (dcn_offset): Conv2d(128, 27, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (dcn): ModulatedDeformConv(in_channels=128, out_channels=128, kernel_size=(3, 3), stride=1, padding=1, dilation=1, groups=1, deformable_groups=1, bias=False)
          (dcn_bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (up_sample): ConvTranspose2d(128, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
          (up_bn): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU()
        )
      )
      (out): ConvBNReLU(
        (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-5): 6 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-5): 6 x PEM_CA(
          (feature_proj): LocalRepresentation(
            (to_query_3x3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=256)
            (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (out): Linear(in_features=256, out_features=256, bias=True)
          )
          (query_proj): Sequential(
            (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            (1): Linear(in_features=256, out_features=256, bias=True)
          )
          (proj): Linear(in_features=256, out_features=256, bias=True)
          (final): Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-5): 6 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(100, 256)
      (query_embed): Embedding(100, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
      )
      (class_embed): Linear(in_features=256, out_features=8, bias=True)
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0}
      num_classes: 7
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
)
[01/28 15:48:34] d2.data.build INFO: Using training sampler TrainingSampler
[01/28 15:48:34] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[01/28 15:48:34] d2.data.common INFO: Serializing 1156 elements to byte tensors and concatenating them all ...
[01/28 15:48:34] d2.data.common INFO: Serialized dataset takes 0.17 MiB
[01/28 15:48:34] d2.data.build INFO: Making batched data loader with batch_size=16
[01/28 15:48:34] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/torchvision/R-50.pkl ...
[01/28 15:48:34] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /root/.torch/iopath_cache/detectron2/ImageNetPretrained/torchvision/R-50.pkl ...
[01/28 15:48:34] fvcore.common.checkpoint INFO: Reading a file from 'torchvision'
[01/28 15:48:34] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone - Total num: 53
[01/28 15:48:34] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mcriterion.empty_weight[0m
[34msem_seg_head.pixel_decoder.conv_avg.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.conv_avg.conv.weight[0m
[34msem_seg_head.pixel_decoder.csm.0.mlp.0.mlp.0.weight[0m
[34msem_seg_head.pixel_decoder.csm.0.mlp.0.mlp.1.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.csm.0.mlp.0.mlp.3.weight[0m
[34msem_seg_head.pixel_decoder.csm.1.mlp.0.mlp.0.weight[0m
[34msem_seg_head.pixel_decoder.csm.1.mlp.0.mlp.1.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.csm.1.mlp.0.mlp.3.weight[0m
[34msem_seg_head.pixel_decoder.csm.2.mlp.0.mlp.0.weight[0m
[34msem_seg_head.pixel_decoder.csm.2.mlp.0.mlp.1.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.csm.2.mlp.0.mlp.3.weight[0m
[34msem_seg_head.pixel_decoder.csm.3.mlp.0.mlp.0.weight[0m
[34msem_seg_head.pixel_decoder.csm.3.mlp.0.mlp.1.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.csm.3.mlp.0.mlp.3.weight[0m
[34msem_seg_head.pixel_decoder.dcn.0.dcn.weight[0m
[34msem_seg_head.pixel_decoder.dcn.0.dcn_bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.0.dcn_offset.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.0.up_bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.0.up_sample.weight[0m
[34msem_seg_head.pixel_decoder.dcn.1.dcn.weight[0m
[34msem_seg_head.pixel_decoder.dcn.1.dcn_bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.1.dcn_offset.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.1.up_bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.1.up_sample.weight[0m
[34msem_seg_head.pixel_decoder.dcn.2.dcn.weight[0m
[34msem_seg_head.pixel_decoder.dcn.2.dcn_bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.2.dcn_offset.{bias, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.2.up_bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.dcn.2.up_sample.weight[0m
[34msem_seg_head.pixel_decoder.in_projections.0.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.in_projections.0.conv.weight[0m
[34msem_seg_head.pixel_decoder.in_projections.1.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.in_projections.1.conv.weight[0m
[34msem_seg_head.pixel_decoder.in_projections.2.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.in_projections.2.conv.weight[0m
[34msem_seg_head.pixel_decoder.in_projections.3.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.in_projections.3.conv.weight[0m
[34msem_seg_head.pixel_decoder.out.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.pixel_decoder.out.conv.weight[0m
[34msem_seg_head.predictor.class_embed.{bias, weight}[0m
[34msem_seg_head.predictor.decoder_norm.{bias, weight}[0m
[34msem_seg_head.predictor.input_proj.0.{bias, weight}[0m
[34msem_seg_head.predictor.input_proj.1.{bias, weight}[0m
[34msem_seg_head.predictor.input_proj.2.{bias, weight}[0m
[34msem_seg_head.predictor.level_embed.weight[0m
[34msem_seg_head.predictor.mask_embed.layers.0.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.1.{bias, weight}[0m
[34msem_seg_head.predictor.mask_embed.layers.2.{bias, weight}[0m
[34msem_seg_head.predictor.query_embed.weight[0m
[34msem_seg_head.predictor.query_feat.weight[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.alpha[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.feature_proj.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.feature_proj.out.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.feature_proj.to_query_3x3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.final.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.query_proj.0.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.0.query_proj.1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.alpha[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.feature_proj.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.feature_proj.out.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.feature_proj.to_query_3x3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.final.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.query_proj.0.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.1.query_proj.1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.alpha[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.feature_proj.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.feature_proj.out.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.feature_proj.to_query_3x3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.final.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.query_proj.0.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.2.query_proj.1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.3.alpha[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.3.feature_proj.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.3.feature_proj.out.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.3.feature_proj.to_query_3x3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.3.final.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.3.proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.3.query_proj.0.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.3.query_proj.1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.4.alpha[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.4.feature_proj.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.4.feature_proj.out.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.4.feature_proj.to_query_3x3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.4.final.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.4.proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.4.query_proj.0.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.4.query_proj.1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.5.alpha[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.5.feature_proj.bn.{bias, running_mean, running_var, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.5.feature_proj.out.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.5.feature_proj.to_query_3x3.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.5.final.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.5.proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.5.query_proj.0.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_cross_attention_layers.5.query_proj.1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.0.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.0.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.0.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.1.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.1.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.1.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.2.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.2.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.2.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.3.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.3.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.3.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.4.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.4.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.4.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.5.linear1.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.5.linear2.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_ffn_layers.5.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.0.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.0.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.0.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.1.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.1.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.1.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.2.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.2.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.2.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.3.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.3.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.3.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.4.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.4.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.4.self_attn.{in_proj_bias, in_proj_weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.5.norm.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.5.self_attn.out_proj.{bias, weight}[0m
[34msem_seg_head.predictor.transformer_self_attention_layers.5.self_attn.{in_proj_bias, in_proj_weight}[0m
[01/28 15:48:34] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mstem.fc.{bias, weight}[0m
[01/28 15:48:34] d2.engine.train_loop INFO: Starting training from iteration 0
[01/28 15:49:43] d2.utils.events INFO:  eta: 3:17:42  iter: 19  total_loss: 57.07  loss_ce: 2.229  loss_mask: 2.445  loss_dice: 3.586  loss_ce_0: 3.842  loss_mask_0: 2.376  loss_dice_0: 3.542  loss_ce_1: 1.926  loss_mask_1: 2.417  loss_dice_1: 3.53  loss_ce_2: 2.028  loss_mask_2: 2.411  loss_dice_2: 3.56  loss_ce_3: 2.043  loss_mask_3: 2.472  loss_dice_3: 3.561  loss_ce_4: 2.134  loss_mask_4: 2.466  loss_dice_4: 3.549  loss_ce_5: 2.171  loss_mask_5: 2.462  loss_dice_5: 3.559    time: 3.2235  last_time: 3.4868  data_time: 1.7973  last_data_time: 2.0204   lr: 0.00069996  max_mem: 12885M
[01/28 15:50:53] d2.utils.events INFO:  eta: 3:23:00  iter: 39  total_loss: 48.04  loss_ce: 1.101  loss_mask: 2.446  loss_dice: 3.055  loss_ce_0: 3.467  loss_mask_0: 2.326  loss_dice_0: 3.067  loss_ce_1: 1.026  loss_mask_1: 2.477  loss_dice_1: 3.04  loss_ce_2: 0.9731  loss_mask_2: 2.466  loss_dice_2: 3.04  loss_ce_3: 0.9904  loss_mask_3: 2.49  loss_dice_3: 3.041  loss_ce_4: 0.9727  loss_mask_4: 2.478  loss_dice_4: 3.035  loss_ce_5: 1.022  loss_mask_5: 2.46  loss_dice_5: 3.037    time: 3.2240  last_time: 3.0358  data_time: 1.8051  last_data_time: 1.5741   lr: 0.00069984  max_mem: 12886M
[01/28 15:52:00] d2.utils.events INFO:  eta: 3:22:19  iter: 59  total_loss: 44.62  loss_ce: 0.8581  loss_mask: 2.446  loss_dice: 2.844  loss_ce_0: 3.087  loss_mask_0: 2.327  loss_dice_0: 2.847  loss_ce_1: 0.7667  loss_mask_1: 2.438  loss_dice_1: 2.853  loss_ce_2: 0.7532  loss_mask_2: 2.448  loss_dice_2: 2.856  loss_ce_3: 0.7651  loss_mask_3: 2.461  loss_dice_3: 2.857  loss_ce_4: 0.758  loss_mask_4: 2.471  loss_dice_4: 2.857  loss_ce_5: 0.7948  loss_mask_5: 2.462  loss_dice_5: 2.853    time: 3.2597  last_time: 3.0678  data_time: 1.8755  last_data_time: 1.6241   lr: 0.00069962  max_mem: 12886M
[01/28 15:53:05] d2.utils.events INFO:  eta: 3:22:03  iter: 79  total_loss: 42.1  loss_ce: 0.7048  loss_mask: 2.372  loss_dice: 2.74  loss_ce_0: 2.725  loss_mask_0: 2.242  loss_dice_0: 2.718  loss_ce_1: 0.6822  loss_mask_1: 2.378  loss_dice_1: 2.711  loss_ce_2: 0.681  loss_mask_2: 2.369  loss_dice_2: 2.715  loss_ce_3: 0.6498  loss_mask_3: 2.392  loss_dice_3: 2.732  loss_ce_4: 0.6655  loss_mask_4: 2.394  loss_dice_4: 2.74  loss_ce_5: 0.6894  loss_mask_5: 2.382  loss_dice_5: 2.75    time: 3.2620  last_time: 3.9122  data_time: 1.8262  last_data_time: 2.4362   lr: 0.00069933  max_mem: 12886M
[01/28 15:54:09] d2.utils.events INFO:  eta: 3:21:47  iter: 99  total_loss: 41.85  loss_ce: 0.7024  loss_mask: 2.287  loss_dice: 2.706  loss_ce_0: 2.357  loss_mask_0: 2.26  loss_dice_0: 2.675  loss_ce_1: 0.7011  loss_mask_1: 2.295  loss_dice_1: 2.715  loss_ce_2: 0.7199  loss_mask_2: 2.319  loss_dice_2: 2.712  loss_ce_3: 0.7262  loss_mask_3: 2.314  loss_dice_3: 2.72  loss_ce_4: 0.7266  loss_mask_4: 2.299  loss_dice_4: 2.709  loss_ce_5: 0.6928  loss_mask_5: 2.285  loss_dice_5: 2.697    time: 3.2551  last_time: 3.2001  data_time: 1.7809  last_data_time: 1.7498   lr: 0.00069894  max_mem: 12886M
[01/28 15:55:15] d2.utils.events INFO:  eta: 3:20:45  iter: 119  total_loss: 40.11  loss_ce: 0.6935  loss_mask: 2.253  loss_dice: 2.645  loss_ce_0: 2.051  loss_mask_0: 2.22  loss_dice_0: 2.642  loss_ce_1: 0.6725  loss_mask_1: 2.28  loss_dice_1: 2.647  loss_ce_2: 0.664  loss_mask_2: 2.263  loss_dice_2: 2.629  loss_ce_3: 0.6907  loss_mask_3: 2.256  loss_dice_3: 2.634  loss_ce_4: 0.6792  loss_mask_4: 2.257  loss_dice_4: 2.636  loss_ce_5: 0.6746  loss_mask_5: 2.262  loss_dice_5: 2.645    time: 3.2556  last_time: 3.8190  data_time: 1.8103  last_data_time: 2.3759   lr: 0.00069847  max_mem: 12886M
[01/28 15:56:19] d2.utils.events INFO:  eta: 3:19:42  iter: 139  total_loss: 38.91  loss_ce: 0.585  loss_mask: 2.246  loss_dice: 2.567  loss_ce_0: 1.763  loss_mask_0: 2.157  loss_dice_0: 2.532  loss_ce_1: 0.5498  loss_mask_1: 2.21  loss_dice_1: 2.551  loss_ce_2: 0.5046  loss_mask_2: 2.243  loss_dice_2: 2.542  loss_ce_3: 0.538  loss_mask_3: 2.242  loss_dice_3: 2.56  loss_ce_4: 0.5657  loss_mask_4: 2.242  loss_dice_4: 2.553  loss_ce_5: 0.5838  loss_mask_5: 2.233  loss_dice_5: 2.569    time: 3.2490  last_time: 3.0366  data_time: 1.7711  last_data_time: 1.6123   lr: 0.00069792  max_mem: 12886M
[01/28 15:57:24] d2.utils.events INFO:  eta: 3:18:53  iter: 159  total_loss: 38.02  loss_ce: 0.4924  loss_mask: 2.239  loss_dice: 2.569  loss_ce_0: 1.519  loss_mask_0: 2.207  loss_dice_0: 2.526  loss_ce_1: 0.4622  loss_mask_1: 2.249  loss_dice_1: 2.577  loss_ce_2: 0.4731  loss_mask_2: 2.255  loss_dice_2: 2.523  loss_ce_3: 0.5023  loss_mask_3: 2.261  loss_dice_3: 2.539  loss_ce_4: 0.4948  loss_mask_4: 2.254  loss_dice_4: 2.565  loss_ce_5: 0.4775  loss_mask_5: 2.252  loss_dice_5: 2.569    time: 3.2520  last_time: 2.9333  data_time: 1.8229  last_data_time: 1.5179   lr: 0.00069727  max_mem: 12886M
[01/28 15:58:28] d2.utils.events INFO:  eta: 3:17:51  iter: 179  total_loss: 37.57  loss_ce: 0.478  loss_mask: 2.169  loss_dice: 2.596  loss_ce_0: 1.35  loss_mask_0: 2.144  loss_dice_0: 2.534  loss_ce_1: 0.4752  loss_mask_1: 2.158  loss_dice_1: 2.588  loss_ce_2: 0.477  loss_mask_2: 2.158  loss_dice_2: 2.572  loss_ce_3: 0.498  loss_mask_3: 2.17  loss_dice_3: 2.579  loss_ce_4: 0.4769  loss_mask_4: 2.176  loss_dice_4: 2.59  loss_ce_5: 0.4662  loss_mask_5: 2.174  loss_dice_5: 2.594    time: 3.2462  last_time: 2.9251  data_time: 1.7545  last_data_time: 1.4957   lr: 0.00069655  max_mem: 12886M
[01/28 15:59:35] d2.utils.events INFO:  eta: 3:16:49  iter: 199  total_loss: 37  loss_ce: 0.5103  loss_mask: 2.234  loss_dice: 2.44  loss_ce_0: 1.193  loss_mask_0: 2.188  loss_dice_0: 2.468  loss_ce_1: 0.5316  loss_mask_1: 2.238  loss_dice_1: 2.46  loss_ce_2: 0.5194  loss_mask_2: 2.219  loss_dice_2: 2.438  loss_ce_3: 0.5122  loss_mask_3: 2.226  loss_dice_3: 2.445  loss_ce_4: 0.5056  loss_mask_4: 2.235  loss_dice_4: 2.436  loss_ce_5: 0.5024  loss_mask_5: 2.236  loss_dice_5: 2.426    time: 3.2537  last_time: 3.1293  data_time: 1.8684  last_data_time: 1.6705   lr: 0.00069573  max_mem: 12886M
[01/28 16:00:38] d2.utils.events INFO:  eta: 3:15:28  iter: 219  total_loss: 37.42  loss_ce: 0.5209  loss_mask: 2.243  loss_dice: 2.519  loss_ce_0: 1.048  loss_mask_0: 2.208  loss_dice_0: 2.478  loss_ce_1: 0.556  loss_mask_1: 2.23  loss_dice_1: 2.517  loss_ce_2: 0.5243  loss_mask_2: 2.259  loss_dice_2: 2.522  loss_ce_3: 0.4725  loss_mask_3: 2.24  loss_dice_3: 2.518  loss_ce_4: 0.4769  loss_mask_4: 2.248  loss_dice_4: 2.511  loss_ce_5: 0.492  loss_mask_5: 2.245  loss_dice_5: 2.509    time: 3.2456  last_time: 3.1527  data_time: 1.7253  last_data_time: 1.7456   lr: 0.00069484  max_mem: 12886M
[01/28 16:01:43] d2.utils.events INFO:  eta: 3:13:56  iter: 239  total_loss: 36.86  loss_ce: 0.5627  loss_mask: 2.219  loss_dice: 2.415  loss_ce_0: 0.9159  loss_mask_0: 2.171  loss_dice_0: 2.451  loss_ce_1: 0.5519  loss_mask_1: 2.197  loss_dice_1: 2.398  loss_ce_2: 0.5695  loss_mask_2: 2.201  loss_dice_2: 2.402  loss_ce_3: 0.5554  loss_mask_3: 2.23  loss_dice_3: 2.405  loss_ce_4: 0.5686  loss_mask_4: 2.216  loss_dice_4: 2.398  loss_ce_5: 0.563  loss_mask_5: 2.219  loss_dice_5: 2.401    time: 3.2457  last_time: 3.4889  data_time: 1.8000  last_data_time: 2.0284   lr: 0.00069385  max_mem: 12886M
[01/28 16:02:47] d2.utils.events INFO:  eta: 3:12:19  iter: 259  total_loss: 37.31  loss_ce: 0.6097  loss_mask: 2.179  loss_dice: 2.497  loss_ce_0: 0.8583  loss_mask_0: 2.13  loss_dice_0: 2.516  loss_ce_1: 0.5708  loss_mask_1: 2.167  loss_dice_1: 2.495  loss_ce_2: 0.5549  loss_mask_2: 2.2  loss_dice_2: 2.499  loss_ce_3: 0.5737  loss_mask_3: 2.174  loss_dice_3: 2.494  loss_ce_4: 0.5767  loss_mask_4: 2.172  loss_dice_4: 2.486  loss_ce_5: 0.5631  loss_mask_5: 2.179  loss_dice_5: 2.496    time: 3.2398  last_time: 3.0414  data_time: 1.7252  last_data_time: 1.6127   lr: 0.00069278  max_mem: 12886M
[01/28 16:03:51] d2.utils.events INFO:  eta: 3:11:03  iter: 279  total_loss: 35.84  loss_ce: 0.4832  loss_mask: 2.202  loss_dice: 2.439  loss_ce_0: 0.777  loss_mask_0: 2.15  loss_dice_0: 2.438  loss_ce_1: 0.4944  loss_mask_1: 2.19  loss_dice_1: 2.442  loss_ce_2: 0.5091  loss_mask_2: 2.191  loss_dice_2: 2.453  loss_ce_3: 0.5033  loss_mask_3: 2.197  loss_dice_3: 2.447  loss_ce_4: 0.4983  loss_mask_4: 2.196  loss_dice_4: 2.446  loss_ce_5: 0.4932  loss_mask_5: 2.19  loss_dice_5: 2.448    time: 3.2389  last_time: 3.9394  data_time: 1.7772  last_data_time: 2.4907   lr: 0.00069163  max_mem: 12886M
[01/28 16:04:55] d2.utils.events INFO:  eta: 3:10:00  iter: 299  total_loss: 36.31  loss_ce: 0.5244  loss_mask: 2.151  loss_dice: 2.498  loss_ce_0: 0.7144  loss_mask_0: 2.118  loss_dice_0: 2.482  loss_ce_1: 0.5721  loss_mask_1: 2.145  loss_dice_1: 2.44  loss_ce_2: 0.5521  loss_mask_2: 2.123  loss_dice_2: 2.462  loss_ce_3: 0.5399  loss_mask_3: 2.133  loss_dice_3: 2.466  loss_ce_4: 0.5338  loss_mask_4: 2.14  loss_dice_4: 2.465  loss_ce_5: 0.5435  loss_mask_5: 2.14  loss_dice_5: 2.473    time: 3.2371  last_time: 3.0304  data_time: 1.7678  last_data_time: 1.6225   lr: 0.00069039  max_mem: 12886M
[01/28 16:06:00] d2.utils.events INFO:  eta: 3:08:59  iter: 319  total_loss: 35.53  loss_ce: 0.4793  loss_mask: 2.144  loss_dice: 2.462  loss_ce_0: 0.6473  loss_mask_0: 2.123  loss_dice_0: 2.436  loss_ce_1: 0.4847  loss_mask_1: 2.137  loss_dice_1: 2.429  loss_ce_2: 0.4529  loss_mask_2: 2.128  loss_dice_2: 2.447  loss_ce_3: 0.4764  loss_mask_3: 2.131  loss_dice_3: 2.446  loss_ce_4: 0.4649  loss_mask_4: 2.124  loss_dice_4: 2.464  loss_ce_5: 0.4657  loss_mask_5: 2.131  loss_dice_5: 2.462    time: 3.2384  last_time: 4.0381  data_time: 1.8078  last_data_time: 2.5977   lr: 0.00068907  max_mem: 12886M
[01/28 16:07:04] d2.utils.events INFO:  eta: 3:07:50  iter: 339  total_loss: 35.02  loss_ce: 0.4096  loss_mask: 2.111  loss_dice: 2.397  loss_ce_0: 0.6133  loss_mask_0: 2.057  loss_dice_0: 2.41  loss_ce_1: 0.5192  loss_mask_1: 2.063  loss_dice_1: 2.392  loss_ce_2: 0.5007  loss_mask_2: 2.056  loss_dice_2: 2.362  loss_ce_3: 0.4526  loss_mask_3: 2.066  loss_dice_3: 2.378  loss_ce_4: 0.4418  loss_mask_4: 2.106  loss_dice_4: 2.393  loss_ce_5: 0.4378  loss_mask_5: 2.115  loss_dice_5: 2.403    time: 3.2356  last_time: 3.0230  data_time: 1.7469  last_data_time: 1.6087   lr: 0.00068767  max_mem: 12886M
[01/28 16:08:09] d2.utils.events INFO:  eta: 3:06:55  iter: 359  total_loss: 35.78  loss_ce: 0.534  loss_mask: 2.175  loss_dice: 2.404  loss_ce_0: 0.6496  loss_mask_0: 2.145  loss_dice_0: 2.409  loss_ce_1: 0.5519  loss_mask_1: 2.165  loss_dice_1: 2.376  loss_ce_2: 0.5441  loss_mask_2: 2.171  loss_dice_2: 2.389  loss_ce_3: 0.5181  loss_mask_3: 2.176  loss_dice_3: 2.395  loss_ce_4: 0.5552  loss_mask_4: 2.185  loss_dice_4: 2.399  loss_ce_5: 0.5424  loss_mask_5: 2.177  loss_dice_5: 2.397    time: 3.2365  last_time: 4.0429  data_time: 1.8064  last_data_time: 2.5500   lr: 0.00068618  max_mem: 12886M
[01/28 16:09:13] d2.utils.events INFO:  eta: 3:05:41  iter: 379  total_loss: 34.82  loss_ce: 0.4345  loss_mask: 2.15  loss_dice: 2.358  loss_ce_0: 0.5215  loss_mask_0: 2.142  loss_dice_0: 2.376  loss_ce_1: 0.4396  loss_mask_1: 2.128  loss_dice_1: 2.36  loss_ce_2: 0.4083  loss_mask_2: 2.165  loss_dice_2: 2.354  loss_ce_3: 0.4244  loss_mask_3: 2.165  loss_dice_3: 2.362  loss_ce_4: 0.4036  loss_mask_4: 2.159  loss_dice_4: 2.371  loss_ce_5: 0.4173  loss_mask_5: 2.152  loss_dice_5: 2.364    time: 3.2336  last_time: 2.9302  data_time: 1.7366  last_data_time: 1.5092   lr: 0.00068461  max_mem: 12886M
[01/28 16:10:17] d2.utils.events INFO:  eta: 3:04:46  iter: 399  total_loss: 34.31  loss_ce: 0.4318  loss_mask: 2.144  loss_dice: 2.372  loss_ce_0: 0.5359  loss_mask_0: 2.107  loss_dice_0: 2.422  loss_ce_1: 0.4612  loss_mask_1: 2.11  loss_dice_1: 2.373  loss_ce_2: 0.4364  loss_mask_2: 2.125  loss_dice_2: 2.389  loss_ce_3: 0.4293  loss_mask_3: 2.125  loss_dice_3: 2.386  loss_ce_4: 0.4192  loss_mask_4: 2.124  loss_dice_4: 2.398  loss_ce_5: 0.4318  loss_mask_5: 2.13  loss_dice_5: 2.38    time: 3.2325  last_time: 3.4961  data_time: 1.7641  last_data_time: 1.9948   lr: 0.00068295  max_mem: 12886M
[01/28 16:11:21] d2.utils.events INFO:  eta: 3:03:38  iter: 419  total_loss: 36.6  loss_ce: 0.4975  loss_mask: 2.169  loss_dice: 2.448  loss_ce_0: 0.6241  loss_mask_0: 2.109  loss_dice_0: 2.438  loss_ce_1: 0.5591  loss_mask_1: 2.155  loss_dice_1: 2.422  loss_ce_2: 0.5253  loss_mask_2: 2.162  loss_dice_2: 2.445  loss_ce_3: 0.5147  loss_mask_3: 2.167  loss_dice_3: 2.419  loss_ce_4: 0.4703  loss_mask_4: 2.176  loss_dice_4: 2.453  loss_ce_5: 0.4855  loss_mask_5: 2.168  loss_dice_5: 2.439    time: 3.2313  last_time: 3.0377  data_time: 1.7642  last_data_time: 1.6258   lr: 0.00068122  max_mem: 12886M
[01/28 16:12:27] d2.utils.events INFO:  eta: 3:02:45  iter: 439  total_loss: 35.37  loss_ce: 0.4585  loss_mask: 2.156  loss_dice: 2.38  loss_ce_0: 0.5735  loss_mask_0: 2.112  loss_dice_0: 2.382  loss_ce_1: 0.4378  loss_mask_1: 2.152  loss_dice_1: 2.363  loss_ce_2: 0.4183  loss_mask_2: 2.139  loss_dice_2: 2.38  loss_ce_3: 0.4231  loss_mask_3: 2.158  loss_dice_3: 2.38  loss_ce_4: 0.405  loss_mask_4: 2.151  loss_dice_4: 2.382  loss_ce_5: 0.419  loss_mask_5: 2.142  loss_dice_5: 2.382    time: 3.2338  last_time: 3.7418  data_time: 1.8406  last_data_time: 2.2871   lr: 0.0006794  max_mem: 12886M
[01/28 16:13:31] d2.utils.events INFO:  eta: 3:01:41  iter: 459  total_loss: 34.23  loss_ce: 0.4466  loss_mask: 2.141  loss_dice: 2.347  loss_ce_0: 0.5424  loss_mask_0: 2.1  loss_dice_0: 2.339  loss_ce_1: 0.4728  loss_mask_1: 2.084  loss_dice_1: 2.353  loss_ce_2: 0.4567  loss_mask_2: 2.12  loss_dice_2: 2.323  loss_ce_3: 0.4489  loss_mask_3: 2.138  loss_dice_3: 2.348  loss_ce_4: 0.4486  loss_mask_4: 2.14  loss_dice_4: 2.347  loss_ce_5: 0.437  loss_mask_5: 2.139  loss_dice_5: 2.345    time: 3.2329  last_time: 3.0294  data_time: 1.7710  last_data_time: 1.6096   lr: 0.0006775  max_mem: 12886M
[01/28 16:14:37] d2.utils.events INFO:  eta: 3:00:51  iter: 479  total_loss: 34.59  loss_ce: 0.4919  loss_mask: 2.138  loss_dice: 2.35  loss_ce_0: 0.5946  loss_mask_0: 2.129  loss_dice_0: 2.327  loss_ce_1: 0.497  loss_mask_1: 2.104  loss_dice_1: 2.323  loss_ce_2: 0.462  loss_mask_2: 2.123  loss_dice_2: 2.318  loss_ce_3: 0.442  loss_mask_3: 2.136  loss_dice_3: 2.323  loss_ce_4: 0.4711  loss_mask_4: 2.139  loss_dice_4: 2.341  loss_ce_5: 0.46  loss_mask_5: 2.147  loss_dice_5: 2.341    time: 3.2354  last_time: 3.7263  data_time: 1.8429  last_data_time: 2.2572   lr: 0.00067552  max_mem: 12886M
[01/28 16:15:42] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2048, sample_style='choice')]
[01/28 16:15:42] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[01/28 16:15:42] d2.data.common INFO: Serializing 992 elements to byte tensors and concatenating them all ...
[01/28 16:15:42] d2.data.common INFO: Serialized dataset takes 0.14 MiB
[01/28 16:15:42] d2.evaluation.evaluator INFO: Start inference on 992 batches
[01/28 16:15:45] d2.evaluation.evaluator INFO: Inference done 11/992. Dataloading: 0.0511 s/iter. Inference: 0.0997 s/iter. Eval: 0.0680 s/iter. Total: 0.2187 s/iter. ETA=0:03:34
[01/28 16:15:50] d2.evaluation.evaluator INFO: Inference done 33/992. Dataloading: 0.0585 s/iter. Inference: 0.0994 s/iter. Eval: 0.0695 s/iter. Total: 0.2275 s/iter. ETA=0:03:38
[01/28 16:15:55] d2.evaluation.evaluator INFO: Inference done 58/992. Dataloading: 0.0536 s/iter. Inference: 0.0994 s/iter. Eval: 0.0636 s/iter. Total: 0.2167 s/iter. ETA=0:03:22
[01/28 16:16:00] d2.evaluation.evaluator INFO: Inference done 82/992. Dataloading: 0.0534 s/iter. Inference: 0.0994 s/iter. Eval: 0.0628 s/iter. Total: 0.2157 s/iter. ETA=0:03:16
[01/28 16:16:05] d2.evaluation.evaluator INFO: Inference done 105/992. Dataloading: 0.0544 s/iter. Inference: 0.0994 s/iter. Eval: 0.0634 s/iter. Total: 0.2172 s/iter. ETA=0:03:12
[01/28 16:16:10] d2.evaluation.evaluator INFO: Inference done 130/992. Dataloading: 0.0529 s/iter. Inference: 0.0994 s/iter. Eval: 0.0615 s/iter. Total: 0.2139 s/iter. ETA=0:03:04
[01/28 16:16:15] d2.evaluation.evaluator INFO: Inference done 153/992. Dataloading: 0.0538 s/iter. Inference: 0.0993 s/iter. Eval: 0.0623 s/iter. Total: 0.2156 s/iter. ETA=0:03:00
[01/28 16:16:20] d2.evaluation.evaluator INFO: Inference done 177/992. Dataloading: 0.0540 s/iter. Inference: 0.0994 s/iter. Eval: 0.0622 s/iter. Total: 0.2156 s/iter. ETA=0:02:55
[01/28 16:16:25] d2.evaluation.evaluator INFO: Inference done 202/992. Dataloading: 0.0533 s/iter. Inference: 0.0993 s/iter. Eval: 0.0612 s/iter. Total: 0.2138 s/iter. ETA=0:02:48
[01/28 16:16:30] d2.evaluation.evaluator INFO: Inference done 224/992. Dataloading: 0.0539 s/iter. Inference: 0.0993 s/iter. Eval: 0.0620 s/iter. Total: 0.2153 s/iter. ETA=0:02:45
[01/28 16:16:35] d2.evaluation.evaluator INFO: Inference done 248/992. Dataloading: 0.0537 s/iter. Inference: 0.0993 s/iter. Eval: 0.0616 s/iter. Total: 0.2147 s/iter. ETA=0:02:39
[01/28 16:16:40] d2.evaluation.evaluator INFO: Inference done 273/992. Dataloading: 0.0532 s/iter. Inference: 0.0993 s/iter. Eval: 0.0609 s/iter. Total: 0.2134 s/iter. ETA=0:02:33
[01/28 16:16:45] d2.evaluation.evaluator INFO: Inference done 294/992. Dataloading: 0.0542 s/iter. Inference: 0.0993 s/iter. Eval: 0.0618 s/iter. Total: 0.2154 s/iter. ETA=0:02:30
[01/28 16:16:50] d2.evaluation.evaluator INFO: Inference done 319/992. Dataloading: 0.0537 s/iter. Inference: 0.0993 s/iter. Eval: 0.0611 s/iter. Total: 0.2142 s/iter. ETA=0:02:24
[01/28 16:16:56] d2.evaluation.evaluator INFO: Inference done 344/992. Dataloading: 0.0534 s/iter. Inference: 0.0993 s/iter. Eval: 0.0606 s/iter. Total: 0.2133 s/iter. ETA=0:02:18
[01/28 16:17:01] d2.evaluation.evaluator INFO: Inference done 365/992. Dataloading: 0.0541 s/iter. Inference: 0.0993 s/iter. Eval: 0.0615 s/iter. Total: 0.2150 s/iter. ETA=0:02:14
[01/28 16:17:06] d2.evaluation.evaluator INFO: Inference done 390/992. Dataloading: 0.0536 s/iter. Inference: 0.0993 s/iter. Eval: 0.0612 s/iter. Total: 0.2141 s/iter. ETA=0:02:08
[01/28 16:17:11] d2.evaluation.evaluator INFO: Inference done 414/992. Dataloading: 0.0535 s/iter. Inference: 0.0993 s/iter. Eval: 0.0610 s/iter. Total: 0.2139 s/iter. ETA=0:02:03
[01/28 16:17:16] d2.evaluation.evaluator INFO: Inference done 436/992. Dataloading: 0.0539 s/iter. Inference: 0.0993 s/iter. Eval: 0.0614 s/iter. Total: 0.2146 s/iter. ETA=0:01:59
[01/28 16:17:21] d2.evaluation.evaluator INFO: Inference done 462/992. Dataloading: 0.0535 s/iter. Inference: 0.0993 s/iter. Eval: 0.0609 s/iter. Total: 0.2137 s/iter. ETA=0:01:53
[01/28 16:17:26] d2.evaluation.evaluator INFO: Inference done 486/992. Dataloading: 0.0535 s/iter. Inference: 0.0993 s/iter. Eval: 0.0610 s/iter. Total: 0.2137 s/iter. ETA=0:01:48
[01/28 16:17:31] d2.evaluation.evaluator INFO: Inference done 509/992. Dataloading: 0.0536 s/iter. Inference: 0.0993 s/iter. Eval: 0.0611 s/iter. Total: 0.2140 s/iter. ETA=0:01:43
[01/28 16:17:36] d2.evaluation.evaluator INFO: Inference done 534/992. Dataloading: 0.0532 s/iter. Inference: 0.0992 s/iter. Eval: 0.0608 s/iter. Total: 0.2134 s/iter. ETA=0:01:37
[01/28 16:17:41] d2.evaluation.evaluator INFO: Inference done 557/992. Dataloading: 0.0534 s/iter. Inference: 0.0992 s/iter. Eval: 0.0612 s/iter. Total: 0.2139 s/iter. ETA=0:01:33
[01/28 16:17:46] d2.evaluation.evaluator INFO: Inference done 581/992. Dataloading: 0.0534 s/iter. Inference: 0.0992 s/iter. Eval: 0.0613 s/iter. Total: 0.2140 s/iter. ETA=0:01:27
[01/28 16:17:51] d2.evaluation.evaluator INFO: Inference done 606/992. Dataloading: 0.0531 s/iter. Inference: 0.0992 s/iter. Eval: 0.0611 s/iter. Total: 0.2135 s/iter. ETA=0:01:22
[01/28 16:17:57] d2.evaluation.evaluator INFO: Inference done 628/992. Dataloading: 0.0534 s/iter. Inference: 0.0992 s/iter. Eval: 0.0614 s/iter. Total: 0.2140 s/iter. ETA=0:01:17
[01/28 16:18:02] d2.evaluation.evaluator INFO: Inference done 653/992. Dataloading: 0.0532 s/iter. Inference: 0.0992 s/iter. Eval: 0.0613 s/iter. Total: 0.2138 s/iter. ETA=0:01:12
[01/28 16:18:07] d2.evaluation.evaluator INFO: Inference done 678/992. Dataloading: 0.0531 s/iter. Inference: 0.0992 s/iter. Eval: 0.0610 s/iter. Total: 0.2133 s/iter. ETA=0:01:06
[01/28 16:18:12] d2.evaluation.evaluator INFO: Inference done 699/992. Dataloading: 0.0535 s/iter. Inference: 0.0992 s/iter. Eval: 0.0614 s/iter. Total: 0.2142 s/iter. ETA=0:01:02
[01/28 16:18:17] d2.evaluation.evaluator INFO: Inference done 724/992. Dataloading: 0.0533 s/iter. Inference: 0.0992 s/iter. Eval: 0.0612 s/iter. Total: 0.2137 s/iter. ETA=0:00:57
[01/28 16:18:22] d2.evaluation.evaluator INFO: Inference done 749/992. Dataloading: 0.0531 s/iter. Inference: 0.0992 s/iter. Eval: 0.0611 s/iter. Total: 0.2135 s/iter. ETA=0:00:51
[01/28 16:18:27] d2.evaluation.evaluator INFO: Inference done 770/992. Dataloading: 0.0535 s/iter. Inference: 0.0992 s/iter. Eval: 0.0614 s/iter. Total: 0.2142 s/iter. ETA=0:00:47
[01/28 16:18:32] d2.evaluation.evaluator INFO: Inference done 795/992. Dataloading: 0.0533 s/iter. Inference: 0.0992 s/iter. Eval: 0.0613 s/iter. Total: 0.2139 s/iter. ETA=0:00:42
[01/28 16:18:37] d2.evaluation.evaluator INFO: Inference done 819/992. Dataloading: 0.0533 s/iter. Inference: 0.0992 s/iter. Eval: 0.0612 s/iter. Total: 0.2138 s/iter. ETA=0:00:36
[01/28 16:18:42] d2.evaluation.evaluator INFO: Inference done 841/992. Dataloading: 0.0535 s/iter. Inference: 0.0992 s/iter. Eval: 0.0615 s/iter. Total: 0.2144 s/iter. ETA=0:00:32
[01/28 16:18:48] d2.evaluation.evaluator INFO: Inference done 866/992. Dataloading: 0.0534 s/iter. Inference: 0.0992 s/iter. Eval: 0.0614 s/iter. Total: 0.2141 s/iter. ETA=0:00:26
[01/28 16:18:53] d2.evaluation.evaluator INFO: Inference done 889/992. Dataloading: 0.0535 s/iter. Inference: 0.0992 s/iter. Eval: 0.0615 s/iter. Total: 0.2142 s/iter. ETA=0:00:22
[01/28 16:18:58] d2.evaluation.evaluator INFO: Inference done 912/992. Dataloading: 0.0535 s/iter. Inference: 0.0992 s/iter. Eval: 0.0616 s/iter. Total: 0.2144 s/iter. ETA=0:00:17
[01/28 16:19:03] d2.evaluation.evaluator INFO: Inference done 937/992. Dataloading: 0.0534 s/iter. Inference: 0.0992 s/iter. Eval: 0.0615 s/iter. Total: 0.2141 s/iter. ETA=0:00:11
[01/28 16:19:08] d2.evaluation.evaluator INFO: Inference done 960/992. Dataloading: 0.0535 s/iter. Inference: 0.0992 s/iter. Eval: 0.0616 s/iter. Total: 0.2144 s/iter. ETA=0:00:06
[01/28 16:19:13] d2.evaluation.evaluator INFO: Inference done 984/992. Dataloading: 0.0535 s/iter. Inference: 0.0992 s/iter. Eval: 0.0615 s/iter. Total: 0.2143 s/iter. ETA=0:00:01
[01/28 16:19:15] d2.evaluation.evaluator INFO: Total inference time: 0:03:31.371798 (0.214156 s / iter per device, on 1 devices)
[01/28 16:19:15] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:37 (0.099207 s / iter per device, on 1 devices)
[01/28 16:19:15] d2.evaluation.sem_seg_evaluation INFO: OrderedDict([('sem_seg', {'mIoU': 46.85140193846942, 'fwIoU': 54.965224552022576, 'IoU-background': 98.37711733499312, 'BoundaryIoU-background': 66.01910627136101, 'min(IoU, B-Iou)-background': 66.01910627136101, 'IoU-building': 60.975867747799626, 'BoundaryIoU-building': 29.12779337594574, 'min(IoU, B-Iou)-building': 29.12779337594574, 'IoU-road': 28.193309656258396, 'BoundaryIoU-road': 15.937497893717884, 'min(IoU, B-Iou)-road': 15.937497893717884, 'IoU-water': 34.625366711272484, 'BoundaryIoU-water': 23.385180618613628, 'min(IoU, B-Iou)-water': 23.385180618613628, 'IoU-barren': 65.75352973956919, 'BoundaryIoU-barren': 17.486642483316565, 'min(IoU, B-Iou)-barren': 17.486642483316565, 'IoU-forest': 24.392756666874586, 'BoundaryIoU-forest': 8.575577097015854, 'min(IoU, B-Iou)-forest': 8.575577097015854, 'IoU-agriculture': 15.641865712518598, 'BoundaryIoU-agriculture': 1.4003353896684347, 'min(IoU, B-Iou)-agriculture': 1.4003353896684347, 'mACC': 62.28633169235637, 'pACC': 68.83832294588052, 'ACC-background': 99.89622943565453, 'ACC-building': 74.93114400022878, 'ACC-road': 92.47622791065884, 'ACC-water': 44.45686612760942, 'ACC-barren': 72.72456792107923, 'ACC-forest': 34.24986910982805, 'ACC-agriculture': 17.269417341435755})])
[01/28 16:19:15] d2.engine.defaults INFO: Evaluation results for loveda_val in csv format:
[01/28 16:19:15] d2.evaluation.testing INFO: copypaste: Task: sem_seg
[01/28 16:19:15] d2.evaluation.testing INFO: copypaste: mIoU,fwIoU,mACC,pACC
[01/28 16:19:15] d2.evaluation.testing INFO: copypaste: 46.8514,54.9652,62.2863,68.8383
[01/28 16:19:15] d2.utils.events INFO:  eta: 2:59:49  iter: 499  total_loss: 34.15  loss_ce: 0.4667  loss_mask: 2.091  loss_dice: 2.329  loss_ce_0: 0.5498  loss_mask_0: 2.106  loss_dice_0: 2.335  loss_ce_1: 0.4622  loss_mask_1: 2.125  loss_dice_1: 2.324  loss_ce_2: 0.4681  loss_mask_2: 2.119  loss_dice_2: 2.305  loss_ce_3: 0.4445  loss_mask_3: 2.121  loss_dice_3: 2.317  loss_ce_4: 0.4594  loss_mask_4: 2.113  loss_dice_4: 2.314  loss_ce_5: 0.4646  loss_mask_5: 2.099  loss_dice_5: 2.323    time: 3.2351  last_time: 3.0217  data_time: 1.7802  last_data_time: 1.5941   lr: 0.00067346  max_mem: 12886M
[01/28 16:20:21] d2.utils.events INFO:  eta: 2:58:53  iter: 519  total_loss: 34.16  loss_ce: 0.4533  loss_mask: 2.11  loss_dice: 2.358  loss_ce_0: 0.5044  loss_mask_0: 2.078  loss_dice_0: 2.347  loss_ce_1: 0.4894  loss_mask_1: 2.079  loss_dice_1: 2.35  loss_ce_2: 0.4314  loss_mask_2: 2.083  loss_dice_2: 2.331  loss_ce_3: 0.4492  loss_mask_3: 2.119  loss_dice_3: 2.319  loss_ce_4: 0.41  loss_mask_4: 2.124  loss_dice_4: 2.36  loss_ce_5: 0.4273  loss_mask_5: 2.124  loss_dice_5: 2.313    time: 3.2381  last_time: 3.8779  data_time: 1.8588  last_data_time: 2.3365   lr: 0.00067132  max_mem: 12886M
[01/28 16:21:26] d2.utils.events INFO:  eta: 2:58:02  iter: 539  total_loss: 33.76  loss_ce: 0.4228  loss_mask: 2.07  loss_dice: 2.264  loss_ce_0: 0.5591  loss_mask_0: 2.016  loss_dice_0: 2.271  loss_ce_1: 0.4841  loss_mask_1: 2.067  loss_dice_1: 2.269  loss_ce_2: 0.446  loss_mask_2: 2.062  loss_dice_2: 2.264  loss_ce_3: 0.4206  loss_mask_3: 2.066  loss_dice_3: 2.261  loss_ce_4: 0.443  loss_mask_4: 2.062  loss_dice_4: 2.266  loss_ce_5: 0.4285  loss_mask_5: 2.069  loss_dice_5: 2.269    time: 3.2378  last_time: 3.1662  data_time: 1.7872  last_data_time: 1.7483   lr: 0.0006691  max_mem: 12886M
[01/28 16:22:31] d2.utils.events INFO:  eta: 2:57:01  iter: 559  total_loss: 33.09  loss_ce: 0.3738  loss_mask: 2.098  loss_dice: 2.251  loss_ce_0: 0.4533  loss_mask_0: 2.063  loss_dice_0: 2.249  loss_ce_1: 0.416  loss_mask_1: 2.098  loss_dice_1: 2.257  loss_ce_2: 0.3921  loss_mask_2: 2.085  loss_dice_2: 2.252  loss_ce_3: 0.3676  loss_mask_3: 2.087  loss_dice_3: 2.232  loss_ce_4: 0.3696  loss_mask_4: 2.09  loss_dice_4: 2.245  loss_ce_5: 0.3989  loss_mask_5: 2.092  loss_dice_5: 2.251    time: 3.2380  last_time: 3.6671  data_time: 1.7911  last_data_time: 2.1870   lr: 0.00066681  max_mem: 12886M
[01/28 16:23:36] d2.utils.events INFO:  eta: 2:56:01  iter: 579  total_loss: 33.1  loss_ce: 0.4072  loss_mask: 2.047  loss_dice: 2.267  loss_ce_0: 0.5357  loss_mask_0: 2.026  loss_dice_0: 2.305  loss_ce_1: 0.4873  loss_mask_1: 2.082  loss_dice_1: 2.289  loss_ce_2: 0.4193  loss_mask_2: 2.052  loss_dice_2: 2.268  loss_ce_3: 0.4168  loss_mask_3: 2.051  loss_dice_3: 2.261  loss_ce_4: 0.4052  loss_mask_4: 2.026  loss_dice_4: 2.264  loss_ce_5: 0.4069  loss_mask_5: 2.037  loss_dice_5: 2.267    time: 3.2377  last_time: 3.1088  data_time: 1.7835  last_data_time: 1.6836   lr: 0.00066443  max_mem: 12886M
[01/28 16:24:41] d2.utils.events INFO:  eta: 2:55:13  iter: 599  total_loss: 33.57  loss_ce: 0.4355  loss_mask: 2.135  loss_dice: 2.227  loss_ce_0: 0.5413  loss_mask_0: 2.057  loss_dice_0: 2.227  loss_ce_1: 0.5003  loss_mask_1: 2.131  loss_dice_1: 2.216  loss_ce_2: 0.4682  loss_mask_2: 2.104  loss_dice_2: 2.228  loss_ce_3: 0.4225  loss_mask_3: 2.126  loss_dice_3: 2.218  loss_ce_4: 0.4508  loss_mask_4: 2.127  loss_dice_4: 2.224  loss_ce_5: 0.4518  loss_mask_5: 2.125  loss_dice_5: 2.218    time: 3.2395  last_time: 3.9200  data_time: 1.8356  last_data_time: 2.3836   lr: 0.00066198  max_mem: 12886M
[01/28 16:25:45] d2.utils.events INFO:  eta: 2:53:58  iter: 619  total_loss: 32.99  loss_ce: 0.4221  loss_mask: 2.097  loss_dice: 2.172  loss_ce_0: 0.4626  loss_mask_0: 2.136  loss_dice_0: 2.227  loss_ce_1: 0.4552  loss_mask_1: 2.13  loss_dice_1: 2.177  loss_ce_2: 0.3857  loss_mask_2: 2.132  loss_dice_2: 2.184  loss_ce_3: 0.4044  loss_mask_3: 2.109  loss_dice_3: 2.175  loss_ce_4: 0.43  loss_mask_4: 2.109  loss_dice_4: 2.157  loss_ce_5: 0.4248  loss_mask_5: 2.099  loss_dice_5: 2.164    time: 3.2380  last_time: 3.0420  data_time: 1.7561  last_data_time: 1.5975   lr: 0.00065945  max_mem: 12886M
[01/28 16:26:49] d2.utils.events INFO:  eta: 2:52:54  iter: 639  total_loss: 32.8  loss_ce: 0.413  loss_mask: 2.023  loss_dice: 2.242  loss_ce_0: 0.488  loss_mask_0: 1.997  loss_dice_0: 2.297  loss_ce_1: 0.4559  loss_mask_1: 2.063  loss_dice_1: 2.252  loss_ce_2: 0.4417  loss_mask_2: 2.039  loss_dice_2: 2.252  loss_ce_3: 0.4345  loss_mask_3: 2.025  loss_dice_3: 2.233  loss_ce_4: 0.4268  loss_mask_4: 2.01  loss_dice_4: 2.213  loss_ce_5: 0.4125  loss_mask_5: 2.023  loss_dice_5: 2.249    time: 3.2371  last_time: 3.2299  data_time: 1.7611  last_data_time: 1.7956   lr: 0.00065684  max_mem: 12886M
[01/28 16:27:53] d2.utils.events INFO:  eta: 2:51:37  iter: 659  total_loss: 33.19  loss_ce: 0.3872  loss_mask: 2.039  loss_dice: 2.272  loss_ce_0: 0.4933  loss_mask_0: 2  loss_dice_0: 2.353  loss_ce_1: 0.4343  loss_mask_1: 2.022  loss_dice_1: 2.296  loss_ce_2: 0.4147  loss_mask_2: 2.037  loss_dice_2: 2.316  loss_ce_3: 0.4125  loss_mask_3: 2.037  loss_dice_3: 2.293  loss_ce_4: 0.4038  loss_mask_4: 2.042  loss_dice_4: 2.28  loss_ce_5: 0.4009  loss_mask_5: 2.036  loss_dice_5: 2.268    time: 3.2348  last_time: 2.9235  data_time: 1.7274  last_data_time: 1.4993   lr: 0.00065416  max_mem: 12886M
[01/28 16:28:58] d2.utils.events INFO:  eta: 2:50:40  iter: 679  total_loss: 33.21  loss_ce: 0.443  loss_mask: 2.041  loss_dice: 2.212  loss_ce_0: 0.503  loss_mask_0: 2.058  loss_dice_0: 2.252  loss_ce_1: 0.4809  loss_mask_1: 2.036  loss_dice_1: 2.222  loss_ce_2: 0.4733  loss_mask_2: 2.033  loss_dice_2: 2.195  loss_ce_3: 0.4458  loss_mask_3: 2.052  loss_dice_3: 2.199  loss_ce_4: 0.4323  loss_mask_4: 2.04  loss_dice_4: 2.192  loss_ce_5: 0.4337  loss_mask_5: 2.037  loss_dice_5: 2.197    time: 3.2350  last_time: 3.0456  data_time: 1.7922  last_data_time: 1.6122   lr: 0.0006514  max_mem: 12886M
[01/28 16:30:01] d2.utils.events INFO:  eta: 2:49:33  iter: 699  total_loss: 33.03  loss_ce: 0.4832  loss_mask: 2.005  loss_dice: 2.145  loss_ce_0: 0.5546  loss_mask_0: 1.996  loss_dice_0: 2.201  loss_ce_1: 0.491  loss_mask_1: 2.012  loss_dice_1: 2.163  loss_ce_2: 0.4712  loss_mask_2: 2  loss_dice_2: 2.138  loss_ce_3: 0.4617  loss_mask_3: 2.013  loss_dice_3: 2.153  loss_ce_4: 0.455  loss_mask_4: 2  loss_dice_4: 2.137  loss_ce_5: 0.46  loss_mask_5: 1.994  loss_dice_5: 2.134    time: 3.2333  last_time: 3.0290  data_time: 1.7326  last_data_time: 1.5508   lr: 0.00064857  max_mem: 12886M
[01/28 16:31:07] d2.utils.events INFO:  eta: 2:48:35  iter: 719  total_loss: 32.36  loss_ce: 0.4147  loss_mask: 2.043  loss_dice: 2.103  loss_ce_0: 0.501  loss_mask_0: 2.025  loss_dice_0: 2.176  loss_ce_1: 0.4433  loss_mask_1: 2.044  loss_dice_1: 2.126  loss_ce_2: 0.422  loss_mask_2: 2.02  loss_dice_2: 2.108  loss_ce_3: 0.4302  loss_mask_3: 2.046  loss_dice_3: 2.106  loss_ce_4: 0.4254  loss_mask_4: 2.045  loss_dice_4: 2.09  loss_ce_5: 0.3965  loss_mask_5: 2.048  loss_dice_5: 2.103    time: 3.2347  last_time: 2.9593  data_time: 1.8358  last_data_time: 1.5154   lr: 0.00064566  max_mem: 12886M
[01/28 16:32:12] d2.utils.events INFO:  eta: 2:47:44  iter: 739  total_loss: 32.82  loss_ce: 0.3744  loss_mask: 2.089  loss_dice: 2.16  loss_ce_0: 0.4538  loss_mask_0: 2.099  loss_dice_0: 2.205  loss_ce_1: 0.4186  loss_mask_1: 2.113  loss_dice_1: 2.185  loss_ce_2: 0.3705  loss_mask_2: 2.071  loss_dice_2: 2.163  loss_ce_3: 0.3722  loss_mask_3: 2.092  loss_dice_3: 2.155  loss_ce_4: 0.3669  loss_mask_4: 2.082  loss_dice_4: 2.159  loss_ce_5: 0.3662  loss_mask_5: 2.077  loss_dice_5: 2.162    time: 3.2361  last_time: 3.7589  data_time: 1.8390  last_data_time: 2.3088   lr: 0.00064268  max_mem: 12886M
[01/28 16:33:16] d2.utils.events INFO:  eta: 2:46:31  iter: 759  total_loss: 31.63  loss_ce: 0.4497  loss_mask: 1.923  loss_dice: 2.119  loss_ce_0: 0.513  loss_mask_0: 1.935  loss_dice_0: 2.158  loss_ce_1: 0.4464  loss_mask_1: 1.953  loss_dice_1: 2.121  loss_ce_2: 0.4684  loss_mask_2: 1.941  loss_dice_2: 2.156  loss_ce_3: 0.4513  loss_mask_3: 1.921  loss_dice_3: 2.135  loss_ce_4: 0.4339  loss_mask_4: 1.925  loss_dice_4: 2.116  loss_ce_5: 0.4325  loss_mask_5: 1.922  loss_dice_5: 2.123    time: 3.2344  last_time: 2.9827  data_time: 1.7328  last_data_time: 1.5733   lr: 0.00063963  max_mem: 12886M
[01/28 16:34:20] d2.utils.events INFO:  eta: 2:45:27  iter: 779  total_loss: 33.13  loss_ce: 0.4695  loss_mask: 2.032  loss_dice: 2.155  loss_ce_0: 0.4893  loss_mask_0: 2.053  loss_dice_0: 2.191  loss_ce_1: 0.4554  loss_mask_1: 2.021  loss_dice_1: 2.164  loss_ce_2: 0.4471  loss_mask_2: 2.032  loss_dice_2: 2.163  loss_ce_3: 0.446  loss_mask_3: 2.022  loss_dice_3: 2.146  loss_ce_4: 0.4562  loss_mask_4: 2.031  loss_dice_4: 2.146  loss_ce_5: 0.471  loss_mask_5: 2.038  loss_dice_5: 2.157    time: 3.2342  last_time: 2.9789  data_time: 1.7850  last_data_time: 1.5562   lr: 0.00063651  max_mem: 12886M
[01/28 16:35:24] d2.utils.events INFO:  eta: 2:44:18  iter: 799  total_loss: 33.82  loss_ce: 0.5374  loss_mask: 2.047  loss_dice: 2.214  loss_ce_0: 0.5821  loss_mask_0: 2.014  loss_dice_0: 2.269  loss_ce_1: 0.5314  loss_mask_1: 2.026  loss_dice_1: 2.249  loss_ce_2: 0.539  loss_mask_2: 2.024  loss_dice_2: 2.212  loss_ce_3: 0.5452  loss_mask_3: 2.026  loss_dice_3: 2.208  loss_ce_4: 0.5378  loss_mask_4: 2.033  loss_dice_4: 2.207  loss_ce_5: 0.5322  loss_mask_5: 2.043  loss_dice_5: 2.22    time: 3.2329  last_time: 3.0502  data_time: 1.7401  last_data_time: 1.5918   lr: 0.00063332  max_mem: 12886M
[01/28 16:36:29] d2.utils.events INFO:  eta: 2:43:15  iter: 819  total_loss: 32.23  loss_ce: 0.4367  loss_mask: 1.999  loss_dice: 2.143  loss_ce_0: 0.5241  loss_mask_0: 2.003  loss_dice_0: 2.206  loss_ce_1: 0.4622  loss_mask_1: 1.989  loss_dice_1: 2.171  loss_ce_2: 0.4487  loss_mask_2: 2.006  loss_dice_2: 2.157  loss_ce_3: 0.4228  loss_mask_3: 2.005  loss_dice_3: 2.161  loss_ce_4: 0.4185  loss_mask_4: 1.989  loss_dice_4: 2.173  loss_ce_5: 0.4402  loss_mask_5: 2  loss_dice_5: 2.147    time: 3.2327  last_time: 2.8958  data_time: 1.7780  last_data_time: 1.4852   lr: 0.00063005  max_mem: 12886M
[01/28 16:37:33] d2.utils.events INFO:  eta: 2:42:14  iter: 839  total_loss: 31.97  loss_ce: 0.3655  loss_mask: 2.038  loss_dice: 2.138  loss_ce_0: 0.4704  loss_mask_0: 2.007  loss_dice_0: 2.169  loss_ce_1: 0.4037  loss_mask_1: 2.024  loss_dice_1: 2.164  loss_ce_2: 0.3748  loss_mask_2: 2.046  loss_dice_2: 2.145  loss_ce_3: 0.3878  loss_mask_3: 2.031  loss_dice_3: 2.134  loss_ce_4: 0.3742  loss_mask_4: 2.03  loss_dice_4: 2.142  loss_ce_5: 0.3662  loss_mask_5: 2.039  loss_dice_5: 2.148    time: 3.2320  last_time: 3.4969  data_time: 1.7652  last_data_time: 1.9909   lr: 0.00062672  max_mem: 12886M
[01/28 16:38:36] d2.utils.events INFO:  eta: 2:41:08  iter: 859  total_loss: 32.65  loss_ce: 0.4066  loss_mask: 2.042  loss_dice: 2.192  loss_ce_0: 0.5458  loss_mask_0: 1.998  loss_dice_0: 2.228  loss_ce_1: 0.4735  loss_mask_1: 2.022  loss_dice_1: 2.245  loss_ce_2: 0.4381  loss_mask_2: 2.024  loss_dice_2: 2.22  loss_ce_3: 0.409  loss_mask_3: 2.012  loss_dice_3: 2.206  loss_ce_4: 0.4172  loss_mask_4: 2.034  loss_dice_4: 2.196  loss_ce_5: 0.4081  loss_mask_5: 2.046  loss_dice_5: 2.185    time: 3.2309  last_time: 2.8847  data_time: 1.7456  last_data_time: 1.4685   lr: 0.00062332  max_mem: 12886M
[01/28 16:39:41] d2.utils.events INFO:  eta: 2:40:03  iter: 879  total_loss: 32.15  loss_ce: 0.348  loss_mask: 2.037  loss_dice: 2.181  loss_ce_0: 0.4593  loss_mask_0: 2.051  loss_dice_0: 2.155  loss_ce_1: 0.3761  loss_mask_1: 2.038  loss_dice_1: 2.183  loss_ce_2: 0.3402  loss_mask_2: 2.051  loss_dice_2: 2.177  loss_ce_3: 0.3177  loss_mask_3: 2.052  loss_dice_3: 2.186  loss_ce_4: 0.3597  loss_mask_4: 2.036  loss_dice_4: 2.181  loss_ce_5: 0.3477  loss_mask_5: 2.029  loss_dice_5: 2.186    time: 3.2304  last_time: 3.8699  data_time: 1.7689  last_data_time: 2.3768   lr: 0.00061985  max_mem: 12886M
[01/28 16:40:44] d2.utils.events INFO:  eta: 2:38:59  iter: 899  total_loss: 33.13  loss_ce: 0.4549  loss_mask: 2.1  loss_dice: 2.205  loss_ce_0: 0.5122  loss_mask_0: 2.081  loss_dice_0: 2.252  loss_ce_1: 0.4892  loss_mask_1: 2.114  loss_dice_1: 2.221  loss_ce_2: 0.4387  loss_mask_2: 2.104  loss_dice_2: 2.181  loss_ce_3: 0.4295  loss_mask_3: 2.096  loss_dice_3: 2.194  loss_ce_4: 0.4236  loss_mask_4: 2.09  loss_dice_4: 2.213  loss_ce_5: 0.4204  loss_mask_5: 2.091  loss_dice_5: 2.2    time: 3.2294  last_time: 2.9824  data_time: 1.7496  last_data_time: 1.5567   lr: 0.00061632  max_mem: 12886M
[01/28 16:41:48] d2.utils.events INFO:  eta: 2:37:56  iter: 919  total_loss: 31.65  loss_ce: 0.3876  loss_mask: 1.951  loss_dice: 2.123  loss_ce_0: 0.453  loss_mask_0: 1.954  loss_dice_0: 2.169  loss_ce_1: 0.4289  loss_mask_1: 1.969  loss_dice_1: 2.164  loss_ce_2: 0.4052  loss_mask_2: 1.941  loss_dice_2: 2.122  loss_ce_3: 0.4  loss_mask_3: 1.948  loss_dice_3: 2.112  loss_ce_4: 0.4002  loss_mask_4: 1.939  loss_dice_4: 2.123  loss_ce_5: 0.3871  loss_mask_5: 1.942  loss_dice_5: 2.111    time: 3.2286  last_time: 3.4003  data_time: 1.7483  last_data_time: 1.9446   lr: 0.00061272  max_mem: 12886M
[01/28 16:42:51] d2.utils.events INFO:  eta: 2:36:51  iter: 939  total_loss: 31.5  loss_ce: 0.4158  loss_mask: 2.014  loss_dice: 2.091  loss_ce_0: 0.5254  loss_mask_0: 1.978  loss_dice_0: 2.109  loss_ce_1: 0.4329  loss_mask_1: 2.011  loss_dice_1: 2.103  loss_ce_2: 0.4104  loss_mask_2: 2.016  loss_dice_2: 2.064  loss_ce_3: 0.4031  loss_mask_3: 2.009  loss_dice_3: 2.062  loss_ce_4: 0.4078  loss_mask_4: 2.01  loss_dice_4: 2.074  loss_ce_5: 0.3989  loss_mask_5: 2.026  loss_dice_5: 2.076    time: 3.2267  last_time: 2.9323  data_time: 1.6949  last_data_time: 1.5160   lr: 0.00060906  max_mem: 12886M
[01/28 16:43:55] d2.utils.events INFO:  eta: 2:35:41  iter: 959  total_loss: 32.15  loss_ce: 0.4226  loss_mask: 2.055  loss_dice: 2.135  loss_ce_0: 0.4808  loss_mask_0: 2.049  loss_dice_0: 2.191  loss_ce_1: 0.418  loss_mask_1: 2.059  loss_dice_1: 2.17  loss_ce_2: 0.396  loss_mask_2: 2.054  loss_dice_2: 2.155  loss_ce_3: 0.3789  loss_mask_3: 2.068  loss_dice_3: 2.141  loss_ce_4: 0.4043  loss_mask_4: 2.068  loss_dice_4: 2.138  loss_ce_5: 0.4354  loss_mask_5: 2.069  loss_dice_5: 2.137    time: 3.2264  last_time: 2.9876  data_time: 1.7689  last_data_time: 1.5638   lr: 0.00060533  max_mem: 12886M
[01/28 16:44:59] d2.utils.events INFO:  eta: 2:34:37  iter: 979  total_loss: 31.91  loss_ce: 0.352  loss_mask: 1.969  loss_dice: 2.11  loss_ce_0: 0.4828  loss_mask_0: 1.958  loss_dice_0: 2.112  loss_ce_1: 0.3645  loss_mask_1: 2.004  loss_dice_1: 2.094  loss_ce_2: 0.352  loss_mask_2: 1.954  loss_dice_2: 2.107  loss_ce_3: 0.3459  loss_mask_3: 1.956  loss_dice_3: 2.097  loss_ce_4: 0.3581  loss_mask_4: 1.949  loss_dice_4: 2.09  loss_ce_5: 0.3389  loss_mask_5: 1.958  loss_dice_5: 2.095    time: 3.2252  last_time: 2.9140  data_time: 1.7309  last_data_time: 1.4902   lr: 0.00060154  max_mem: 12886M
[01/28 16:46:04] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2048, sample_style='choice')]
[01/28 16:46:04] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[01/28 16:46:04] d2.data.common INFO: Serializing 992 elements to byte tensors and concatenating them all ...
[01/28 16:46:04] d2.data.common INFO: Serialized dataset takes 0.14 MiB
[01/28 16:46:04] d2.evaluation.evaluator INFO: Start inference on 992 batches
[01/28 16:46:06] d2.evaluation.evaluator INFO: Inference done 11/992. Dataloading: 0.0397 s/iter. Inference: 0.0995 s/iter. Eval: 0.0511 s/iter. Total: 0.1903 s/iter. ETA=0:03:06
[01/28 16:46:11] d2.evaluation.evaluator INFO: Inference done 36/992. Dataloading: 0.0468 s/iter. Inference: 0.0993 s/iter. Eval: 0.0525 s/iter. Total: 0.1987 s/iter. ETA=0:03:09
[01/28 16:46:16] d2.evaluation.evaluator INFO: Inference done 57/992. Dataloading: 0.0553 s/iter. Inference: 0.0994 s/iter. Eval: 0.0616 s/iter. Total: 0.2164 s/iter. ETA=0:03:22
[01/28 16:46:21] d2.evaluation.evaluator INFO: Inference done 82/992. Dataloading: 0.0533 s/iter. Inference: 0.0995 s/iter. Eval: 0.0583 s/iter. Total: 0.2111 s/iter. ETA=0:03:12
[01/28 16:46:26] d2.evaluation.evaluator INFO: Inference done 106/992. Dataloading: 0.0531 s/iter. Inference: 0.0994 s/iter. Eval: 0.0579 s/iter. Total: 0.2105 s/iter. ETA=0:03:06
[01/28 16:46:32] d2.evaluation.evaluator INFO: Inference done 129/992. Dataloading: 0.0543 s/iter. Inference: 0.0995 s/iter. Eval: 0.0592 s/iter. Total: 0.2131 s/iter. ETA=0:03:03
[01/28 16:46:37] d2.evaluation.evaluator INFO: Inference done 154/992. Dataloading: 0.0536 s/iter. Inference: 0.0995 s/iter. Eval: 0.0580 s/iter. Total: 0.2112 s/iter. ETA=0:02:57
[01/28 16:46:42] d2.evaluation.evaluator INFO: Inference done 178/992. Dataloading: 0.0535 s/iter. Inference: 0.0995 s/iter. Eval: 0.0579 s/iter. Total: 0.2109 s/iter. ETA=0:02:51
[01/28 16:46:47] d2.evaluation.evaluator INFO: Inference done 201/992. Dataloading: 0.0539 s/iter. Inference: 0.0996 s/iter. Eval: 0.0586 s/iter. Total: 0.2121 s/iter. ETA=0:02:47
[01/28 16:46:52] d2.evaluation.evaluator INFO: Inference done 227/992. Dataloading: 0.0531 s/iter. Inference: 0.0996 s/iter. Eval: 0.0576 s/iter. Total: 0.2102 s/iter. ETA=0:02:40
[01/28 16:46:57] d2.evaluation.evaluator INFO: Inference done 250/992. Dataloading: 0.0536 s/iter. Inference: 0.0996 s/iter. Eval: 0.0581 s/iter. Total: 0.2113 s/iter. ETA=0:02:36
[01/28 16:47:02] d2.evaluation.evaluator INFO: Inference done 274/992. Dataloading: 0.0536 s/iter. Inference: 0.0996 s/iter. Eval: 0.0579 s/iter. Total: 0.2111 s/iter. ETA=0:02:31
[01/28 16:47:07] d2.evaluation.evaluator INFO: Inference done 299/992. Dataloading: 0.0533 s/iter. Inference: 0.0995 s/iter. Eval: 0.0575 s/iter. Total: 0.2103 s/iter. ETA=0:02:25
[01/28 16:47:12] d2.evaluation.evaluator INFO: Inference done 322/992. Dataloading: 0.0538 s/iter. Inference: 0.0995 s/iter. Eval: 0.0582 s/iter. Total: 0.2115 s/iter. ETA=0:02:21
[01/28 16:47:17] d2.evaluation.evaluator INFO: Inference done 347/992. Dataloading: 0.0535 s/iter. Inference: 0.0995 s/iter. Eval: 0.0579 s/iter. Total: 0.2110 s/iter. ETA=0:02:16
[01/28 16:47:22] d2.evaluation.evaluator INFO: Inference done 373/992. Dataloading: 0.0531 s/iter. Inference: 0.0995 s/iter. Eval: 0.0573 s/iter. Total: 0.2099 s/iter. ETA=0:02:09
[01/28 16:47:27] d2.evaluation.evaluator INFO: Inference done 394/992. Dataloading: 0.0538 s/iter. Inference: 0.0995 s/iter. Eval: 0.0581 s/iter. Total: 0.2115 s/iter. ETA=0:02:06
[01/28 16:47:33] d2.evaluation.evaluator INFO: Inference done 420/992. Dataloading: 0.0534 s/iter. Inference: 0.0995 s/iter. Eval: 0.0576 s/iter. Total: 0.2105 s/iter. ETA=0:02:00
[01/28 16:47:38] d2.evaluation.evaluator INFO: Inference done 446/992. Dataloading: 0.0531 s/iter. Inference: 0.0994 s/iter. Eval: 0.0573 s/iter. Total: 0.2099 s/iter. ETA=0:01:54
[01/28 16:47:43] d2.evaluation.evaluator INFO: Inference done 468/992. Dataloading: 0.0535 s/iter. Inference: 0.0994 s/iter. Eval: 0.0578 s/iter. Total: 0.2108 s/iter. ETA=0:01:50
[01/28 16:47:48] d2.evaluation.evaluator INFO: Inference done 493/992. Dataloading: 0.0533 s/iter. Inference: 0.0994 s/iter. Eval: 0.0576 s/iter. Total: 0.2104 s/iter. ETA=0:01:44
[01/28 16:47:53] d2.evaluation.evaluator INFO: Inference done 518/992. Dataloading: 0.0532 s/iter. Inference: 0.0994 s/iter. Eval: 0.0575 s/iter. Total: 0.2102 s/iter. ETA=0:01:39
[01/28 16:47:58] d2.evaluation.evaluator INFO: Inference done 541/992. Dataloading: 0.0535 s/iter. Inference: 0.0994 s/iter. Eval: 0.0578 s/iter. Total: 0.2107 s/iter. ETA=0:01:35
[01/28 16:48:03] d2.evaluation.evaluator INFO: Inference done 567/992. Dataloading: 0.0532 s/iter. Inference: 0.0994 s/iter. Eval: 0.0574 s/iter. Total: 0.2102 s/iter. ETA=0:01:29
[01/28 16:48:08] d2.evaluation.evaluator INFO: Inference done 590/992. Dataloading: 0.0534 s/iter. Inference: 0.0994 s/iter. Eval: 0.0577 s/iter. Total: 0.2105 s/iter. ETA=0:01:24
[01/28 16:48:14] d2.evaluation.evaluator INFO: Inference done 614/992. Dataloading: 0.0535 s/iter. Inference: 0.0994 s/iter. Eval: 0.0578 s/iter. Total: 0.2107 s/iter. ETA=0:01:19
[01/28 16:48:19] d2.evaluation.evaluator INFO: Inference done 640/992. Dataloading: 0.0532 s/iter. Inference: 0.0994 s/iter. Eval: 0.0575 s/iter. Total: 0.2102 s/iter. ETA=0:01:13
[01/28 16:48:24] d2.evaluation.evaluator INFO: Inference done 663/992. Dataloading: 0.0535 s/iter. Inference: 0.0994 s/iter. Eval: 0.0578 s/iter. Total: 0.2107 s/iter. ETA=0:01:09
[01/28 16:48:29] d2.evaluation.evaluator INFO: Inference done 688/992. Dataloading: 0.0534 s/iter. Inference: 0.0994 s/iter. Eval: 0.0576 s/iter. Total: 0.2105 s/iter. ETA=0:01:03
[01/28 16:48:34] d2.evaluation.evaluator INFO: Inference done 714/992. Dataloading: 0.0532 s/iter. Inference: 0.0994 s/iter. Eval: 0.0574 s/iter. Total: 0.2100 s/iter. ETA=0:00:58
[01/28 16:48:39] d2.evaluation.evaluator INFO: Inference done 736/992. Dataloading: 0.0535 s/iter. Inference: 0.0994 s/iter. Eval: 0.0578 s/iter. Total: 0.2107 s/iter. ETA=0:00:53
[01/28 16:48:44] d2.evaluation.evaluator INFO: Inference done 761/992. Dataloading: 0.0534 s/iter. Inference: 0.0994 s/iter. Eval: 0.0576 s/iter. Total: 0.2105 s/iter. ETA=0:00:48
[01/28 16:48:49] d2.evaluation.evaluator INFO: Inference done 787/992. Dataloading: 0.0533 s/iter. Inference: 0.0994 s/iter. Eval: 0.0574 s/iter. Total: 0.2101 s/iter. ETA=0:00:43
[01/28 16:48:55] d2.evaluation.evaluator INFO: Inference done 809/992. Dataloading: 0.0536 s/iter. Inference: 0.0994 s/iter. Eval: 0.0577 s/iter. Total: 0.2108 s/iter. ETA=0:00:38
[01/28 16:49:00] d2.evaluation.evaluator INFO: Inference done 835/992. Dataloading: 0.0534 s/iter. Inference: 0.0994 s/iter. Eval: 0.0576 s/iter. Total: 0.2104 s/iter. ETA=0:00:33
[01/28 16:49:05] d2.evaluation.evaluator INFO: Inference done 860/992. Dataloading: 0.0533 s/iter. Inference: 0.0994 s/iter. Eval: 0.0575 s/iter. Total: 0.2103 s/iter. ETA=0:00:27
[01/28 16:49:10] d2.evaluation.evaluator INFO: Inference done 883/992. Dataloading: 0.0535 s/iter. Inference: 0.0994 s/iter. Eval: 0.0577 s/iter. Total: 0.2107 s/iter. ETA=0:00:22
[01/28 16:49:15] d2.evaluation.evaluator INFO: Inference done 908/992. Dataloading: 0.0534 s/iter. Inference: 0.0994 s/iter. Eval: 0.0577 s/iter. Total: 0.2105 s/iter. ETA=0:00:17
[01/28 16:49:20] d2.evaluation.evaluator INFO: Inference done 932/992. Dataloading: 0.0534 s/iter. Inference: 0.0994 s/iter. Eval: 0.0577 s/iter. Total: 0.2106 s/iter. ETA=0:00:12
[01/28 16:49:25] d2.evaluation.evaluator INFO: Inference done 955/992. Dataloading: 0.0535 s/iter. Inference: 0.0994 s/iter. Eval: 0.0578 s/iter. Total: 0.2108 s/iter. ETA=0:00:07
[01/28 16:49:31] d2.evaluation.evaluator INFO: Inference done 981/992. Dataloading: 0.0534 s/iter. Inference: 0.0994 s/iter. Eval: 0.0576 s/iter. Total: 0.2105 s/iter. ETA=0:00:02
[01/28 16:49:33] d2.evaluation.evaluator INFO: Total inference time: 0:03:27.569452 (0.210303 s / iter per device, on 1 devices)
[01/28 16:49:33] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:38 (0.099388 s / iter per device, on 1 devices)
[01/28 16:49:33] d2.evaluation.sem_seg_evaluation INFO: OrderedDict([('sem_seg', {'mIoU': 43.80460665268172, 'fwIoU': 50.30123367988048, 'IoU-background': 99.8141598222243, 'BoundaryIoU-background': 65.9921078500906, 'min(IoU, B-Iou)-background': 65.9921078500906, 'IoU-building': 55.01093041711407, 'BoundaryIoU-building': 23.408024905831102, 'min(IoU, B-Iou)-building': 23.408024905831102, 'IoU-road': 19.77174316044687, 'BoundaryIoU-road': 13.880597379215551, 'min(IoU, B-Iou)-road': 13.880597379215551, 'IoU-water': 34.284223866106124, 'BoundaryIoU-water': 24.00245454121262, 'min(IoU, B-Iou)-water': 24.00245454121262, 'IoU-barren': 64.05865563431156, 'BoundaryIoU-barren': 22.00032894806232, 'min(IoU, B-Iou)-barren': 22.00032894806232, 'IoU-forest': 21.26554197890642, 'BoundaryIoU-forest': 7.4358197260251435, 'min(IoU, B-Iou)-forest': 7.4358197260251435, 'IoU-agriculture': 12.426991689662687, 'BoundaryIoU-agriculture': 1.6901560684493135, 'min(IoU, B-Iou)-agriculture': 1.6901560684493135, 'mACC': 57.98632053911575, 'pACC': 63.415006490444114, 'ACC-background': 99.89234365715441, 'ACC-building': 68.38917619575668, 'ACC-road': 89.25209727785625, 'ACC-water': 39.522369073425665, 'ACC-barren': 70.16392503991901, 'ACC-forest': 24.809152427752686, 'ACC-agriculture': 13.875180101945572})])
[01/28 16:49:33] d2.engine.defaults INFO: Evaluation results for loveda_val in csv format:
[01/28 16:49:33] d2.evaluation.testing INFO: copypaste: Task: sem_seg
[01/28 16:49:33] d2.evaluation.testing INFO: copypaste: mIoU,fwIoU,mACC,pACC
[01/28 16:49:33] d2.evaluation.testing INFO: copypaste: 43.8046,50.3012,57.9863,63.4150
[01/28 16:49:33] d2.utils.events INFO:  eta: 2:33:35  iter: 999  total_loss: 32.23  loss_ce: 0.448  loss_mask: 2.015  loss_dice: 2.104  loss_ce_0: 0.489  loss_mask_0: 2.022  loss_dice_0: 2.184  loss_ce_1: 0.4393  loss_mask_1: 2.026  loss_dice_1: 2.141  loss_ce_2: 0.421  loss_mask_2: 2.028  loss_dice_2: 2.125  loss_ce_3: 0.4553  loss_mask_3: 2.015  loss_dice_3: 2.118  loss_ce_4: 0.4213  loss_mask_4: 2.021  loss_dice_4: 2.114  loss_ce_5: 0.4274  loss_mask_5: 2.019  loss_dice_5: 2.113    time: 3.2260  last_time: 2.9475  data_time: 1.8129  last_data_time: 1.5190   lr: 0.00059768  max_mem: 12886M
[01/28 16:50:22] d2.engine.hooks INFO: Overall training speed: 1012 iterations in 0:54:28 (3.2294 s / it)
[01/28 16:50:22] d2.engine.hooks INFO: Total training time: 1:01:36 (0:07:08 on hooks)
[01/28 16:50:22] d2.utils.events INFO:  eta: 2:32:52  iter: 1014  total_loss: 32.22  loss_ce: 0.3652  loss_mask: 1.998  loss_dice: 2.147  loss_ce_0: 0.4493  loss_mask_0: 1.985  loss_dice_0: 2.178  loss_ce_1: 0.3806  loss_mask_1: 1.989  loss_dice_1: 2.177  loss_ce_2: 0.403  loss_mask_2: 1.994  loss_dice_2: 2.137  loss_ce_3: 0.3891  loss_mask_3: 2.006  loss_dice_3: 2.154  loss_ce_4: 0.358  loss_mask_4: 2.012  loss_dice_4: 2.159  loss_ce_5: 0.375  loss_mask_5: 2.013  loss_dice_5: 2.149    time: 3.2267  last_time: 3.7518  data_time: 1.8180  last_data_time: 2.2383   lr: 0.00059495  max_mem: 12886M
